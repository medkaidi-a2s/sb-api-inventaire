2025-10-05 12:36:16 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-05 12:36:16 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 17276 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-10-05 12:36:16 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 12:36:17 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-05 12:36:17 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 12:36:17 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 12:36:27 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-05 12:36:27 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 12:36:28 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 971 ms. Found 23 JPA repository interfaces.
2025-10-05 12:36:36 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 12:36:36 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-05 12:36:36 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 12:36:36 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-05 12:36:36 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-05 12:36:36 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 19402 ms
2025-10-05 12:36:39 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 12:36:42 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@48f7124
2025-10-05 12:36:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 12:36:42 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 12:36:42 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-05 12:36:42 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-05 12:36:43 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 12:36:44 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 12:36:45 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-05 12:36:49 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 12:36:50 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 12:36:50 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 12:36:54 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-05 12:36:54 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 12:36:55 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 12:36:58 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-05 12:37:02 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05 12:37:06 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-05 12:37:12 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 12:37:13 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-05 12:37:13 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-05 12:37:13 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 61.082 seconds (process running for 74.604)
2025-10-05 12:40:59 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 12:40:59 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 12:40:59 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2025-10-05 12:40:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:40:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:40:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.5
2025-10-05 12:40:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:00 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-10-05 12:41:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-10-05 12:41:01 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-10-05 12:41:07 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId s.benmammar : 1
2025-10-05 12:41:07 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:s.benmammar
2025-10-05 12:41:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:s.benmammar
2025-10-05 12:41:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is s.benmammar
2025-10-05 12:41:07 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@4ccb511c, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 12:41:07 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@4ccb511c, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 12:41:07 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-10-05 12:41:07 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.5
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:41:08 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:41:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:41:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.5
2025-10-05 12:41:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:29 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-10-05 12:41:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-10-05 12:41:29 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-10-05 12:41:33 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-10-05 12:41:33 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-10-05 12:41:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-10-05 12:41:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-10-05 12:41:33 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@70b84e2f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 12:41:33 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@70b84e2f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 12:41:33 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-10-05 12:41:33 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.5
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:41:34 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6007462a]
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6007462a]
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:41:40 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4b771709]
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4b771709]
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:42:02 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:45:40 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4dbd884c]
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4dbd884c]
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:45:41 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:45:56 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6e693709]
2025-10-05 12:46:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6e693709]
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@27995ebb]
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@27995ebb]
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:46:27 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2d640357]
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2d640357]
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:46:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@16986e1e]
2025-10-05 12:47:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@16986e1e]
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:47:13 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4642d03a]
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4642d03a]
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:47:20 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:47:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@11e34522]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@11e34522]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@301be9b2]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@301be9b2]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:49:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:54:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:55:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:56:04 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1d5bae03]
2025-10-05 12:56:09 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1d5bae03]
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:56:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@49dc5333]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@49dc5333]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:57:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:57:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6eb99e8d]
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6eb99e8d]
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:57:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:57:46 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.5
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:58:40 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@75b46b37]
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@75b46b37]
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:58:43 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 12:58:45 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 14:12:24 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h5m11s804ms989µs900ns).
2025-10-05 14:28:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:28:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.7
2025-10-05 14:28:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:41 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-10-05 14:28:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-10-05 14:28:41 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-10-05 14:28:45 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-10-05 14:28:45 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-10-05 14:28:45 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-10-05 14:28:45 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:28:45 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-10-05 14:28:45 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@1c0f410d, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 14:28:45 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@1c0f410d, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 14:28:45 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-10-05 14:28:45 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.7
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:28:47 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/liste-commandes - ADRESSE : 192.168.1.7
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/liste-commandes - ADRESSE : 192.168.1.7
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesColisage | Args | request : CommandeColisageRequest(dateDebut=05/10/2025, dateFin=05/10/2025, statutPrepare=false, rotation=null, page=1, search=null)
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getCommandesColisage | Args | dateDebut : 05/10/2025, dateFin : 05/10/2025, statutPrepare : 0, page : 1, rotation: null
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesColisage | Args | request : CommandeColisageRequest(dateDebut=05/10/2025, dateFin=05/10/2025, statutPrepare=false, rotation=null, page=1, search=null)
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getCommandesColisage | Args | dateDebut : 05/10/2025, dateFin : 05/10/2025, statutPrepare : 0, page : 1, rotation: null
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | projections.size=0
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | listeCommandes.size=0
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | projections.size=0
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | listeCommandes.size=0
2025-10-05 14:28:52 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/liste-commandes - ADRESSE : 192.168.1.7
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/liste-commandes - ADRESSE : 192.168.1.7
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesColisage | Args | request : CommandeColisageRequest(dateDebut=05/10/2025, dateFin=05/10/2025, statutPrepare=true, rotation=null, page=1, search=null)
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getCommandesColisage | Args | dateDebut : 05/10/2025, dateFin : 05/10/2025, statutPrepare : 1, page : 1, rotation: null
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesColisage | Args | request : CommandeColisageRequest(dateDebut=05/10/2025, dateFin=05/10/2025, statutPrepare=true, rotation=null, page=1, search=null)
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getCommandesColisage | Args | dateDebut : 05/10/2025, dateFin : 05/10/2025, statutPrepare : 1, page : 1, rotation: null
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | projections.size=0
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | projections.size=0
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | listeCommandes.size=0
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | listeCommandes.size=0
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-10-05 14:28:54 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/liste-commandes - ADRESSE : 192.168.1.7
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/liste-commandes - ADRESSE : 192.168.1.7
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesColisage | Args | request : CommandeColisageRequest(dateDebut=01/06/2025, dateFin=05/10/2025, statutPrepare=true, rotation=null, page=1, search=null)
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesColisage | Args | request : CommandeColisageRequest(dateDebut=01/06/2025, dateFin=05/10/2025, statutPrepare=true, rotation=null, page=1, search=null)
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getCommandesColisage | Args | dateDebut : 01/06/2025, dateFin : 05/10/2025, statutPrepare : 1, page : 1, rotation: null
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getCommandesColisage | Args | dateDebut : 01/06/2025, dateFin : 05/10/2025, statutPrepare : 1, page : 1, rotation: null
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | projections.size=10
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | projections.size=10
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the total records from the projections | totalRecords=21
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the total records from the projections | totalRecords=21
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | listeCommandes.size=10
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=10
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | listeCommandes.size=10
2025-10-05 14:29:04 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=10
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/liste-commandes - ADRESSE : 192.168.1.7
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesColisage | Args | request : CommandeColisageRequest(dateDebut=01/06/2025, dateFin=05/10/2025, statutPrepare=true, rotation=null, page=2, search=null)
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getCommandesColisage | Args | dateDebut : 01/06/2025, dateFin : 05/10/2025, statutPrepare : 1, page : 2, rotation: null
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | projections.size=10
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Fetched the total records from the projections | totalRecords=21
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | listeCommandes.size=10
2025-10-05 14:29:12 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=10
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:29:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[2]
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes/get-colisage - ADRESSE : 192.168.1.7
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageCommande | Args | id=CmdIdDto(cmpId=1, id=1594, type=1, stkCode=1)
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageCommande | Args | id=CmdIdDto(cmpId=1, id=1594, type=1, stkCode=1)
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@1494756f
2025-10-05 14:29:46 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=0, colisD=0, frigo=0, psycho=0, chers=0, sachet=0, bacs=0, palettes=0]
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/get-etiquettes - ADRESSE : 192.168.1.7
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getEtiquettesColisage | Args | id=CmdIdDto(cmpId=1, id=1595, type=1, stkCode=1)
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getEtiquettesColis | Args | id=CmdIdDto(cmpId=1, id=1595, type=1, stkCode=1)
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Fetched the etiquettes from the repo | etiquettes.size=9
2025-10-05 14:29:50 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the etiquettes from the service | etiquettes.size=9
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes/get-colisage - ADRESSE : 192.168.1.7
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageCommande | Args | id=CmdIdDto(cmpId=1, id=1594, type=1, stkCode=1)
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageCommande | Args | id=CmdIdDto(cmpId=1, id=1594, type=1, stkCode=1)
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@4e24a7b4
2025-10-05 14:29:55 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=0, colisD=0, frigo=0, psycho=0, chers=0, sachet=0, bacs=0, palettes=0]
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes/get-colisage - ADRESSE : 192.168.1.7
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageCommande | Args | id=CmdIdDto(cmpId=1, id=1594, type=1, stkCode=1)
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageCommande | Args | id=CmdIdDto(cmpId=1, id=1594, type=1, stkCode=1)
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@245ac0cd
2025-10-05 14:30:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=0, colisD=0, frigo=0, psycho=0, chers=0, sachet=0, bacs=0, palettes=0]
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/liste-bacs - ADRESSE : 192.168.1.7
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getListeBacs
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getListeBacs
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the bacs from the repo | bacs.size=9
2025-10-05 14:30:18 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the bacs from the service | bacs.size=9
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/get-etiquettes - ADRESSE : 192.168.1.7
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getEtiquettesColisage | Args | id=CmdIdDto(cmpId=1, id=1595, type=1, stkCode=1)
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getEtiquettesColis | Args | id=CmdIdDto(cmpId=1, id=1595, type=1, stkCode=1)
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the etiquettes from the repo | etiquettes.size=9
2025-10-05 14:30:44 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the etiquettes from the service | etiquettes.size=9
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.7
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.7
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/control - ADRESSE : 192.168.1.7
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.controllers.UserController - Entering the getControlAuthorization method from the UserController
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Entering the getControlAuthorization method from the AuthorizationService for formCode 482
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation du contrôle 1
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-7] d.a.a.controllers.UserController - Control Authorization recieved from the service : AuthorizationDto[code=482, value=1]
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-10-05
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-10-05
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-10-05
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-10-05
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-10-05
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-10-05 14:31:32 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-10-05
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.7
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.7
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-06
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-06
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-06
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-06
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 2
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 2
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-06
2025-10-05 14:31:39 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-06
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.7
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1594 type : 1 stkCode : 1 zone : Optional[10]
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.7
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.7
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1594, type=1, stkCode=1, zone=10)
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1594, type=1, stkCode=1, zone=10)
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@2ce8f561
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=0, colisD=0, frigo=0, psycho=0, chers=0, sachet=0, bacs=null, palettes=null]
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-10-05 14:31:42 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.7
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-06
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-06
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 2
2025-10-05 14:31:48 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-06
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.7
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.7
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.7
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1594 type : 1 stkCode : 1 zone : Optional[10]
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1594, type=1, stkCode=1, zone=10)
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1594, type=1, stkCode=1, zone=10)
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@41c199c7
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=0, colisD=0, frigo=0, psycho=0, chers=0, sachet=0, bacs=null, palettes=null]
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-10-05 14:31:50 INFO  [http-nio-8080-exec-10] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.7
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-06
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-06
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 2
2025-10-05 14:32:58 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-06
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.7
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1594 type : 1 stkCode : 1 zone : Optional[10]
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.7
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.7
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1594, type=1, stkCode=1, zone=10)
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1594, type=1, stkCode=1, zone=10)
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@78a82975
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=0, colisD=0, frigo=0, psycho=0, chers=0, sachet=0, bacs=null, palettes=null]
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-10-05 14:33:00 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 14:49:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 14:49:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 14:49:57 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 14:49:57 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 14:49:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 14:49:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 14:49:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 14:49:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 14:49:57 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:01:01 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:05:47 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:15:02 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:19:25 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.5
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.5
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:27:55 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@be9483f]
2025-10-05 15:27:59 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@be9483f]
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:28:02 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.7
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:39:23 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.7
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.7
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.7
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7acdb68e]
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7acdb68e]
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:39:28 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.7
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:39:36 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.7
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.7
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7581ce27]
2025-10-05 15:39:41 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7581ce27]
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.7
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:39:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.5
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@61baa7ec]
2025-10-05 15:50:56 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@61baa7ec]
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:51:01 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.7
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:51:26 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.7
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.7
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.7
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1d0fa0d6]
2025-10-05 15:51:32 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1d0fa0d6]
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.7
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:51:35 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.7
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 15:58:04 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.7
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.7
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.7
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.7
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2274d2e6]
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2274d2e6]
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:58:09 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.7
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 15:58:14 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:18:35 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 16:18:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 16:18:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 16:18:44 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-05 16:18:44 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 4744 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-10-05 16:18:44 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 16:18:44 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-05 16:18:44 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 16:18:44 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 16:18:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-05 16:18:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 16:18:47 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 118 ms. Found 23 JPA repository interfaces.
2025-10-05 16:18:48 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 16:18:48 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-05 16:18:48 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 16:18:48 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-05 16:18:48 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-05 16:18:48 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3261 ms
2025-10-05 16:18:48 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 16:18:49 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@d6955de
2025-10-05 16:18:49 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 16:18:49 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 16:18:49 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-05 16:18:49 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-05 16:18:49 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 16:18:49 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 16:18:49 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-05 16:18:50 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 16:18:50 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 16:18:50 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 16:18:51 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-05 16:18:51 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 16:18:51 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 16:18:52 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-05 16:18:52 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05 16:18:53 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-05 16:18:54 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 16:18:54 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-05 16:18:54 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-05 16:18:54 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 10.445 seconds (process running for 12.279)
2025-10-05 16:20:07 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 16:20:07 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 16:20:07 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 16:21:29 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-05 16:21:29 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 16148 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-10-05 16:21:29 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 16:21:29 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-05 16:21:29 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 16:21:29 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 16:21:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-05 16:21:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 16:21:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 129 ms. Found 23 JPA repository interfaces.
2025-10-05 16:21:31 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 16:21:31 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-05 16:21:31 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 16:21:31 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-05 16:21:31 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-05 16:21:31 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2603 ms
2025-10-05 16:21:32 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 16:21:32 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@60337c8c
2025-10-05 16:21:32 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 16:21:32 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 16:21:32 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-05 16:21:32 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-05 16:21:33 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 16:21:33 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 16:21:33 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-05 16:21:33 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 16:21:34 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 16:21:34 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 16:21:34 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-05 16:21:34 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 16:21:35 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 16:21:35 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-05 16:21:36 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05 16:21:37 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-05 16:21:38 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 16:21:38 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-05 16:21:38 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-05 16:21:38 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 9.863 seconds (process running for 10.304)
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.5
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.5
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:26:06 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:29:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.6
2025-10-05 16:29:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:05 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-10-05 16:29:05 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-10-05 16:29:05 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-10-05 16:29:09 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId s.benmammar : 1
2025-10-05 16:29:09 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:s.benmammar
2025-10-05 16:29:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:s.benmammar
2025-10-05 16:29:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is s.benmammar
2025-10-05 16:29:09 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@59de6a47, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 16:29:09 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@59de6a47, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 16:29:09 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-10-05 16:29:09 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:29:10 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@366d61fe]
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:29:13 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@366d61fe]
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:29:16 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:29:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:29:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:29:19 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:29:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:29:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:29:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:29:19 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:29:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.6
2025-10-05 16:29:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:49 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-10-05 16:29:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-10-05 16:29:49 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-10-05 16:29:55 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-10-05 16:29:55 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-10-05 16:29:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-10-05 16:29:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-10-05 16:29:55 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@5a04fceb, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 16:29:55 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@5a04fceb, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 16:29:55 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-10-05 16:29:55 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:29:56 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6d163781]
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6d163781]
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:29:58 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:30:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:30:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:33:49 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@480d5cd]
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@480d5cd]
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:33:54 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:33:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:34:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@115c7232]
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@115c7232]
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:34:13 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:34:15 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:34:17 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@628ecc8a]
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@628ecc8a]
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:34:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:34:24 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:34:25 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@57673400]
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@57673400]
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:34:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:34:47 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:34:49 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:36:07 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4fcc84ea]
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4fcc84ea]
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:39:49 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:39:51 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:39:52 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:41:39 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:41:43 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:42:50 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:42:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:42:58 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:40 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:43:49 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:02 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:07 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:36 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:50 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:51 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:54 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:44:56 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:45:18 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:45:21 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:46:15 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@c6c131]
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@c6c131]
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:46:19 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:46:22 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:46:23 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1a7a3182]
2025-10-05 16:51:38 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1a7a3182]
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:51:40 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:41 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:52 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:51:53 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:44 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=3)
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=3
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=4)
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=4
2025-10-05 16:52:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=5)
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=5
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=6)
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=6
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=7)
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=7
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=8)
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=8
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=9)
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=9
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=10)
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=10
2025-10-05 16:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=11)
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=11
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=12)
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=12
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=13)
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=13
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=14)
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=14
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=15)
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=15
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=16)
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=16
2025-10-05 16:52:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=17)
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=17
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:50 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=3)
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=3
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=4)
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=4
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=5)
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=5
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=6)
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=6
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=7)
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=7
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=8)
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=8
2025-10-05 16:52:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=9)
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=9
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=10)
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=11)
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=11
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=12)
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=12
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=13)
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=13
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=14)
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=14
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:53 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=15)
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=15
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=16)
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=16
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=17)
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=17
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=18)
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=18
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=19)
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=19
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=20)
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=20
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=21)
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=21
2025-10-05 16:52:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=22)
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=22
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=23)
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=23
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=24)
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=24
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=25)
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=25
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=26)
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=26
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=27)
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=27
2025-10-05 16:52:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=28)
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=28
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=29)
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=29
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=30)
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=30
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=31)
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=31
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=32)
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=32
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=33)
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=33
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:56 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=34)
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=34
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=35)
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=35
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=36)
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=36
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=37)
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=37
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=38)
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=38
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=39)
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=39
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:57 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=40)
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=40
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=41)
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=41
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=42)
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=42
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=43)
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=43
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=44)
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=44
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=45)
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=45
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=46)
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=46
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=47)
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=47
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=48)
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=48
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=49)
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=49
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=50)
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=50
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=51)
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=51
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:52:59 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=52)
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=52
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=53)
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=53
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=54)
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=54
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=55)
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=55
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=56)
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=56
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=57)
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=57
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=58)
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=58
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=59)
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=59
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=60)
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=60
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=61)
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=61
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=62)
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=62
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=63)
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=63
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:01 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=64)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=64
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=65)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=65
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=3)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=3
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=66)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=66
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=4)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=4
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=67)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=67
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=5)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=5
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=68)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=68
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=6)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=69)
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=69
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=7)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=7
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=70)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=70
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=8)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=8
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=71)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=71
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=9)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=9
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=72)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=72
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=10)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=73)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=73
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=11)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=11
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=74)
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=74
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:03 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=75)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=75
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=12)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=12
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=76)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=76
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=13)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=13
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=77)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=77
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=14)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=14
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=78)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=78
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=15)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=15
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=79)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=79
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=16)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=16
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=80)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=80
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=17)
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=17
2025-10-05 16:53:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=81)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=81
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=18)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=18
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=82)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=82
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=19)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=19
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=83)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=83
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=20)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=20
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=84)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=84
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=21)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=21
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=85)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=85
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=86)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=86
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=22)
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=22
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=87)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=87
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=23)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=23
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=88)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=88
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=24)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=24
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=89)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=89
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=25)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=25
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=90)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=90
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=26)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=26
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=91)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=91
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=27)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=27
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=92)
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=92
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=28)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=28
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=93)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=93
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=94)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=94
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=29)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=29
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=95)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=95
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=30)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=30
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=96)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=96
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=31)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=31
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=97)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=97
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=32)
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=32
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=98)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=98
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=33)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=33
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=99)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=99
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=34)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=34
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=100)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=100
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=35)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=35
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=101)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=101
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=36)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=36
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=102)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=102
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=37)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=37
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=103)
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=103
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=38)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=38
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=104)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=104
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=39)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=39
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=105)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=105
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=106)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=106
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=40)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=40
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=107)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=107
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=41)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=41
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=108)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=108
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=42)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=42
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=109)
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=109
2025-10-05 16:53:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=43)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=43
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=110)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=110
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=44)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=44
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=111)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=111
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=45)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=45
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=112)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=112
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=46)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=46
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=113)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=113
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=114)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=114
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=47)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=47
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=115)
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=115
2025-10-05 16:53:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=48)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=48
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=116)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=116
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=49)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=49
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=117)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=117
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=50)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=50
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=118)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=118
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=51)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=51
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=119)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=119
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=52)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=52
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=120)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=120
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=53)
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=53
2025-10-05 16:53:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=121)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=121
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=54)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=54
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=122)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=122
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=55)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=55
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=123)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=123
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=56)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=56
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=124)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=124
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=57)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=57
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=125)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=125
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=58)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=58
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=126)
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=126
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=59)
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=59
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=127)
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=127
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=60)
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=60
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=128)
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=128
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=61)
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=61
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=129)
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=129
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=62)
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=62
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@564186b0]
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@564186b0]
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=130)
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=130
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=63)
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=63
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=64)
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=64
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=65)
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=65
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=66)
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=66
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=67)
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=67
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=68)
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=68
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=69)
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=69
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:14 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6b6d414]
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6b6d414]
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=70)
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=70
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=71)
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=71
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 16:53:15 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@268e49f6]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@268e49f6]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1c6a0095]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1c6a0095]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 17:03:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 17:03:08 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 17:03:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@36d1c1b9]
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@36d1c1b9]
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 17:03:35 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 17:03:36 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:03:37 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:03:39 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=3)
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=3
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:03:48 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=4)
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=4
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:03:57 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:06:15 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:06:15 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 17:06:15 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 17:06:18 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-05 17:06:18 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 26496 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-10-05 17:06:18 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 17:06:18 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-05 17:06:18 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 17:06:18 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 17:06:19 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-05 17:06:19 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 17:06:19 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 157 ms. Found 23 JPA repository interfaces.
2025-10-05 17:06:20 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 17:06:20 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-05 17:06:20 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 17:06:20 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-05 17:06:20 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-05 17:06:20 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2613 ms
2025-10-05 17:06:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 17:06:21 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@63929507
2025-10-05 17:06:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 17:06:21 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 17:06:21 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-05 17:06:21 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-05 17:06:21 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:06:22 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 17:06:22 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-05 17:06:22 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:06:22 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:06:22 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:06:23 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-05 17:06:23 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:06:24 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 17:06:24 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-05 17:06:25 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05 17:06:26 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-05 17:06:26 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 17:06:26 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-05 17:06:27 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-05 17:06:27 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 9.369 seconds (process running for 9.785)
2025-10-05 17:10:49 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 17:10:49 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 17:10:49 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-05 17:10:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:10:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:10:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:10:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:10:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:10:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:17:35 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:17:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 17:17:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 17:17:54 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-05 17:17:54 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 9600 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-10-05 17:17:54 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 17:17:54 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-05 17:17:54 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 17:17:54 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 17:17:55 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-05 17:17:55 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 17:17:55 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130 ms. Found 23 JPA repository interfaces.
2025-10-05 17:17:56 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 17:17:56 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-05 17:17:56 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 17:17:56 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-05 17:17:57 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-05 17:17:57 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2395 ms
2025-10-05 17:17:57 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 17:17:58 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@46e16c81
2025-10-05 17:17:58 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 17:17:58 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 17:17:58 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-05 17:17:58 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-05 17:17:58 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:17:58 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 17:17:58 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-05 17:17:58 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:17:59 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:17:59 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:18:00 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-05 17:18:00 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:18:00 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 17:18:00 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-05 17:18:01 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05 17:18:02 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-05 17:18:03 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 17:18:03 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-05 17:18:03 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-05 17:18:03 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 9.152 seconds (process running for 9.576)
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:18:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:18:22 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:18:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:18:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:18:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:18:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:18:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:18:22 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:18:48 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:18:48 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 17:18:48 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 17:18:51 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-05 17:18:51 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 22596 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-10-05 17:18:51 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 17:18:51 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-05 17:18:51 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 17:18:51 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 17:18:52 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-05 17:18:52 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 17:18:52 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 23 JPA repository interfaces.
2025-10-05 17:18:53 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 17:18:53 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-05 17:18:53 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 17:18:53 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-05 17:18:53 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-05 17:18:53 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2385 ms
2025-10-05 17:18:54 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 17:18:54 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@7bf2c47e
2025-10-05 17:18:54 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 17:18:54 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 17:18:54 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-05 17:18:54 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-05 17:18:54 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:18:54 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 17:18:55 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-05 17:18:55 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:18:55 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:18:55 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:18:56 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-05 17:18:56 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:18:56 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 17:18:57 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-05 17:18:58 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05 17:18:58 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-05 17:18:59 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 17:18:59 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-05 17:18:59 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-05 17:18:59 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 9.14 seconds (process running for 9.543)
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:19:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:21:35 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:21:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 17:21:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 17:21:48 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-05 17:21:49 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 26572 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-10-05 17:21:49 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 17:21:49 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-05 17:21:49 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 17:21:49 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 17:21:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-05 17:21:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 17:21:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 148 ms. Found 23 JPA repository interfaces.
2025-10-05 17:21:51 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 17:21:51 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-05 17:21:51 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 17:21:51 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-05 17:21:51 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-05 17:21:51 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2593 ms
2025-10-05 17:21:52 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 17:21:52 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@42b456cd
2025-10-05 17:21:52 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 17:21:52 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 17:21:52 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-05 17:21:52 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-05 17:21:53 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:21:53 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 17:21:53 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-05 17:21:53 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:21:53 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:21:53 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:21:54 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-05 17:21:54 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:21:55 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 17:21:55 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-05 17:21:56 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05 17:21:56 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-05 17:21:57 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 17:21:57 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-05 17:21:57 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-05 17:21:57 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 9.356 seconds (process running for 9.793)
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:22:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:23:18 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:23:18 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 17:23:18 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 17:23:21 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-05 17:23:21 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 23936 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-10-05 17:23:21 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 17:23:21 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-05 17:23:21 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 17:23:21 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 17:23:22 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-05 17:23:22 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 17:23:22 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 129 ms. Found 23 JPA repository interfaces.
2025-10-05 17:23:24 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 17:23:24 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-05 17:23:24 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 17:23:24 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-05 17:23:24 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-05 17:23:24 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3397 ms
2025-10-05 17:23:25 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 17:23:26 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@7e528a81
2025-10-05 17:23:26 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 17:23:26 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 17:23:26 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-05 17:23:26 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-05 17:23:27 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:23:27 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 17:23:27 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-05 17:23:27 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 17:23:27 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:23:27 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 17:23:28 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-05 17:23:28 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 17:23:29 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 17:23:30 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-05 17:23:30 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05 17:23:32 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-05 17:23:33 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 17:23:33 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-05 17:23:33 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-05 17:23:33 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 12.54 seconds (process running for 12.951)
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:23:38 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:25:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:25:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:25:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.3
2025-10-05 17:25:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:25:59 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-10-05 17:25:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-10-05 17:25:59 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-10-05 17:26:03 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-10-05 17:26:03 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-10-05 17:26:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-10-05 17:26:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-10-05 17:26:03 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@38eda3b7, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 17:26:03 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@38eda3b7, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-05 17:26:03 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-10-05 17:26:03 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 17:26:04 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.3
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@631527ba]
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@631527ba]
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 17:26:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 17:26:17 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 17:26:18 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:18 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:18 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 17:26:18 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:26:19 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:26:25 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=3)
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=3
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:26:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:26:40 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 17:29:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:29:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:29:28 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=parace, page=1)
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=parace, page=1
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=23
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:29:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=paracetam, page=1)
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=paracetam, page=1
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=23
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:29:45 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=paracetamol, page=1)
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=paracetamol, page=1
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=23
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:29:46 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=paracetamol, page=2)
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=paracetamol, page=2
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=23
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:29:51 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=paracetamo, page=1)
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=paracetamo, page=1
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=23
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:29:57 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:29:58 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=paralgan, page=1)
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=paralgan, page=1
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=4
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=4
2025-10-05 17:30:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=4
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=paralga, page=1)
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=paralga, page=1
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=4
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=4
2025-10-05 17:30:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=4
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=paral, page=1)
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=paral, page=1
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=4
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=4
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=4
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:30:05 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=levemir, page=1)
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=levemir, page=1
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=4
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=4
2025-10-05 17:30:07 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=4
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:31:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:31:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:31:41 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:37:15 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=3)
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=3
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:37:23 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=ABDIFLY, page=1)
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=ABDIFLY, page=1
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=14
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:38:29 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=ABDIFLY, page=2)
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=ABDIFLY, page=2
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=4
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=14
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=4
2025-10-05 17:38:45 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=4
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=ABDIFL, page=1)
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=ABDIFL, page=1
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=14
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:39:51 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 17:39:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:18:25 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m27s723ms213µs700ns).
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@487eb0cc]
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@487eb0cc]
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:24:33 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:24:35 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.6
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, isEcart=null, search=, page=1)
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, isEcart=null, search=, page=1)
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4192
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4192
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-05 18:24:45 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:27:22 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:27:23 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@245b7c99]
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@245b7c99]
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:27:27 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:27:29 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.6
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-10-05 18:27:38 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, isEcart=null, search=, page=1)
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, isEcart=null, search=, page=1)
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4192
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4192
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-05 18:27:39 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@76229dd]
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@76229dd]
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:27:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:27:45 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:27:47 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2b1b2c30]
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2b1b2c30]
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:28:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:28:59 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:29:00 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 18:32:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:32:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:33:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:33:34 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.3
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2d729ba6]
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2d729ba6]
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:33:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:33:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/hhh - ADRESSE : 192.168.1.3
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=hhh
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=hhh
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = null
2025-10-05 18:33:55 ERROR [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Emplacement is null | emplacement does not exist
2025-10-05 18:33:55 INFO  [http-nio-8080-exec-2] d.a.a.e.GlobalExceptionHandler - Entering notFoundExceptionHandler from the GlobalExceptionsHandler with message L'emplacement spécifié est introuvable
2025-10-05 18:33:55 ERROR [http-nio-8080-exec-2] d.a.a.e.GlobalExceptionHandler - Returning the following error L'emplacement spécifié est introuvable
2025-10-05 18:33:55 WARN  [http-nio-8080-exec-2] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.RessourceNotFoundException: L'emplacement spécifié est introuvable]
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-10-05 18:34:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, isEcart=null, search=, page=1)
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, isEcart=null, search=, page=1)
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=22, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4192
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4192
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-05 18:34:05 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=22, nlotInterne=1, medId=2, depot=2, comptage=1, quantite=20, motif=Motif hello, emplacement=PPSY-36, noLigne=1)
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=22, nlotInterne=1, medId=2, depot=2, comptage=1, quantite=20, motif=Motif hello, emplacement=PPSY-36, noLigne=1)
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-10-05 18:34:34 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=20, motif=Motif hello]
2025-10-05 18:34:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3c20258a]
2025-10-05 18:34:47 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3c20258a]
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:34:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-10-05 18:34:54 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=22, comptage=2, emplacement=PPSY-36, stockZero=0, isEcart=null, search=, page=1)
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=22, comptage=2, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=22, comptage=2, emplacement=PPSY-36, stockZero=0, isEcart=null, search=, page=1)
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=22, comptage=2, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4192
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4192
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-05 18:34:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=22, nlotInterne=1, medId=2, depot=2, comptage=2, quantite=21, motif=A peu près , emplacement=PPSY-36, noLigne=1)
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=22, nlotInterne=1, medId=2, depot=2, comptage=2, quantite=21, motif=A peu près , emplacement=PPSY-36, noLigne=1)
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-10-05 18:35:13 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=21, motif=A peu près ]
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=22, comptage=2, emplacement=PPSY-36, stockZero=0, isEcart=null, search=, page=1)
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=22, comptage=2, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=4192
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-05 18:35:17 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5da0da76]
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5da0da76]
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:35:25 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:35:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:35:31 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:35:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:35:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:35:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:35:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:35:56 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=3)
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=3
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:36:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=4)
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=4
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:36:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.6
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:43:09 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4c2073cb]
2025-10-05 18:43:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4c2073cb]
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:43:16 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:43:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:45:44 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:47:53 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@33f2c54b]
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@33f2c54b]
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:48:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.6
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:48:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:42 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:48:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:48:52 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:04 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:09 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:32 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:49:35 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:50:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:52:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:52:18 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:52:58 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.3
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@9562f98]
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@9562f98]
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:53:05 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:53:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:53:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 18:53:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 18:53:46 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 18:53:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 18:54:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:05:34 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.3
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4dcbfa96]
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4dcbfa96]
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:05:42 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 19:05:45 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:05:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:06:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:06:21 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:15:16 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 19:15:16 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 19:15:16 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 19:15:21 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-05 19:15:21 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 27408 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-10-05 19:15:21 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 19:15:21 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-05 19:15:21 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 19:15:21 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 19:15:23 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-05 19:15:23 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 19:15:23 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 156 ms. Found 23 JPA repository interfaces.
2025-10-05 19:15:25 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 19:15:25 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-05 19:15:25 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 19:15:25 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-05 19:15:25 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-05 19:15:25 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4210 ms
2025-10-05 19:15:26 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 19:15:27 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@60337c8c
2025-10-05 19:15:27 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 19:15:27 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 19:15:27 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-05 19:15:27 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-05 19:15:27 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 19:15:28 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 19:15:28 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-05 19:15:28 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-05 19:15:28 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 19:15:28 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-10-05 19:15:30 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-05 19:15:30 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 19:15:30 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 19:15:31 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-05 19:15:32 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05 19:15:33 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-05 19:15:34 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 19:15:34 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-05 19:15:34 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-05 19:15:34 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 13.932 seconds (process running for 14.625)
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:15:53 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:16:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:17:28 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:17:35 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:18:06 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:30 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:19:46 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:43 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:20:55 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:22 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:44 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:51 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:21:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:02 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:12 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.6
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:22:37 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 19:23:23 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.3
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@58172e8b]
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@58172e8b]
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:23:36 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 19:23:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:23:44 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:23:53 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:24:23 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:24:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@12c37c0f]
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@12c37c0f]
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:24:40 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@188dc762]
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@188dc762]
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:26:27 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3003b27f]
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3003b27f]
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:26:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1665c6dd]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1665c6dd]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1dd2d3b3]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1dd2d3b3]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:30:27 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7f7988ba]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7f7988ba]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7fb62bb6]
2025-10-05 19:33:04 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7fb62bb6]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7cc77383]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7cc77383]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7ad25fae]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7ad25fae]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:28 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@735acdbf]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@735acdbf]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@70161d5e]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@70161d5e]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@39c1e5c8]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@39c1e5c8]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@17b53e50]
2025-10-05 19:33:37 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@17b53e50]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4204a2c2]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4204a2c2]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5f38415]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5f38415]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:02 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@45f78d30]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@45f78d30]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@45930c44]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@45930c44]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-10-05 19:34:27 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.3
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=1
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5ffdf2af]
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5ffdf2af]
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:34 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 19:34:40 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=0]
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=1)
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=1
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:34:42 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=0, search=, page=2)
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=0, search=, page=2
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=10
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=9745
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=10
2025-10-05 19:35:17 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=10
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/traitement-ecarts - ADRESSE : 192.168.1.3
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getEcartLines | Args | request=InventaireLineRequest(invId=22, comptage=null, emplacement=null, stockZero=null, isEcart=1, search=, page=1)
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getEcartLines() | Args | invId=22, isEcart=1, search=, page=1
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of ecart lines from the repo | projections.size=2
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to ecart line responses | lines.size=2
2025-10-05 19:35:19 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the ecart lines from the service | lines.size=2
2025-10-05 19:37:19 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 19:37:19 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 19:37:19 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
