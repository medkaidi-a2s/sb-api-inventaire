2025-08-27 10:35:56 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-27 10:35:56 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 15696 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-27 10:35:56 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 10:35:56 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-27 10:35:56 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 10:35:56 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 10:35:58 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-27 10:35:58 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 10:35:58 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 20 JPA repository interfaces.
2025-08-27 10:36:00 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-27 10:36:00 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-27 10:36:00 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 10:36:00 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-27 10:36:00 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 10:36:00 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3949 ms
2025-08-27 10:36:01 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 10:36:02 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@4ff95af0
2025-08-27 10:36:02 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 10:36:02 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 10:36:02 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-27 10:36:02 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-27 10:36:03 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 10:36:03 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 10:36:03 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-27 10:36:04 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 10:36:06 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 10:36:06 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 10:36:11 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-27 10:36:11 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 10:36:13 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-27 10:36:19 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-27 10:36:23 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 10:36:28 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-27 10:36:32 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 10:36:33 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-27 10:36:33 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-27 10:36:33 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 37.582 seconds (process running for 38.744)
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.5
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-27 10:38:42 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-27 10:38:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:38:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.5
2025-08-27 10:38:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:43 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-27 10:38:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-27 10:38:43 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-27 10:38:50 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-08-27 10:38:50 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-08-27 10:38:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:38:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:38:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:38:50 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@82db053, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 10:38:50 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@82db053, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 10:38:50 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-27 10:38:50 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.5
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.5
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 10:38:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 10:38:54 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-08-27 10:38:54 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-08-27 10:38:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-08-27 10:38:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:38:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-08-27 10:38:54 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@6cd290a0, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 10:38:54 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@6cd290a0, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 10:38:54 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-27 10:38:54 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.5
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.5
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.5
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 10:38:55 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6fbb90b9, dz.a2s.a2spreparation.entities.Inventaire@14fba5dc]
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6fbb90b9, dz.a2s.a2spreparation.entities.Inventaire@14fba5dc]
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:39:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@8d03c63, dz.a2s.a2spreparation.entities.Inventaire@24c43a0f]
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@8d03c63, dz.a2s.a2spreparation.entities.Inventaire@24c43a0f]
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:39:03 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:39:06 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.5
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:39:26 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:39:29 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:42:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:42:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@77cecb5d, dz.a2s.a2spreparation.entities.Inventaire@73d8287]
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:44:41 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@77cecb5d, dz.a2s.a2spreparation.entities.Inventaire@73d8287]
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:44:42 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2f416d5f, dz.a2s.a2spreparation.entities.Inventaire@4485013]
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2f416d5f, dz.a2s.a2spreparation.entities.Inventaire@4485013]
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:12 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5ad01978, dz.a2s.a2spreparation.entities.Inventaire@782a949a]
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5ad01978, dz.a2s.a2spreparation.entities.Inventaire@782a949a]
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:48:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:46 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:48:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@59919d96, dz.a2s.a2spreparation.entities.Inventaire@490bcacf]
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@59919d96, dz.a2s.a2spreparation.entities.Inventaire@490bcacf]
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:49:20 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 10:49:22 ERROR [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-08-27 10:49:22 INFO  [http-nio-8080-exec-4] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-08-27 10:49:22 WARN  [http-nio-8080-exec-4] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:49:23 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.5
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:49:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:49:40 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:49:44 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4)
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:49:46 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=5)
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=5
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:50:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:50:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.2
2025-08-27 10:50:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:21 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-27 10:50:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-27 10:50:21 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-27 10:50:25 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-08-27 10:50:25 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-08-27 10:50:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-08-27 10:50:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-08-27 10:50:25 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@5071ed62, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 10:50:25 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@5071ed62, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 10:50:25 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-27 10:50:25 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.2
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.2
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.2
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 10:50:26 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.2
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.2
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@67261f95, dz.a2s.a2spreparation.entities.Inventaire@104ea504]
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@67261f95, dz.a2s.a2spreparation.entities.Inventaire@104ea504]
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:50:33 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.2
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:50:35 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.2
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 10:50:46 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:50:47 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:50:54 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:50:59 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4)
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:51:05 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:51:15 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:51:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 10:51:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@25272bd6, dz.a2s.a2spreparation.entities.Inventaire@2be77a14]
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@25272bd6, dz.a2s.a2spreparation.entities.Inventaire@2be77a14]
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:55:19 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:22 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:28 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:30 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:34 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:48 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:50 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:52 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:54 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:56 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=6, size=10, search=Optional[]
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=6, size=10, search=
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:55:59 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.2
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.2
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.2
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 10:56:21 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 10:56:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:56:32 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:56:41 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 10:56:45 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:05:32 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:05:36 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.2
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.2
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.2
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 11:05:55 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:06:01 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:06:06 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:06:13 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:06:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.2
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:06:32 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@19f75377, dz.a2s.a2spreparation.entities.Inventaire@7275eb5a]
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@19f75377, dz.a2s.a2spreparation.entities.Inventaire@7275eb5a]
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:07:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:08:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.5
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 11:08:19 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:08:20 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:08:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:08:34 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@17ec3622, dz.a2s.a2spreparation.entities.Inventaire@2724d696]
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@17ec3622, dz.a2s.a2spreparation.entities.Inventaire@2724d696]
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:09:48 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:09:50 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.5
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:10:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:10:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5f5782eb, dz.a2s.a2spreparation.entities.Inventaire@287862a]
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5f5782eb, dz.a2s.a2spreparation.entities.Inventaire@287862a]
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:14:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@777e2d43, dz.a2s.a2spreparation.entities.Inventaire@7b728d70]
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@777e2d43, dz.a2s.a2spreparation.entities.Inventaire@7b728d70]
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:14:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1699f3aa, dz.a2s.a2spreparation.entities.Inventaire@42e01048]
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1699f3aa, dz.a2s.a2spreparation.entities.Inventaire@42e01048]
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:36 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7227c3ac, dz.a2s.a2spreparation.entities.Inventaire@1d60a44f]
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7227c3ac, dz.a2s.a2spreparation.entities.Inventaire@1d60a44f]
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5b1559b7, dz.a2s.a2spreparation.entities.Inventaire@55ef1ce7]
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5b1559b7, dz.a2s.a2spreparation.entities.Inventaire@55ef1ce7]
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@581e9305, dz.a2s.a2spreparation.entities.Inventaire@6144e063]
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@581e9305, dz.a2s.a2spreparation.entities.Inventaire@6144e063]
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@29554312, dz.a2s.a2spreparation.entities.Inventaire@3bba2dd3]
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@29554312, dz.a2s.a2spreparation.entities.Inventaire@3bba2dd3]
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:53 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@27eacf47, dz.a2s.a2spreparation.entities.Inventaire@55770195]
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@27eacf47, dz.a2s.a2spreparation.entities.Inventaire@55770195]
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:57 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@66ce67a, dz.a2s.a2spreparation.entities.Inventaire@125db7cf]
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@66ce67a, dz.a2s.a2spreparation.entities.Inventaire@125db7cf]
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:16:58 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@667f5a09, dz.a2s.a2spreparation.entities.Inventaire@2d0da1b8]
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@667f5a09, dz.a2s.a2spreparation.entities.Inventaire@2d0da1b8]
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@57d8c611, dz.a2s.a2spreparation.entities.Inventaire@72391dc9]
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@57d8c611, dz.a2s.a2spreparation.entities.Inventaire@72391dc9]
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7cf5d8bb, dz.a2s.a2spreparation.entities.Inventaire@7af14dd3]
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7cf5d8bb, dz.a2s.a2spreparation.entities.Inventaire@7af14dd3]
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5b651025, dz.a2s.a2spreparation.entities.Inventaire@6c7a2d89]
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5b651025, dz.a2s.a2spreparation.entities.Inventaire@6c7a2d89]
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:31 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4397bbeb, dz.a2s.a2spreparation.entities.Inventaire@5bb542dd]
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4397bbeb, dz.a2s.a2spreparation.entities.Inventaire@5bb542dd]
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@743dfd38, dz.a2s.a2spreparation.entities.Inventaire@4312ded4]
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@743dfd38, dz.a2s.a2spreparation.entities.Inventaire@4312ded4]
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:55 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@720febe, dz.a2s.a2spreparation.entities.Inventaire@6c30fb22]
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@720febe, dz.a2s.a2spreparation.entities.Inventaire@6c30fb22]
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1048cba2, dz.a2s.a2spreparation.entities.Inventaire@31d65c05]
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1048cba2, dz.a2s.a2spreparation.entities.Inventaire@31d65c05]
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:17:59 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@37528e68, dz.a2s.a2spreparation.entities.Inventaire@11923752]
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@37528e68, dz.a2s.a2spreparation.entities.Inventaire@11923752]
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5e9b33dc, dz.a2s.a2spreparation.entities.Inventaire@33665e11]
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5e9b33dc, dz.a2s.a2spreparation.entities.Inventaire@33665e11]
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:18:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.2
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.2
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.2
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 11:18:23 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.2
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.2
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.2
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 11:18:48 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.2
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.2
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5ed81723, dz.a2s.a2spreparation.entities.Inventaire@1447580d]
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5ed81723, dz.a2s.a2spreparation.entities.Inventaire@1447580d]
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:18:54 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6b182f6c, dz.a2s.a2spreparation.entities.Inventaire@4399fdad]
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6b182f6c, dz.a2s.a2spreparation.entities.Inventaire@4399fdad]
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7884f3d, dz.a2s.a2spreparation.entities.Inventaire@575afcc9]
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7884f3d, dz.a2s.a2spreparation.entities.Inventaire@575afcc9]
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:06 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@56153ba4, dz.a2s.a2spreparation.entities.Inventaire@109ad191]
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@56153ba4, dz.a2s.a2spreparation.entities.Inventaire@109ad191]
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3e11a330, dz.a2s.a2spreparation.entities.Inventaire@63cee4c]
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3e11a330, dz.a2s.a2spreparation.entities.Inventaire@63cee4c]
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4805279, dz.a2s.a2spreparation.entities.Inventaire@54b1f0ab]
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4805279, dz.a2s.a2spreparation.entities.Inventaire@54b1f0ab]
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@44b39681, dz.a2s.a2spreparation.entities.Inventaire@8b5a3f3]
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@44b39681, dz.a2s.a2spreparation.entities.Inventaire@8b5a3f3]
2025-08-27 11:20:25 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5b20c397, dz.a2s.a2spreparation.entities.Inventaire@e4666ec]
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5b20c397, dz.a2s.a2spreparation.entities.Inventaire@e4666ec]
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1c6d116d, dz.a2s.a2spreparation.entities.Inventaire@2659087]
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1c6d116d, dz.a2s.a2spreparation.entities.Inventaire@2659087]
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:39 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4117a8d2, dz.a2s.a2spreparation.entities.Inventaire@638f770c]
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4117a8d2, dz.a2s.a2spreparation.entities.Inventaire@638f770c]
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1cf7b86a, dz.a2s.a2spreparation.entities.Inventaire@39b0cb31]
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1cf7b86a, dz.a2s.a2spreparation.entities.Inventaire@39b0cb31]
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@436470d4, dz.a2s.a2spreparation.entities.Inventaire@4a30e912]
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@436470d4, dz.a2s.a2spreparation.entities.Inventaire@4a30e912]
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@b8dd5f1, dz.a2s.a2spreparation.entities.Inventaire@5102d09b]
2025-08-27 11:20:48 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@b8dd5f1, dz.a2s.a2spreparation.entities.Inventaire@5102d09b]
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@77943315, dz.a2s.a2spreparation.entities.Inventaire@453caec7]
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@77943315, dz.a2s.a2spreparation.entities.Inventaire@453caec7]
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6f018050, dz.a2s.a2spreparation.entities.Inventaire@47f57ccf]
2025-08-27 11:20:51 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6f018050, dz.a2s.a2spreparation.entities.Inventaire@47f57ccf]
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:21:09 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.5
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:21:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 11:21:23 ERROR [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-08-27 11:21:23 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-08-27 11:21:23 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:21:24 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.5
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 11:21:32 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:21:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2b513df8, dz.a2s.a2spreparation.entities.Inventaire@5d626685]
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2b513df8, dz.a2s.a2spreparation.entities.Inventaire@5d626685]
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:29:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.5
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:29:43 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 11:29:44 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:29:44 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 11:29:44 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:29:44 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 11:29:44 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:29:44 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:29:44 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 11:29:44 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:40:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@64edc2a1, dz.a2s.a2spreparation.entities.Inventaire@30e4d0c5]
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@64edc2a1, dz.a2s.a2spreparation.entities.Inventaire@30e4d0c5]
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:40:07 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.5
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.5
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3a2b6e0c, dz.a2s.a2spreparation.entities.Inventaire@2dcdb6da]
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3a2b6e0c, dz.a2s.a2spreparation.entities.Inventaire@2dcdb6da]
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:40:11 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:40:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:40:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.5
2025-08-27 11:40:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:40:24 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.5
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:40:39 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.5
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 11:40:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.5
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:40:48 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.2
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.2
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.2
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 11:44:40 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.2
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.2
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5992b864, dz.a2s.a2spreparation.entities.Inventaire@59b6da02]
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5992b864, dz.a2s.a2spreparation.entities.Inventaire@59b6da02]
2025-08-27 11:44:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.2
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:44:49 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 11:45:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:45:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:45:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.2
2025-08-27 11:45:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:45:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:45:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:45:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:45:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:45:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.2
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 11:45:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:09:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.4
2025-08-27 12:09:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:31 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-27 12:09:31 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-27 12:09:31 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-27 12:09:35 INFO  [http-nio-8080-exec-9] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-08-27 12:09:35 INFO  [http-nio-8080-exec-9] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-08-27 12:09:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-08-27 12:09:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-08-27 12:09:35 INFO  [http-nio-8080-exec-9] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@127f036, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 12:09:35 INFO  [http-nio-8080-exec-9] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@127f036, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 12:09:35 INFO  [http-nio-8080-exec-9] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-27 12:09:35 INFO  [http-nio-8080-exec-9] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 12:09:37 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@19775da6, dz.a2s.a2spreparation.entities.Inventaire@7b4d8917]
2025-08-27 12:09:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@19775da6, dz.a2s.a2spreparation.entities.Inventaire@7b4d8917]
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:09:46 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:09:54 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:10:35 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:10:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:10:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.3
2025-08-27 12:10:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:37 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-27 12:10:37 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-27 12:10:37 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-27 12:10:42 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-08-27 12:10:42 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-08-27 12:10:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:10:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:10:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:10:42 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@2469d36b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 12:10:42 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@2469d36b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 12:10:42 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-27 12:10:42 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 12:10:43 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 12:11:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.3
2025-08-27 12:11:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:08 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-27 12:11:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-27 12:11:08 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-27 12:11:12 INFO  [http-nio-8080-exec-9] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-08-27 12:11:12 INFO  [http-nio-8080-exec-9] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-08-27 12:11:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-08-27 12:11:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:12 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-08-27 12:11:12 INFO  [http-nio-8080-exec-9] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@2d59dfd1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 12:11:12 INFO  [http-nio-8080-exec-9] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@2d59dfd1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 12:11:12 INFO  [http-nio-8080-exec-9] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-27 12:11:12 INFO  [http-nio-8080-exec-9] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 12:11:13 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7a1dca2d, dz.a2s.a2spreparation.entities.Inventaire@68d95981]
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7a1dca2d, dz.a2s.a2spreparation.entities.Inventaire@68d95981]
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:11:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:11:19 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-36 - ADRESSE : 192.168.1.3
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-36
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-36
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 12:11:31 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:11:32 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2837ca3f, dz.a2s.a2spreparation.entities.Inventaire@5ba3ef00]
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2837ca3f, dz.a2s.a2spreparation.entities.Inventaire@5ba3ef00]
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:11:36 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:11:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:11:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 12:27:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@65a458f9, dz.a2s.a2spreparation.entities.Inventaire@78535a2b]
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@65a458f9, dz.a2s.a2spreparation.entities.Inventaire@78535a2b]
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:27:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:27:14 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:27:20 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:27:41 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:27:47 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amo, page=1)
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amo, page=1
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=145
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:27:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amockan, page=1)
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amockan, page=1
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-08-27 12:28:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoc, page=1)
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoc, page=1
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:28:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=1)
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=1
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:28:03 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 12:39:44 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@465d241b, dz.a2s.a2spreparation.entities.Inventaire@55cf14f]
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@465d241b, dz.a2s.a2spreparation.entities.Inventaire@55cf14f]
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:39:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:39:54 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:40:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:41:46 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:41:51 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4)
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:41:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Levemir, page=1)
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Levemir, page=1
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=1
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=1
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=1
2025-08-27 12:42:03 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=1
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:42:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amocl, page=1)
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amocl, page=1
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:42:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amocla, page=1)
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amocla, page=1
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=1)
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=1
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:42:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=2)
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=2
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:42:15 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:46:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:47:30 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 12:47:51 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 13:51:11 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h3m7s445ms569µs300ns).
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 13:51:20 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 13:52:17 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@71143cb1, dz.a2s.a2spreparation.entities.Inventaire@35e8e435]
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@71143cb1, dz.a2s.a2spreparation.entities.Inventaire@35e8e435]
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 13:52:23 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 13:52:26 ERROR [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-08-27 13:52:26 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-08-27 13:52:26 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 13:52:30 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 13:52:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 13:52:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 13:52:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 13:52:49 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 13:52:49 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 13:53:05 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 13:53:22 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 13:53:27 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:05 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:22 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:11:26 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:12:48 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 14:20:06 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@18d8c3ef, dz.a2s.a2spreparation.entities.Inventaire@21a55e25]
2025-08-27 14:20:14 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@18d8c3ef, dz.a2s.a2spreparation.entities.Inventaire@21a55e25]
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:20:17 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-36 - ADRESSE : 192.168.1.3
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-36
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-36
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 14:20:29 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 14:20:55 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3ec748ae, dz.a2s.a2spreparation.entities.Inventaire@270570a3]
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3ec748ae, dz.a2s.a2spreparation.entities.Inventaire@270570a3]
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:20:57 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:20:59 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 14:21:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:21:09 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 14:21:42 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@46a3d848, dz.a2s.a2spreparation.entities.Inventaire@5f3653e8]
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@46a3d848, dz.a2s.a2spreparation.entities.Inventaire@5f3653e8]
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:21:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:21:51 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:22:00 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:22:53 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:23:37 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:26:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@22b0d325, dz.a2s.a2spreparation.entities.Inventaire@17455930]
2025-08-27 14:27:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@22b0d325, dz.a2s.a2spreparation.entities.Inventaire@17455930]
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:27:20 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:27:31 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 14:27:59 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@24014f40, dz.a2s.a2spreparation.entities.Inventaire@671c247f]
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@24014f40, dz.a2s.a2spreparation.entities.Inventaire@671c247f]
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:28:05 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:28:07 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 14:28:14 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:28:15 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:28:34 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 14:33:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@679612c7, dz.a2s.a2spreparation.entities.Inventaire@7ce0aa2b]
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@679612c7, dz.a2s.a2spreparation.entities.Inventaire@7ce0aa2b]
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:34:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:34:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:34:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:37:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@62f1c2b, dz.a2s.a2spreparation.entities.Inventaire@5c41a4eb]
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@62f1c2b, dz.a2s.a2spreparation.entities.Inventaire@5c41a4eb]
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:46:50 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 14:46:54 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 14:47:07 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 14:47:08 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:52:55 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:52:58 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:53:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4)
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:53:08 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=5)
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=5
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:53:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:53:19 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5802e74b, dz.a2s.a2spreparation.entities.Inventaire@48bfcd1f]
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5802e74b, dz.a2s.a2spreparation.entities.Inventaire@48bfcd1f]
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:53:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-08-27]
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-08-27]
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-08-27
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-08-27
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-08-27]
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-08-27 14:54:51 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-08-27]
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-09]
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-09
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-09]
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-09
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=11
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=11
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-09]
2025-08-27 14:54:57 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-09]
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.3
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@66bfa254
2025-08-27 14:54:59 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=6, colisD=0, frigo=4, psycho=5, chers=2, sachet=3]
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@42718a7e, dz.a2s.a2spreparation.entities.Inventaire@d1b7f38]
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@42718a7e, dz.a2s.a2spreparation.entities.Inventaire@d1b7f38]
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:55:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:56:24 ERROR [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-08-27 14:56:24 INFO  [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-08-27 14:56:24 WARN  [http-nio-8080-exec-7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:56:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3368943b, dz.a2s.a2spreparation.entities.Inventaire@699a164c]
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3368943b, dz.a2s.a2spreparation.entities.Inventaire@699a164c]
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:57:31 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3613476c, dz.a2s.a2spreparation.entities.Inventaire@67179658]
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3613476c, dz.a2s.a2spreparation.entities.Inventaire@67179658]
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:57:46 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 14:58:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2336fc32, dz.a2s.a2spreparation.entities.Inventaire@e4ab2e]
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2336fc32, dz.a2s.a2spreparation.entities.Inventaire@e4ab2e]
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:58:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:58:50 ERROR [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-08-27 14:58:50 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-08-27 14:58:50 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:58:59 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 14:59:13 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 14:59:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:00:13 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:00:19 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4)
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:00:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 15:07:36 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@637c4b34, dz.a2s.a2spreparation.entities.Inventaire@2ddafe28]
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@637c4b34, dz.a2s.a2spreparation.entities.Inventaire@2ddafe28]
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 15:07:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:07:45 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:07:52 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:08:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:13:23 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:13:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 15:23:38 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5bb0924c, dz.a2s.a2spreparation.entities.Inventaire@2e455875]
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5bb0924c, dz.a2s.a2spreparation.entities.Inventaire@2e455875]
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 15:23:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:23:49 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 15:23:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:23:57 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:24:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:25:13 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4)
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:25:24 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=5)
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=5
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:25:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:26:06 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:26:29 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:26:31 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:26:34 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:26:37 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:26:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 15:34:51 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4e312bd8, dz.a2s.a2spreparation.entities.Inventaire@324758e2]
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@4e312bd8, dz.a2s.a2spreparation.entities.Inventaire@324758e2]
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 15:35:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:35:04 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:35:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 15:58:07 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@285af6cb, dz.a2s.a2spreparation.entities.Inventaire@356de772]
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@285af6cb, dz.a2s.a2spreparation.entities.Inventaire@356de772]
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 15:58:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 15:58:16 ERROR [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-08-27 15:58:16 INFO  [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-08-27 15:58:16 WARN  [http-nio-8080-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:58:21 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Hh - ADRESSE : 192.168.1.4
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Hh
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Hh
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = null
2025-08-27 15:58:30 ERROR [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Emplacement is null | emplacement does not exist
2025-08-27 15:58:30 INFO  [http-nio-8080-exec-5] d.a.a.e.GlobalExceptionHandler - Entering notFoundExceptionHandler from the GlobalExceptionsHandler with message L'emplacement spécifié est introuvable
2025-08-27 15:58:30 ERROR [http-nio-8080-exec-5] d.a.a.e.GlobalExceptionHandler - Returning the following error L'emplacement spécifié est introuvable
2025-08-27 15:58:30 WARN  [http-nio-8080-exec-5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.RessourceNotFoundException: L'emplacement spécifié est introuvable]
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 15:58:39 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:58:40 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:59:16 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 15:59:19 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:00:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 16:02:54 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 16:02:55 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@668840f3, dz.a2s.a2spreparation.entities.Inventaire@77b549e1]
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@668840f3, dz.a2s.a2spreparation.entities.Inventaire@77b549e1]
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 16:03:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 16:03:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 16:03:11 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:03:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:03:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amp, page=1)
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amp, page=1
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=236
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:05:56 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Ampc, page=1)
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Ampc, page=1
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Ampclan, page=1)
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Ampclan, page=1
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:05:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Ampc, page=1)
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Ampc, page=1
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:05:59 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:06:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:06:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:06:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:06:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:06:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:06:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:06:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amiclan, page=1)
2025-08-27 16:06:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amiclan, page=1
2025-08-27 16:06:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:06:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-08-27 16:06:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-08-27 16:06:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-08-27 16:06:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Ami, page=1)
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Ami, page=1
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=86
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:06:08 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Am, page=1)
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Am, page=1
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=517
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:06:09 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoc, page=1)
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoc, page=1
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=1)
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=1
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:06:11 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan , page=1)
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan , page=1
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:06:31 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan 12, page=1)
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan 12, page=1
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-08-27 16:06:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan 125, page=1)
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan 125, page=1
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-08-27 16:06:34 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=1)
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Amoclan, page=1
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:07:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:07:23 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Lev, page=1)
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Lev, page=1
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=24
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:07:25 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Leve, page=1)
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Leve, page=1
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=2
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=2
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=2
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Levemir, page=1)
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=Levemir, page=1
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=1
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=1
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=1
2025-08-27 16:07:26 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=1
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:08:34 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:09:01 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:09:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 16:23:58 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2e52d449, dz.a2s.a2spreparation.entities.Inventaire@7320cb6c]
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2e52d449, dz.a2s.a2spreparation.entities.Inventaire@7320cb6c]
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 16:24:03 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 16:24:06 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 16:24:13 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:24:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 16:45:59 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3758a699, dz.a2s.a2spreparation.entities.Inventaire@7733913]
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3758a699, dz.a2s.a2spreparation.entities.Inventaire@7733913]
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 16:46:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 16:46:21 ERROR [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-08-27 16:46:21 INFO  [http-nio-8080-exec-9] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-08-27 16:46:21 WARN  [http-nio-8080-exec-9] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 16:46:23 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:46:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 16:51:32 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@79ef45bb, dz.a2s.a2spreparation.entities.Inventaire@35135937]
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@79ef45bb, dz.a2s.a2spreparation.entities.Inventaire@35135937]
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 16:51:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 16:51:42 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 16:51:55 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:51:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 16:59:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:00:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1)
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:00:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:00:16 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:00:38 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@16c65420, dz.a2s.a2spreparation.entities.Inventaire@2dafae89]
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@16c65420, dz.a2s.a2spreparation.entities.Inventaire@2dafae89]
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:00:45 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:00:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 17:00:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:00:57 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1)
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:01:01 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:01:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:01:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:01:20 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4)
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:02:27 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:04:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:04:15 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:05:18 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:05:43 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@78d819d9, dz.a2s.a2spreparation.entities.Inventaire@548411dc]
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@78d819d9, dz.a2s.a2spreparation.entities.Inventaire@548411dc]
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:05:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:05:53 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:06 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4)
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:17 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:40 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:06:47 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:18:12 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 17:18:12 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 17:18:12 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 17:18:30 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-27 17:18:30 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 29304 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-27 17:18:30 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 17:18:30 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-27 17:18:30 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 17:18:30 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 17:18:32 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-27 17:18:32 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 17:18:32 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 186 ms. Found 20 JPA repository interfaces.
2025-08-27 17:18:33 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-27 17:18:33 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-27 17:18:33 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 17:18:33 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-27 17:18:34 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 17:18:34 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3699 ms
2025-08-27 17:18:37 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 17:18:39 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@397355d2
2025-08-27 17:18:39 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 17:18:39 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 17:18:39 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-27 17:18:39 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-27 17:18:41 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 17:18:41 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 17:18:42 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-27 17:18:44 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 17:18:45 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 17:18:45 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 17:18:49 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-27 17:18:49 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 17:18:51 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-27 17:18:55 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-27 17:18:58 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 17:19:04 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-27 17:19:07 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 17:19:08 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-27 17:19:08 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-27 17:19:08 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 38.487 seconds (process running for 41.719)
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:19:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:19:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:19:23 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:24:15 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 17:24:15 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 17:24:15 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 17:24:18 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-27 17:24:18 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 34012 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-27 17:24:18 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 17:24:18 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-27 17:24:18 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 17:24:18 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 17:24:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-27 17:24:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 17:24:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 159 ms. Found 20 JPA repository interfaces.
2025-08-27 17:24:22 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-27 17:24:22 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-27 17:24:22 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 17:24:22 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-27 17:24:22 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 17:24:22 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3492 ms
2025-08-27 17:24:23 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 17:24:23 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@481b45be
2025-08-27 17:24:23 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 17:24:23 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 17:24:23 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-27 17:24:23 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-27 17:24:24 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 17:24:24 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 17:24:24 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-27 17:24:24 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 17:24:25 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 17:24:25 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 17:24:25 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-27 17:24:25 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 17:24:26 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-27 17:24:27 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-27 17:24:27 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 17:24:28 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-27 17:24:30 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 17:24:30 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-27 17:24:30 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-27 17:24:30 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 12.313 seconds (process running for 12.832)
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:24:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:24:51 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:24:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:25:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:25:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:26:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:26:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:26:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:26:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:26:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:26:09 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:26:12 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:26:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:26:51 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:26:54 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:26:57 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:29:34 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:30:11 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7b406ffd, dz.a2s.a2spreparation.entities.Inventaire@5ad7a282]
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7b406ffd, dz.a2s.a2spreparation.entities.Inventaire@5ad7a282]
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:30:18 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:32:54 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@608df683, dz.a2s.a2spreparation.entities.Inventaire@7e349e4f]
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@608df683, dz.a2s.a2spreparation.entities.Inventaire@7e349e4f]
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:32:59 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:33:02 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:33:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:33:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:33:15 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:33:15 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:33:15 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:33:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:33:21 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:33:42 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6850ce70, dz.a2s.a2spreparation.entities.Inventaire@70273390]
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6850ce70, dz.a2s.a2spreparation.entities.Inventaire@70273390]
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:33:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:33:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 17:33:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:33:59 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:34:03 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:34:08 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4)
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=4
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:34:18 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=5)
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=5
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:34:26 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=6)
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=6
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:34:35 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=7)
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=7
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:34:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:37:53 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:37:55 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:37:57 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:38:14 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:38:20 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:38:24 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:38:29 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:33 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:38:34 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:38:34 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:38:34 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:38:34 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:38:46 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=6, size=10, search=Optional[]
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=6, size=10, search=
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:38:51 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:30 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:38 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:42 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:44 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:46 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:53 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:39:57 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:40:17 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@88f0c40, dz.a2s.a2spreparation.entities.Inventaire@53ac041e]
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@88f0c40, dz.a2s.a2spreparation.entities.Inventaire@53ac041e]
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:40:28 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:40:31 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:40:37 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:41:01 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3)
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=3
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 17:41:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 17:47:52 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 17:47:52 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 17:47:52 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 17:47:56 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-27 17:47:56 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 25980 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-27 17:47:56 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 17:47:56 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-27 17:47:56 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 17:47:56 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 17:47:58 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-27 17:47:58 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 17:47:58 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 192 ms. Found 20 JPA repository interfaces.
2025-08-27 17:48:00 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-27 17:48:00 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-27 17:48:00 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 17:48:00 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-27 17:48:00 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 17:48:00 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4099 ms
2025-08-27 17:48:01 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 17:48:01 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@7ba2673a
2025-08-27 17:48:01 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 17:48:02 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 17:48:02 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-27 17:48:02 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-27 17:48:02 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 17:48:02 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 17:48:02 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-27 17:48:04 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 17:48:05 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 17:48:05 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 17:48:10 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-27 17:48:10 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 17:48:11 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-27 17:48:14 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-27 17:48:17 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 17:48:22 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-27 17:48:25 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 17:48:25 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-27 17:48:25 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-27 17:48:25 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 30.258 seconds (process running for 30.837)
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:48:47 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:48:48 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:48:48 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:48:48 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:48:48 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:48:48 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:48:48 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:48:48 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:48:48 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:48:52 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:48:54 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2fd01dc, dz.a2s.a2spreparation.entities.Inventaire@74d0f5e]
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@2fd01dc, dz.a2s.a2spreparation.entities.Inventaire@74d0f5e]
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:48:57 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:48:59 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:49:00 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:00 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:49:00 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:00 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:02 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.3
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:05 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:49:27 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:49:34 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:49:35 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:49:35 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:49:35 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:49:35 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:49:35 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:35 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:49:35 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:35 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:41 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:45 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:49 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:49:54 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[Levelir]
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=Levelir
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=0
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=0
2025-08-27 17:50:04 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=0
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[Leve]
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=Leve
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=5
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=5
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=5
2025-08-27 17:50:06 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=5
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[Levemir]
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=Levemir
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=2
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=2
2025-08-27 17:50:07 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=2
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:50:16 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:50:17 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:50:17 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:50:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:50:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:50:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:50:18 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:50:18 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:50:18 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:50:19 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[Flexpen]
2025-08-27 17:50:19 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=Flexpen
2025-08-27 17:50:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:50:19 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:50:19 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:50:19 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=14
2025-08-27 17:50:19 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:50:19 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[Flexpen]
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=Flexpen
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=4
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=14
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=4
2025-08-27 17:50:23 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=4
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:50:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:50:51 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 17:50:55 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:51:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:51:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:51:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:51:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:51:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:51:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:51:11 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 17:51:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 17:51:11 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-27
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-27
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:56:15 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 17:56:24 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1597 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 17:56:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.4
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1597, type=1, stkCode=1, zone=10)
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1597, type=1, stkCode=1, zone=10)
2025-08-27 17:56:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@18bcd518
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 17:56:38 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 17:56:42 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:56:51 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-09], search : Optional[]
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-09, search : 
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-09], search : Optional[]
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-09, search : 
2025-08-27 17:56:57 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-09], search : Optional[00]
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-09, search : 00
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-09], search : Optional[00]
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-09, search : 00
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=0
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=0
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=0
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=0
2025-08-27 17:56:59 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-09], search : Optional[00]
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-09, search : 00
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=0
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=0
2025-08-27 17:57:04 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[00]
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[00]
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 00
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 00
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 17:57:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[0]
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 0
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[0]
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 0
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 17:57:14 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1595 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:57:22 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[0]
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 0
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 17:57:24 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1596 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 17:57:26 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:57:27 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[0]
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 0
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 17:57:28 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1599 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 17:57:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 2
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:57:35 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[0]
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 0
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 17:57:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[0]
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 0
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 17:57:56 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[]
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[]
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 
2025-08-27 17:58:17 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 17:58:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/control - ADRESSE : 192.168.1.4
2025-08-27 17:58:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 17:58:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-6] d.a.a.controllers.UserController - Entering the getControlAuthorization method from the UserController
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Entering the getControlAuthorization method from the AuthorizationService for formCode 482
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-08-27
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-08-27
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation du contrôle 1
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-6] d.a.a.controllers.UserController - Control Authorization recieved from the service : AuthorizationDto[code=482, value=1]
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-08-27
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-08-27
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-08-27
2025-08-27 17:58:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-08-27
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-06
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-06
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-06
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-06
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 2
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-06
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 2
2025-08-27 17:58:30 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-06
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 17:58:36 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 17:58:48 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-08-27]
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-08-27]
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-08-27
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-08-27
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-08-27]
2025-08-27 17:59:00 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-08-27]
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 17:59:05 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-21
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-21
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:59:17 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-20
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-20
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:59:21 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-19
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-19
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:59:24 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-18
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-18
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 17:59:28 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 17:59:32 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1611 type : 1 stkCode : 1 zone : Optional[9]
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 17:59:40 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.4
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=9)
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=9)
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@222c56dc
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:59:41 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/available-lots - ADRESSE : 192.168.1.4
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - | Entry | PreparationController.getAvailableLots | Args | request=AvailableLotsRequest(cmpId=1, medId=1880, oldLotId=1, qte=4)
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getAvailableLots | Args | cmpId=1, medId=1880, oldLotId=1
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Fetched the available lots from the repo | projections.size=2
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Mapped the projections to DTOs | lots.size=2
2025-08-27 17:59:44 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - Fetched the available lots from the service | lots.size=2
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/add-lot - ADRESSE : 192.168.1.4
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - | Entry | PreparationController.addProductLot | Args | request=AddLotRequest(cmpId=1, id=1611, type=1, stkCode=1, lotId=2, medId=1880, quantity=10)
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.addProductLot | Args | request=AddLotRequest(cmpId=1, id=1611, type=1, stkCode=1, lotId=2, medId=1880, quantity=10)
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 17:59:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=INSERT
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Récupération du user code de l'utilisateur authentifié
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Réponse de la procédure stockée pour ajouter un lot à une commande 1
2025-08-27 17:59:56 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : L'ajout du lot à la commande n'a pas pu avoir lieu
2025-08-27 17:59:56 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: L'ajout du lot à la commande n'a pas pu avoir lieu]
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/edit-quantity - ADRESSE : 192.168.1.4
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - | Entry | PreparationController.editQuantityCommande | Args | id=LigneQteDto(cmpId=1, id=1611, type=1, stkCode=1, no=8, qte=3, newLotId=null, motif=null)
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.editQuantityCommande | Args | ligne=LigneQteDto(cmpId=1, id=1611, type=1, stkCode=1, no=8, qte=3, newLotId=null, motif=null)
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=UPDATE
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Récupération du user code de l'utilisateur authentifié
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Réponse de la procédure stockée pour modifier la quantité d'une ligne de commande 1
2025-08-27 18:00:48 INFO  [http-nio-8080-exec-2] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La modification de la quantité de la ligne de commande n'a pas pu avoir lieu
2025-08-27 18:00:48 WARN  [http-nio-8080-exec-2] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: La modification de la quantité de la ligne de commande n'a pas pu avoir lieu]
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1611 type : 1 stkCode : 1 zone : Optional[9]
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=9)
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=9)
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@7f51a936
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 18:01:06 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/available-lots - ADRESSE : 192.168.1.4
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - | Entry | PreparationController.getAvailableLots | Args | request=AvailableLotsRequest(cmpId=1, medId=1880, oldLotId=1, qte=4)
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getAvailableLots | Args | cmpId=1, medId=1880, oldLotId=1
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Fetched the available lots from the repo | projections.size=2
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Mapped the projections to DTOs | lots.size=2
2025-08-27 18:01:09 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - Fetched the available lots from the service | lots.size=2
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/add-lot - ADRESSE : 192.168.1.4
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - | Entry | PreparationController.addProductLot | Args | request=AddLotRequest(cmpId=1, id=1611, type=1, stkCode=1, lotId=2, medId=1880, quantity=10)
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.addProductLot | Args | request=AddLotRequest(cmpId=1, id=1611, type=1, stkCode=1, lotId=2, medId=1880, quantity=10)
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=INSERT
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Récupération du user code de l'utilisateur authentifié
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Réponse de la procédure stockée pour ajouter un lot à une commande 1
2025-08-27 18:01:14 INFO  [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : L'ajout du lot à la commande n'a pas pu avoir lieu
2025-08-27 18:01:14 WARN  [http-nio-8080-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: L'ajout du lot à la commande n'a pas pu avoir lieu]
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/edit-quantity - ADRESSE : 192.168.1.4
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - | Entry | PreparationController.editQuantityCommande | Args | id=LigneQteDto(cmpId=1, id=1611, type=1, stkCode=1, no=8, qte=2, newLotId=null, motif=null)
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.editQuantityCommande | Args | ligne=LigneQteDto(cmpId=1, id=1611, type=1, stkCode=1, no=8, qte=2, newLotId=null, motif=null)
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=UPDATE
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Récupération du user code de l'utilisateur authentifié
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Réponse de la procédure stockée pour modifier la quantité d'une ligne de commande 1
2025-08-27 18:01:26 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La modification de la quantité de la ligne de commande n'a pas pu avoir lieu
2025-08-27 18:01:26 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: La modification de la quantité de la ligne de commande n'a pas pu avoir lieu]
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/available-lots - ADRESSE : 192.168.1.4
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.c.PreparationController - | Entry | PreparationController.getAvailableLots | Args | request=AvailableLotsRequest(cmpId=1, medId=1880, oldLotId=1, qte=4)
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getAvailableLots | Args | cmpId=1, medId=1880, oldLotId=1
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Fetched the available lots from the repo | projections.size=2
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Mapped the projections to DTOs | lots.size=2
2025-08-27 18:01:34 INFO  [http-nio-8080-exec-10] d.a.a.c.PreparationController - Fetched the available lots from the service | lots.size=2
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/replace-lot - ADRESSE : 192.168.1.4
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - | Entry | PreparationController.replaceProductLot | Args | request=ReplaceLotRequest(cmpId=1, id=1611, type=1, stkCode=1, no=8, newLotId=2)
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.replaceProductLot | Args | request=ReplaceLotRequest(cmpId=1, id=1611, type=1, stkCode=1, no=8, newLotId=2)
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=RUN
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Récupération du user code de l'utilisateur authentifié
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Réponse de la procédure stockée pour remplacer le lot d'une ligne de commande 1
2025-08-27 18:01:36 INFO  [http-nio-8080-exec-2] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Le remplacement du lot de la ligne de commande n'a pas pu avoir lieu
2025-08-27 18:01:36 WARN  [http-nio-8080-exec-2] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Le remplacement du lot de la ligne de commande n'a pas pu avoir lieu]
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 18:01:46 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1611 type : 1 stkCode : 1 zone : Optional[9]
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.4
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=9)
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=9)
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@b64da91
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:01:51 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/available-lots - ADRESSE : 192.168.1.4
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - | Entry | PreparationController.getAvailableLots | Args | request=AvailableLotsRequest(cmpId=1, medId=1880, oldLotId=1, qte=4)
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getAvailableLots | Args | cmpId=1, medId=1880, oldLotId=1
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Fetched the available lots from the repo | projections.size=2
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Mapped the projections to DTOs | lots.size=2
2025-08-27 18:01:54 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Fetched the available lots from the service | lots.size=2
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/replace-lot - ADRESSE : 192.168.1.4
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - | Entry | PreparationController.replaceProductLot | Args | request=ReplaceLotRequest(cmpId=1, id=1611, type=1, stkCode=1, no=8, newLotId=16)
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.replaceProductLot | Args | request=ReplaceLotRequest(cmpId=1, id=1611, type=1, stkCode=1, no=8, newLotId=16)
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=RUN
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Récupération du user code de l'utilisateur authentifié
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Réponse de la procédure stockée pour remplacer le lot d'une ligne de commande 1
2025-08-27 18:01:56 INFO  [http-nio-8080-exec-8] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Le remplacement du lot de la ligne de commande n'a pas pu avoir lieu
2025-08-27 18:01:56 WARN  [http-nio-8080-exec-8] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Le remplacement du lot de la ligne de commande n'a pas pu avoir lieu]
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 18:01:59 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[]
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 
2025-08-27 18:02:10 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-17], search : Optional[]
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-17, search : 
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-17], search : Optional[]
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-17, search : 
2025-08-27 18:02:15 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-17], search : Optional[0]
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-17], search : Optional[0]
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-17, search : 0
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-17, search : 0
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=0
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=0
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=0
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=0
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 18:02:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 18:02:31 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1611 type : 1 stkCode : 1 zone : Optional[8]
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:02:34 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/available-lots - ADRESSE : 192.168.1.4
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - | Entry | PreparationController.getAvailableLots | Args | request=AvailableLotsRequest(cmpId=1, medId=4346, oldLotId=4, qte=2)
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getAvailableLots | Args | cmpId=1, medId=4346, oldLotId=4
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Fetched the available lots from the repo | projections.size=0
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Mapped the projections to DTOs | lots.size=0
2025-08-27 18:02:36 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - Fetched the available lots from the service | lots.size=0
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/available-lots - ADRESSE : 192.168.1.4
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.c.PreparationController - | Entry | PreparationController.getAvailableLots | Args | request=AvailableLotsRequest(cmpId=1, medId=4346, oldLotId=4, qte=2)
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getAvailableLots | Args | cmpId=1, medId=4346, oldLotId=4
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Fetched the available lots from the repo | projections.size=0
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Mapped the projections to DTOs | lots.size=0
2025-08-27 18:02:38 INFO  [http-nio-8080-exec-10] d.a.a.c.PreparationController - Fetched the available lots from the service | lots.size=0
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 18:02:40 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1611 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 18:02:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 7
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:02:44 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/available-lots - ADRESSE : 192.168.1.4
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - | Entry | PreparationController.getAvailableLots | Args | request=AvailableLotsRequest(cmpId=1, medId=2535, oldLotId=3, qte=1)
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getAvailableLots | Args | cmpId=1, medId=2535, oldLotId=3
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Fetched the available lots from the repo | projections.size=2
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Mapped the projections to DTOs | lots.size=2
2025-08-27 18:02:47 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - Fetched the available lots from the service | lots.size=2
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande/add-lot - ADRESSE : 192.168.1.4
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - | Entry | PreparationController.addProductLot | Args | request=AddLotRequest(cmpId=1, id=1611, type=1, stkCode=1, lotId=4, medId=2535, quantity=100)
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.addProductLot | Args | request=AddLotRequest(cmpId=1, id=1611, type=1, stkCode=1, lotId=4, medId=2535, quantity=100)
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=READ
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.hasAuthorization | Args | code=38, type=INSERT
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | AuthorizationService.callAuthorizationProcedure | Args | code=38
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched the stored procedure result {XMSG=0, XIMPRIME=1, XLIRE=1, XUPDATE=1, XEXECUTE=1, XINSERT=1, XEXPORT=1, XDELETE=1}
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Récupération du user code de l'utilisateur authentifié
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Réponse de la procédure stockée pour ajouter un lot à une commande 1
2025-08-27 18:02:57 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : L'ajout du lot à la commande n'a pas pu avoir lieu
2025-08-27 18:02:57 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: L'ajout du lot à la commande n'a pas pu avoir lieu]
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1611 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 7
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 18:03:19 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 18:03:20 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 18:11:03 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 18:11:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:11:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:11:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.4
2025-08-27 18:11:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:11:09 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-27 18:11:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-27 18:11:09 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-27 18:15:00 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 18:15:00 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 18:15:00 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 18:15:53 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-27 18:15:53 INFO  [main] d.a.a.A2spreparationApplicationTests - Starting A2spreparationApplicationTests using Java 17.0.11 with PID 32548 (started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-27 18:15:53 INFO  [main] d.a.a.A2spreparationApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-27 18:15:55 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-27 18:15:55 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 18:15:55 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 175 ms. Found 20 JPA repository interfaces.
2025-08-27 18:15:57 INFO  [main] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 18:15:57 INFO  [main] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@43ab0659
2025-08-27 18:15:57 INFO  [main] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 18:15:57 INFO  [main] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 18:15:57 INFO  [main] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-27 18:15:57 INFO  [main] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-27 18:15:57 INFO  [main] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 18:15:58 INFO  [main] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 18:15:58 INFO  [main] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-27 18:15:58 INFO  [main] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 18:15:58 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 18:15:58 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 18:15:59 INFO  [main] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-27 18:15:59 INFO  [main] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 18:16:00 INFO  [main] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-27 18:16:01 INFO  [main] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-27 18:16:01 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 18:16:03 INFO  [main] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-27 18:16:04 INFO  [main] d.a.a.A2spreparationApplicationTests - Started A2spreparationApplicationTests in 11.039 seconds (process running for 12.807)
2025-08-27 18:16:04 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 18:16:04 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 18:16:04 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 18:22:27 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-27 18:22:28 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 7872 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-27 18:22:28 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 18:22:28 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-27 18:22:28 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 18:22:28 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 18:22:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-27 18:22:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 18:22:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 172 ms. Found 20 JPA repository interfaces.
2025-08-27 18:22:31 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-27 18:22:31 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-27 18:22:31 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 18:22:31 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-27 18:22:31 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 18:22:31 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3604 ms
2025-08-27 18:22:32 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 18:22:33 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@4dc5adef
2025-08-27 18:22:33 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 18:22:33 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 18:22:33 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-27 18:22:33 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-27 18:22:33 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 18:22:33 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 18:22:34 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-27 18:22:34 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 18:22:34 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 18:22:34 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 18:22:35 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-27 18:22:35 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 18:22:36 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-27 18:22:37 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-27 18:22:37 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 18:22:38 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-27 18:22:40 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 18:22:40 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-27 18:22:40 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-27 18:22:40 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 12.857 seconds (process running for 13.366)
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.4
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-27 18:22:59 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-27 18:23:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-08-27 18:23:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-08-27 18:23:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-08-27 18:23:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:23:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-08-27 18:23:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@4c7fc2ae, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 18:23:12 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@4c7fc2ae, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-27 18:23:12 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-27 18:23:12 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 18:23:14 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 18:23:24 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 18:23:28 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 18:23:33 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.1.4
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Company Id retrieved 1
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=6215
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-08-27 18:23:36 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 18:27:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 18:27:56 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[]
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[]
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 
2025-08-27 18:28:03 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[0]
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 0
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[0]
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 0
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 18:28:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1598 type : 1 stkCode : 1 zone : Optional[9]
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 18:28:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:28:11 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-06-09], search : Optional[0]
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-06-09, search : 0
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=11
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=11
2025-08-27 18:28:12 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=11
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 18:45:09 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/control - ADRESSE : 192.168.1.4
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-08-27
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-08-27
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.controllers.UserController - Entering the getControlAuthorization method from the UserController
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Entering the getControlAuthorization method from the AuthorizationService for formCode 482
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation du contrôle 1
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-2] d.a.a.controllers.UserController - Control Authorization recieved from the service : AuthorizationDto[code=482, value=1]
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-08-27
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-08-27
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-08-27
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-08-27 18:45:13 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-08-27
2025-08-27 18:45:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 18:45:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-08-27
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-08-27
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-08-27 18:45:18 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-08-27
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 18:45:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1595 type : 1 stkCode : 1 zone : Optional[9]
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@5b83db77
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 18:45:26 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=2, colisD=3, frigo=0, psycho=5, chers=0, sachet=4]
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.4
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 18:45:44 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-08-27]
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-08-27]
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-08-27
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-08-27
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-08-27]
2025-08-27 18:45:51 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-08-27]
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-09]
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-09
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=11
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-09]
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-09]
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-09
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=11
2025-08-27 18:46:00 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-09]
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@6df3f8a
2025-08-27 18:46:04 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=6, colisD=0, frigo=4, psycho=5, chers=2, sachet=3]
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/saisir-colisage - ADRESSE : 192.168.1.4
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.saisirColisageZone | Args | cmdZoneColisageDto=CmdZoneColisageDto(super=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10), colisV=6, colisD=0, frigo=4, psycho=4, chers=2, sachet=3)
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.saisirColisageZone | Args | cmdZoneColisageDto=CmdZoneColisageDto(super=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10), colisV=6, colisD=0, frigo=4, psycho=4, chers=2, sachet=3)
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Reponse of the stored proceudre saisirColisageZone | response=0
2025-08-27 18:46:18 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Réponse de la méthode de saisi du colisage | response=0
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@5e91ec6b
2025-08-27 18:46:25 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=6, colisD=0, frigo=4, psycho=4, chers=2, sachet=3]
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1597, type=1, stkCode=1, zone=10)
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1597, type=1, stkCode=1, zone=10)
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@699aa59b
2025-08-27 18:46:28 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=3, colisD=0, frigo=3, psycho=0, chers=3, sachet=0]
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@38b8986c
2025-08-27 18:46:31 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=2, colisD=3, frigo=0, psycho=5, chers=0, sachet=4]
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@4582f7b2
2025-08-27 18:46:33 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=6, colisD=0, frigo=4, psycho=4, chers=2, sachet=3]
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@29f9e6b1, dz.a2s.a2spreparation.entities.Inventaire@28fc233f]
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@29f9e6b1, dz.a2s.a2spreparation.entities.Inventaire@28fc233f]
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 18:48:36 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 18:48:39 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:48:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:48:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@214ad0b8, dz.a2s.a2spreparation.entities.Inventaire@1a4dc65c]
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@214ad0b8, dz.a2s.a2spreparation.entities.Inventaire@1a4dc65c]
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 18:48:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 18:48:58 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 18:49:07 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:49:08 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:49:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1)
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:49:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:49:18 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 18:53:40 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@869f700, dz.a2s.a2spreparation.entities.Inventaire@2cd43f19]
2025-08-27 18:53:44 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@869f700, dz.a2s.a2spreparation.entities.Inventaire@2cd43f19]
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 18:53:46 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 18:54:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/hh - ADRESSE : 192.168.1.3
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=hh
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=hh
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = null
2025-08-27 18:57:49 ERROR [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Emplacement is null | emplacement does not exist
2025-08-27 18:57:49 INFO  [http-nio-8080-exec-2] d.a.a.e.GlobalExceptionHandler - Entering notFoundExceptionHandler from the GlobalExceptionsHandler with message L'emplacement spécifié est introuvable
2025-08-27 18:57:49 ERROR [http-nio-8080-exec-2] d.a.a.e.GlobalExceptionHandler - Returning the following error L'emplacement spécifié est introuvable
2025-08-27 18:57:49 WARN  [http-nio-8080-exec-2] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.RessourceNotFoundException: L'emplacement spécifié est introuvable]
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 18:59:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1adf7fcb, dz.a2s.a2spreparation.entities.Inventaire@113289d3]
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1adf7fcb, dz.a2s.a2spreparation.entities.Inventaire@113289d3]
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 18:59:40 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 18:59:42 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 18:59:59 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:00:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Hhh - ADRESSE : 192.168.1.4
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Hhh
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Hhh
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = null
2025-08-27 19:00:08 ERROR [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Emplacement is null | emplacement does not exist
2025-08-27 19:00:08 INFO  [http-nio-8080-exec-5] d.a.a.e.GlobalExceptionHandler - Entering notFoundExceptionHandler from the GlobalExceptionsHandler with message L'emplacement spécifié est introuvable
2025-08-27 19:00:08 ERROR [http-nio-8080-exec-5] d.a.a.e.GlobalExceptionHandler - Returning the following error L'emplacement spécifié est introuvable
2025-08-27 19:00:08 WARN  [http-nio-8080-exec-5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.RessourceNotFoundException: L'emplacement spécifié est introuvable]
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Hhh - ADRESSE : 192.168.1.4
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Hhh
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Hhh
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = null
2025-08-27 19:00:12 ERROR [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Emplacement is null | emplacement does not exist
2025-08-27 19:00:12 INFO  [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - Entering notFoundExceptionHandler from the GlobalExceptionsHandler with message L'emplacement spécifié est introuvable
2025-08-27 19:00:12 ERROR [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - Returning the following error L'emplacement spécifié est introuvable
2025-08-27 19:00:12 WARN  [http-nio-8080-exec-7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.RessourceNotFoundException: L'emplacement spécifié est introuvable]
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-37 - ADRESSE : 192.168.1.4
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-37
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-37
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-27 19:00:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:05:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/hhh - ADRESSE : 192.168.1.3
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=hhh
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=hhh
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = null
2025-08-27 19:05:43 ERROR [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Emplacement is null | emplacement does not exist
2025-08-27 19:05:43 INFO  [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - Entering notFoundExceptionHandler from the GlobalExceptionsHandler with message L'emplacement spécifié est introuvable
2025-08-27 19:05:43 ERROR [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - Returning the following error L'emplacement spécifié est introuvable
2025-08-27 19:05:43 WARN  [http-nio-8080-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.RessourceNotFoundException: L'emplacement spécifié est introuvable]
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-37 - ADRESSE : 192.168.1.3
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-37
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-37
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-27 19:05:53 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 19:06:37 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1acf7dca, dz.a2s.a2spreparation.entities.Inventaire@6affb472]
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1acf7dca, dz.a2s.a2spreparation.entities.Inventaire@6affb472]
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 19:06:46 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 19:06:48 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:06:57 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1)
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:07:00 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:07:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ggg - ADRESSE : 192.168.1.3
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ggg
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ggg
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = null
2025-08-27 19:07:07 ERROR [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Emplacement is null | emplacement does not exist
2025-08-27 19:07:07 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - Entering notFoundExceptionHandler from the GlobalExceptionsHandler with message L'emplacement spécifié est introuvable
2025-08-27 19:07:07 ERROR [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - Returning the following error L'emplacement spécifié est introuvable
2025-08-27 19:07:07 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.RessourceNotFoundException: L'emplacement spécifié est introuvable]
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-37 - ADRESSE : 192.168.1.3
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-37
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-37
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:07:17 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:07:38 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:07:42 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1)
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:07:48 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:07:51 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-37 - ADRESSE : 192.168.1.3
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-37
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-37
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:07:59 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:08:23 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:08:27 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1)
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:08:30 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:08:32 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:08:40 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:09:09 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:09:42 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 19:10:20 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@53b38c89, dz.a2s.a2spreparation.entities.Inventaire@7b414eb8]
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@53b38c89, dz.a2s.a2spreparation.entities.Inventaire@7b414eb8]
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 19:10:25 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 19:10:28 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 19:10:37 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:10:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Hh - ADRESSE : 192.168.1.4
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Hh
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Hh
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = null
2025-08-27 19:10:59 ERROR [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Emplacement is null | emplacement does not exist
2025-08-27 19:10:59 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - Entering notFoundExceptionHandler from the GlobalExceptionsHandler with message L'emplacement spécifié est introuvable
2025-08-27 19:10:59 ERROR [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - Returning the following error L'emplacement spécifié est introuvable
2025-08-27 19:10:59 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.RessourceNotFoundException: L'emplacement spécifié est introuvable]
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-50 - ADRESSE : 192.168.1.4
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-50
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-50
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-50
2025-08-27 19:11:06 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-50
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:11:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:22:43 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:23:09 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:23:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-37 - ADRESSE : 192.168.1.3
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-37
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-37
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:24:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:25:45 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1)
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:25:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:25:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:25:52 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-37 - ADRESSE : 192.168.1.3
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-37
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-37
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:26:08 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:26:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@728f3ec3, dz.a2s.a2spreparation.entities.Inventaire@194b6bf0]
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@728f3ec3, dz.a2s.a2spreparation.entities.Inventaire@194b6bf0]
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 19:27:16 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 19:27:18 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-37 - ADRESSE : 192.168.1.3
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-37
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-37
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:27:36 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-50 - ADRESSE : 192.168.1.3
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-50
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-50
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-50
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-50
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-50, stockZero=0, search=, page=1)
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-50, stockZero=0, search=, page=1
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:27:58 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:28:06 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:37:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:42:29 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:42:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ps3-70 - ADRESSE : 192.168.1.3
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ps3-70
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ps3-70
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PS3-70
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PS3-70
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:42:59 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:43:07 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1)
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:43:13 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:43:23 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@45e70ef8, dz.a2s.a2spreparation.entities.Inventaire@3e0688c4]
2025-08-27 19:48:03 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@45e70ef8, dz.a2s.a2spreparation.entities.Inventaire@3e0688c4]
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 19:48:06 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ps3-70 - ADRESSE : 192.168.1.3
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ps3-70
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ps3-70
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PS3-70
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PS3-70
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:48:17 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=2)
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=2
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:48:24 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=3)
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=3
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:48:27 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1)
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:48:37 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:48:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:48:59 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:09 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 19:52:14 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@45899f9b, dz.a2s.a2spreparation.entities.Inventaire@4b059614]
2025-08-27 20:28:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@45899f9b, dz.a2s.a2spreparation.entities.Inventaire@4b059614]
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-27
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-27
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 20:28:46 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:28:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 20:28:58 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 20:29:02 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 20:29:09 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 20:29:09 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 20:29:09 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 20:29:15 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-27 20:29:15 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 24816 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-27 20:29:15 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 20:29:15 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-27 20:29:15 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 20:29:15 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 20:29:18 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-27 20:29:18 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 20:29:18 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 148 ms. Found 20 JPA repository interfaces.
2025-08-27 20:29:19 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-27 20:29:19 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-27 20:29:19 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 20:29:19 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-27 20:29:20 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 20:29:20 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4465 ms
2025-08-27 20:29:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 20:29:21 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@57347057
2025-08-27 20:29:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 20:29:21 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 20:29:22 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-27 20:29:22 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-27 20:29:22 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 20:29:22 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 20:29:22 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-27 20:29:25 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 20:29:26 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 20:29:26 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 20:29:30 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-27 20:29:30 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 20:29:31 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-27 20:29:34 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-27 20:29:35 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 20:29:36 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-27 20:29:38 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 20:29:38 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-27 20:29:38 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-27 20:29:38 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 23.541 seconds (process running for 24.184)
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 20:29:42 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:29:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 20:29:43 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 20:29:59 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 20:51:21 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 20:51:21 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 20:51:21 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 20:51:27 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-27 20:51:27 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 32612 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-27 20:51:27 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 20:51:27 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-27 20:51:27 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 20:51:27 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 20:51:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-27 20:51:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 20:51:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 179 ms. Found 20 JPA repository interfaces.
2025-08-27 20:51:30 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-27 20:51:30 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-27 20:51:30 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 20:51:30 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-27 20:51:31 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 20:51:31 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3886 ms
2025-08-27 20:51:32 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 20:51:32 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@221397cb
2025-08-27 20:51:32 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 20:51:32 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 20:51:33 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-27 20:51:33 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-27 20:51:33 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 20:51:33 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 20:51:33 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-27 20:51:34 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 20:51:35 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 20:51:35 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 20:51:40 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-27 20:51:40 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 20:51:41 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-27 20:51:44 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-27 20:51:47 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 20:51:52 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-27 20:51:53 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 20:51:53 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-27 20:51:53 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-27 20:51:53 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 27.001 seconds (process running for 27.59)
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:52:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 20:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:52:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 20:52:52 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 20:53:06 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@501bec31, dz.a2s.a2spreparation.entities.Inventaire@150135c3]
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@501bec31, dz.a2s.a2spreparation.entities.Inventaire@150135c3]
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 20:53:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-27
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-27
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 20:53:14 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 20:53:20 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.3
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1595 type : 1 stkCode : 1 zone : Optional[9]
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 20:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.3
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.3
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 20:54:08 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@5e985c1c
2025-08-27 20:59:39 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 20:59:39 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 20:59:39 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 20:59:43 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-27 20:59:43 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 37344 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-27 20:59:43 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 20:59:43 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-27 20:59:43 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 20:59:43 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 20:59:45 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-27 20:59:45 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 20:59:45 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115 ms. Found 20 JPA repository interfaces.
2025-08-27 20:59:47 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-27 20:59:47 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-27 20:59:47 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 20:59:47 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-27 20:59:47 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 20:59:47 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3944 ms
2025-08-27 20:59:48 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 20:59:49 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@4dc5adef
2025-08-27 20:59:49 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 20:59:49 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 20:59:49 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-27 20:59:49 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-27 20:59:49 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 20:59:49 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 20:59:50 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-27 20:59:50 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-27 20:59:50 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 20:59:50 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-27 20:59:51 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-27 20:59:51 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 20:59:52 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-27 20:59:52 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-27 20:59:53 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 20:59:54 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-27 20:59:55 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 20:59:55 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-27 20:59:55 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-27 20:59:55 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 12.657 seconds (process running for 13.235)
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.3
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1595 type : 1 stkCode : 1 zone : Optional[9]
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 21:00:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.3
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.3
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 21:00:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@5640c22d
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-27 21:00:52 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-27
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-27
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 21:00:58 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 21:01:09 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1599 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 21:01:18 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 2
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.4
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1599, type=1, stkCode=1, zone=10)
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1599, type=1, stkCode=1, zone=10)
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@c859615
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:01:19 INFO  [http-nio-8080-exec-4] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 21:02:14 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 21:02:45 INFO  [http-nio-8080-exec-3] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1611 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 21:02:51 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 7
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.4
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=10)
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=10)
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@29951f03
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:02:53 INFO  [http-nio-8080-exec-2] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 21:03:33 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1611 type : 1 stkCode : 1 zone : Optional[9]
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 21:03:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.4
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-6] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=9)
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1611, type=1, stkCode=1, zone=9)
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@1d0b3fc2
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 21:03:37 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.4
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1612 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 21:03:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 8
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/receipt-data - ADRESSE : 192.168.1.4
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.4
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:03:45 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 21:03:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 21:03:46 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - | Entry | PreparationController.getZoneReceiptData | Args | commande=CmdZoneIdDto(cmpId=1, id=1612, type=1, stkCode=1, zone=10)
2025-08-27 21:03:46 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - | Entry | PreparationService.getReceiptParZone | Args | id=CmdZoneIdDto(cmpId=1, id=1612, type=1, stkCode=1, zone=10)
2025-08-27 21:03:46 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Fetched the receipt data from the repo | receptData=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@62dd93
2025-08-27 21:03:46 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:03:46 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-08-17
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-08-27 21:04:14 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 21:05:01 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.4
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 21:07:52 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-27], search : Optional[]
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-27, search : 
2025-08-27 21:08:30 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:08:35 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:08:38 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:09:37 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[34]
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[34]
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 34
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 34
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=3
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=3
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=3
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=3
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=3
2025-08-27 21:09:42 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=3
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:09:44 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:09:47 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:09:50 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[35]
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[35]
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 35
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 35
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=1
2025-08-27 21:09:51 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=1
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:09:54 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:10:01 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:10:04 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[blida]
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[blida]
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : blida
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : blida
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=3
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=3
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=3
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=3
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=3
2025-08-27 21:10:05 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=3
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:10:09 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:10:10 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:10:12 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[bouza]
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : bouza
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[bouza]
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : bouza
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=1
2025-08-27 21:10:13 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=1
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[]
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 
2025-08-27 21:10:16 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=0
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:10:20 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.3
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1612 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 21:10:24 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 8
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.3
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:10:25 INFO  [http-nio-8080-exec-3] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.3
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:12:02 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-09
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 11
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 11
2025-08-27 21:12:51 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Data fetched from the service length = 11
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/all-commandes-zones - ADRESSE : 192.168.1.3
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getAllCommandesZone | Args | date : Optional[2025-08-17], search : Optional[0]
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getAllCommandesZone | Args | date : 2025-08-17, search : 0
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the orders from the repo | commandes.size=4
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Mapped the orders to the response | response.size=4
2025-08-27 21:12:53 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the orders from the service | commandes.size=4
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-08-27
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-08-27
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-08-27
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/control - ADRESSE : 192.168.1.3
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.controllers.UserController - Entering the getControlAuthorization method from the UserController
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Entering the getControlAuthorization method from the AuthorizationService for formCode 482
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-08-27
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-08-27
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation du contrôle 1
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-5] d.a.a.controllers.UserController - Control Authorization recieved from the service : AuthorizationDto[code=482, value=1]
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-08-27 21:13:51 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-08-27
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-08-17
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-08-17
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-08-17
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-08-17
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-08-17
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-08-27 21:13:59 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-08-17
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 21:14:05 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 21:15:18 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 21:15:31 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.3
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.3
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.3
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1595 type : 1 stkCode : 1 zone : Optional[9]
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 1
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-4] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@2d565b3b
2025-08-27 21:17:44 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=2, colisD=3, frigo=0, psycho=5, chers=0, sachet=4]
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 21:17:57 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/commande-zone/details - ADRESSE : 192.168.1.3
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/preparation/motifs - ADRESSE : 192.168.1.3
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.c.PreparationController - Entering the getDetailsVenteZone method from the PreparationController with cmpId : 1 venteId : 1599 type : 1 stkCode : 1 zone : Optional[10]
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Entering the getDetailsVenteZone method from the PreparationService
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.PreparationServiceImpl - Retruning results from the PreparationService with length 2
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Entering the method getAllMotifs from the PreparationController
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Entering the geAllMotif method from the PreparationService
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.3
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.PreparationServiceImpl - Fetched the motifs from the repo [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-5] d.a.a.c.PreparationController - Fetched the list of motifs from the service [Motif(id=1, libelle=Produit en rupture de stock, cmpId=1), Motif(id=2, libelle=Quantité insuffisante, cmpId=1), Motif(id=3, libelle=Produit perimé, cmpId=1), Motif(id=4, libelle=Problème de lot, cmpId=1), Motif(id=5, libelle=Restrictions légales, cmpId=1), Motif(id=6, libelle=Commande annulée, cmpId=1)]
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1599, type=1, stkCode=1, zone=10)
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1599, type=1, stkCode=1, zone=10)
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@1a335b4b
2025-08-27 21:18:03 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=0, colisD=2, frigo=0, psycho=0, chers=0, sachet=0]
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.1.3
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-09
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-09
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 11
2025-08-27 21:18:19 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-09
2025-08-27 21:21:30 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 21:21:30 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 21:21:30 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
