2025-08-28 10:26:10 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-28 10:26:10 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 19076 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-28 10:26:10 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 10:26:10 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-28 10:26:10 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-28 10:26:10 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-28 10:26:12 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-28 10:26:12 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 10:26:12 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 235 ms. Found 20 JPA repository interfaces.
2025-08-28 10:26:15 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 10:26:15 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-28 10:26:15 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 10:26:15 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-28 10:26:15 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 10:26:15 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4689 ms
2025-08-28 10:26:16 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 10:26:17 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@7b9d8267
2025-08-28 10:26:17 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 10:26:17 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 10:26:17 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-28 10:26:17 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-28 10:26:18 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 10:26:19 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 10:26:19 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-28 10:26:22 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 10:26:23 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 10:26:23 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 10:26:32 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-28 10:26:32 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 10:26:34 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 10:26:43 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-28 10:26:47 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 10:26:50 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-28 10:26:53 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-28 10:26:54 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-28 10:26:54 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 10:26:54 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 44.49 seconds (process running for 45.578)
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.3
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-28 10:28:03 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-28 10:28:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.3
2025-08-28 10:28:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:04 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-28 10:28:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-28 10:28:04 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-28 10:28:08 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-08-28 10:28:08 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-08-28 10:28:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:08 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:08 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@29e772c4, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-28 10:28:08 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@29e772c4, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-28 10:28:08 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-28 10:28:08 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 10:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 10:28:12 INFO  [http-nio-8080-exec-7] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-08-28 10:28:12 INFO  [http-nio-8080-exec-7] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-08-28 10:28:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-08-28 10:28:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-08-28 10:28:12 INFO  [http-nio-8080-exec-7] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@17422bee, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-28 10:28:12 INFO  [http-nio-8080-exec-7] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@17422bee, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-28 10:28:12 INFO  [http-nio-8080-exec-7] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-28 10:28:12 INFO  [http-nio-8080-exec-7] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 10:28:13 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1122d6e5, dz.a2s.a2spreparation.entities.Inventaire@18e88ce9]
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1122d6e5, dz.a2s.a2spreparation.entities.Inventaire@18e88ce9]
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:28:21 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:28:23 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:28:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:28:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:28:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:28:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:28:43 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:28:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:28:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@676c51f1, dz.a2s.a2spreparation.entities.Inventaire@c3195ad]
2025-08-28 10:28:46 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@676c51f1, dz.a2s.a2spreparation.entities.Inventaire@c3195ad]
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:28:49 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-36 - ADRESSE : 192.168.1.3
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-36
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-36
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 10:28:57 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:28:58 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:46:43 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 10:52:45 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@69d446d, dz.a2s.a2spreparation.entities.Inventaire@9b75bde]
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@69d446d, dz.a2s.a2spreparation.entities.Inventaire@9b75bde]
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:52:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:52:55 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-36 - ADRESSE : 192.168.1.3
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-36
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-36
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:53:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 10:53:29 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@9e08994, dz.a2s.a2spreparation.entities.Inventaire@4b69f596]
2025-08-28 10:54:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@9e08994, dz.a2s.a2spreparation.entities.Inventaire@4b69f596]
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/22/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=22
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=22
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 10:54:02 ERROR [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-08-28 10:54:02 INFO  [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-08-28 10:54:02 WARN  [http-nio-8080-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2spreparation.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:54:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-36 - ADRESSE : 192.168.1.3
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-36
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-36
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:54:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 10:56:36 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@64a2a0c3, dz.a2s.a2spreparation.entities.Inventaire@26fc9e5e]
2025-08-28 10:56:42 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@64a2a0c3, dz.a2s.a2spreparation.entities.Inventaire@26fc9e5e]
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:56:44 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:56:51 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 10:56:58 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@bf5bff2, dz.a2s.a2spreparation.entities.Inventaire@5ddde13a]
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@bf5bff2, dz.a2s.a2spreparation.entities.Inventaire@5ddde13a]
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:58:19 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:58:21 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:58:32 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 10:58:50 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@43aa9025, dz.a2s.a2spreparation.entities.Inventaire@55e82575]
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@43aa9025, dz.a2s.a2spreparation.entities.Inventaire@55e82575]
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:59:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:59:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:59:11 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1f932323, dz.a2s.a2spreparation.entities.Inventaire@3518fd0a]
2025-08-28 10:59:28 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1f932323, dz.a2s.a2spreparation.entities.Inventaire@3518fd0a]
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:59:30 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 10:59:37 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:00:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.4
2025-08-28 11:00:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:07 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-28 11:00:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-28 11:00:07 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-28 11:00:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.1.4
2025-08-28 11:00:26 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:26 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-08-28 11:00:26 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-08-28 11:00:26 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ALGER, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-08-28 11:00:32 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-08-28 11:00:32 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-08-28 11:00:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-08-28 11:00:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-08-28 11:00:32 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@4a15d13b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-28 11:00:32 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@4a15d13b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-08-28 11:00:32 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-08-28 11:00:32 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 11:00:33 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1d3435c3, dz.a2s.a2spreparation.entities.Inventaire@512541b6]
2025-08-28 11:00:41 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1d3435c3, dz.a2s.a2spreparation.entities.Inventaire@512541b6]
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 11:00:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 11:00:50 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:00:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1)
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:01:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=2)
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=2
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:01:15 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=3)
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=3
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:01:19 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ps3-70 - ADRESSE : 192.168.1.4
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ps3-70
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ps3-70
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PS3-70
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PS3-70
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1)
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:01:41 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1)
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:01:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1)
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=-1, search=, page=1
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:01:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 11:02:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:02:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 11:02:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:00:45 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 12:00:45 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 12:00:45 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 12:00:49 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-28 12:00:49 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 9336 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-28 12:00:49 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 12:00:49 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-28 12:00:49 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-28 12:00:49 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-28 12:00:52 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-28 12:00:52 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 12:00:52 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 20 JPA repository interfaces.
2025-08-28 12:00:53 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 12:00:53 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-28 12:00:53 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 12:00:53 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-28 12:00:53 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 12:00:53 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3423 ms
2025-08-28 12:00:53 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 12:00:54 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@6b3e936a
2025-08-28 12:00:54 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 12:00:54 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 12:00:54 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-28 12:00:54 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-28 12:00:54 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 12:00:55 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 12:00:55 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-28 12:00:55 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 12:00:55 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 12:00:55 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 12:00:56 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-28 12:00:56 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 12:00:56 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 12:00:57 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-28 12:00:57 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 12:00:58 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-28 12:01:00 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-28 12:01:00 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-28 12:01:00 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 12:01:00 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 10.854 seconds (process running for 11.374)
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:04:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:04:40 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:16:01 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:23:28 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:23:51 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 12:25:01 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7da1f06e, dz.a2s.a2spreparation.entities.Inventaire@546e5a46]
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@7da1f06e, dz.a2s.a2spreparation.entities.Inventaire@546e5a46]
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 12:25:11 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:25:15 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:25:23 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:25:50 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:25:54 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:25:57 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 12:28:02 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@65aa6750, dz.a2s.a2spreparation.entities.Inventaire@6f7d170b]
2025-08-28 12:28:24 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@65aa6750, dz.a2s.a2spreparation.entities.Inventaire@6f7d170b]
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:28:26 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:28:33 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@187d41a6, dz.a2s.a2spreparation.entities.Inventaire@9b73339]
2025-08-28 12:29:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@187d41a6, dz.a2s.a2spreparation.entities.Inventaire@9b73339]
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:29:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:29:17 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:30:32 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:32:49 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:33:24 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:42:39 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:53:13 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=10, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=10, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:53:44 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:53:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 12:53:45 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=10, motif=bonjour]
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=10, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=10, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 12:54:27 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=10, motif=]
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:57:18 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:57:38 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 12:57:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:57:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 12:57:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:57:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:57:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:57:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:57:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:57:47 INFO  [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - Entering handleValidationErrors method from GlobalErrorHandler with message Validation failed for argument [0] in public org.springframework.http.ResponseEntity<dz.a2s.a2spreparation.dto.response.SuccessResponseDto<dz.a2s.a2spreparation.dto.inventaire.response.SaisiResponse>> dz.a2s.a2spreparation.controllers.InventaireController.saisirInventaire(dz.a2s.a2spreparation.dto.inventaire.request.SaisiRequest): [Field error in object 'saisiRequest' on field 'motif': rejected value [null]; codes [NotNull.saisiRequest.motif,NotNull.motif,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [saisiRequest.motif,motif]; arguments []; default message [motif]]; default message [ne doit pas être nul]] 
2025-08-28 12:57:47 ERROR [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - Détails de l'erreur de validation [motif : ne doit pas être nul]
2025-08-28 12:57:47 WARN  [http-nio-8080-exec-7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<dz.a2s.a2spreparation.dto.response.SuccessResponseDto<dz.a2s.a2spreparation.dto.inventaire.response.SaisiResponse>> dz.a2s.a2spreparation.controllers.InventaireController.saisirInventaire(dz.a2s.a2spreparation.dto.inventaire.request.SaisiRequest): [Field error in object 'saisiRequest' on field 'motif': rejected value [null]; codes [NotNull.saisiRequest.motif,NotNull.motif,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [saisiRequest.motif,motif]; arguments []; default message [motif]]; default message [ne doit pas être nul]] ]
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 12:58:20 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 12:59:56 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@52fe9847, dz.a2s.a2spreparation.entities.Inventaire@fcdecb9]
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@52fe9847, dz.a2s.a2spreparation.entities.Inventaire@fcdecb9]
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:00:12 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:00:14 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 13:00:21 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:00:22 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:00:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:00:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.4
2025-08-28 13:00:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:00:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:00:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:00:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:00:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:00:31 INFO  [http-nio-8080-exec-9] d.a.a.e.GlobalExceptionHandler - Entering handleValidationErrors method from GlobalErrorHandler with message Validation failed for argument [0] in public org.springframework.http.ResponseEntity<dz.a2s.a2spreparation.dto.response.SuccessResponseDto<dz.a2s.a2spreparation.dto.inventaire.response.SaisiResponse>> dz.a2s.a2spreparation.controllers.InventaireController.saisirInventaire(dz.a2s.a2spreparation.dto.inventaire.request.SaisiRequest): [Field error in object 'saisiRequest' on field 'motif': rejected value [null]; codes [NotNull.saisiRequest.motif,NotNull.motif,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [saisiRequest.motif,motif]; arguments []; default message [motif]]; default message [ne doit pas être nul]] 
2025-08-28 13:00:31 ERROR [http-nio-8080-exec-9] d.a.a.e.GlobalExceptionHandler - Détails de l'erreur de validation [motif : ne doit pas être nul]
2025-08-28 13:00:31 WARN  [http-nio-8080-exec-9] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<dz.a2s.a2spreparation.dto.response.SuccessResponseDto<dz.a2s.a2spreparation.dto.inventaire.response.SaisiResponse>> dz.a2s.a2spreparation.controllers.InventaireController.saisirInventaire(dz.a2s.a2spreparation.dto.inventaire.request.SaisiRequest): [Field error in object 'saisiRequest' on field 'motif': rejected value [null]; codes [NotNull.saisiRequest.motif,NotNull.motif,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [saisiRequest.motif,motif]; arguments []; default message [motif]]; default message [ne doit pas être nul]] ]
2025-08-28 13:00:59 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 13:00:59 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 13:00:59 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 13:01:02 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-28 13:01:02 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 6996 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-28 13:01:02 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 13:01:02 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-28 13:01:02 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-28 13:01:02 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-28 13:01:04 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-28 13:01:04 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 13:01:04 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 20 JPA repository interfaces.
2025-08-28 13:01:05 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 13:01:05 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-28 13:01:05 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 13:01:05 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-28 13:01:05 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 13:01:05 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2703 ms
2025-08-28 13:01:06 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 13:01:06 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@21942701
2025-08-28 13:01:06 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 13:01:06 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 13:01:06 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-28 13:01:06 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-28 13:01:06 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 13:01:07 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 13:01:07 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-28 13:01:07 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 13:01:07 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 13:01:07 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 13:01:08 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-28 13:01:08 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 13:01:09 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 13:01:09 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-28 13:01:10 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 13:01:11 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-28 13:01:12 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-28 13:01:12 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-28 13:01:12 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 13:01:12 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 9.78 seconds (process running for 10.192)
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:03:36 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 13:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3da8cdd4, dz.a2s.a2spreparation.entities.Inventaire@568e3ff7]
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3da8cdd4, dz.a2s.a2spreparation.entities.Inventaire@568e3ff7]
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:03:44 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:03:46 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 13:03:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:03:53 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.4
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=10, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=10, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:04:08 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=10, motif=null]
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:04:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:04:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:06:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:11:09 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:11:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:11:22 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:11:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:12:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 13:21:58 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@174468d3, dz.a2s.a2spreparation.entities.Inventaire@380b0a13]
2025-08-28 13:22:04 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@174468d3, dz.a2s.a2spreparation.entities.Inventaire@380b0a13]
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:22:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:22:13 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.4
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=0, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=0, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:22:23 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=0, motif=null]
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:22:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ps3-70 - ADRESSE : 192.168.1.4
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ps3-70
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ps3-70
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PS3-70
2025-08-28 13:22:44 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PS3-70
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1)
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PS3-70, stockZero=0, search=, page=1
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:22:45 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/Ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=Ppsy-36
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=Ppsy-36
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:22:56 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:26:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:26:41 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:28:09 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:29:43 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=1, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=1, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:29:53 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=1, motif=null]
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1875d1b3, dz.a2s.a2spreparation.entities.Inventaire@2b20e7b8]
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@1875d1b3, dz.a2s.a2spreparation.entities.Inventaire@2b20e7b8]
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:30:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:30:09 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:30:43 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:31:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:31:45 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=null]
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-36 - ADRESSE : 192.168.1.3
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-36
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-36
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:31:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:32:50 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:33:25 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=1, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=1, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:33:31 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=1, motif=null]
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:33:47 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=null]
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=null, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:34:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=null]
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:35:33 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:44:42 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3d1cc028, dz.a2s.a2spreparation.entities.Inventaire@44f2300f]
2025-08-28 13:44:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@3d1cc028, dz.a2s.a2spreparation.entities.Inventaire@44f2300f]
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:44:50 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 13:45:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:45:03 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:45:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:45:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 13:45:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:45:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:45:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:45:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:45:14 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=3, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:45:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=3, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:45:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:45:15 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:45:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:45:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:45:15 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:45:15 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=3, motif=]
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:45:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=]
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:45:51 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=4, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=4, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:45:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=4, motif=]
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=5, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=5, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 13:46:10 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=5, motif=]
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 13:46:13 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:22:04 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h35m5s652ms743µs200ns).
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 15:29:52 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@21ebf12d, dz.a2s.a2spreparation.entities.Inventaire@21334c3e]
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@21ebf12d, dz.a2s.a2spreparation.entities.Inventaire@21334c3e]
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:29:55 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:29:57 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:30:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 15:31:14 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@c182e5b, dz.a2s.a2spreparation.entities.Inventaire@7219f65f]
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@c182e5b, dz.a2s.a2spreparation.entities.Inventaire@7219f65f]
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:31:22 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:31:25 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:31:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.4
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=5, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=5, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 15:31:42 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=5, motif=]
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6669fcb8, dz.a2s.a2spreparation.entities.Inventaire@1a3f7c08]
2025-08-28 15:31:55 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@6669fcb8, dz.a2s.a2spreparation.entities.Inventaire@1a3f7c08]
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-08-28]
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-08-28]
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-08-28
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-08-28
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-08-28]
2025-08-28 15:32:00 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-08-28]
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-09]
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-09
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.1.4
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=11
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-09]
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-09]
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-09
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=11
2025-08-28 15:32:05 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-09]
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@3edb5c05
2025-08-28 15:32:08 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=6, colisD=0, frigo=4, psycho=4, chers=2, sachet=3]
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=9)
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@4bdd8eef
2025-08-28 15:32:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=2, colisD=3, frigo=0, psycho=5, chers=0, sachet=4]
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1596, type=1, stkCode=1, zone=9)
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1596, type=1, stkCode=1, zone=9)
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@4bb3889d
2025-08-28 15:32:15 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=0, colisD=0, frigo=0, psycho=2, chers=2, sachet=2]
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@35a475e5
2025-08-28 15:32:19 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=6, colisD=0, frigo=4, psycho=4, chers=2, sachet=3]
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1597, type=1, stkCode=1, zone=10)
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1597, type=1, stkCode=1, zone=10)
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@db48723
2025-08-28 15:32:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=3, colisD=0, frigo=3, psycho=0, chers=3, sachet=0]
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones/get-colisage - ADRESSE : 192.168.1.4
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - | Entry | CommandeController.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getColisageZone | Args | id=CmdZoneIdDto(cmpId=1, id=1595, type=1, stkCode=1, zone=10)
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CommandeServiceImpl - Fetched the colisage projection from the repo | projection=org.springframework.data.jpa.repository.query.AbstractJpaQuery$TupleConverter$TupleBackedMap@293615c7
2025-08-28 15:32:26 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CommandeController - Fetched the colisage from the service | colisage=ColisageDto[colisV=6, colisD=0, frigo=4, psycho=4, chers=2, sachet=3]
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=3, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=3, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 15:36:28 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=3, motif=]
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:36:44 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:36:48 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:36:54 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:38:37 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 15:39:20 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5eb2882e, dz.a2s.a2spreparation.entities.Inventaire@1657442]
2025-08-28 15:39:27 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@5eb2882e, dz.a2s.a2spreparation.entities.Inventaire@1657442]
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:39:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:39:39 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=3, motif=bonjour tout le monde, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=3, motif=bonjour tout le monde, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 15:39:51 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=3, motif=bonjour tout le monde]
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=3, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=3, motif=, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 15:40:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=3, motif=]
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:40:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:42:39 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=5, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=5, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 15:44:50 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=5, motif=bonjour]
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 15:45:12 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@328f8bc3, dz.a2s.a2spreparation.entities.Inventaire@18afb95f]
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@328f8bc3, dz.a2s.a2spreparation.entities.Inventaire@18afb95f]
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:45:19 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:45:21 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:45:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 15:50:03 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@38e9983e, dz.a2s.a2spreparation.entities.Inventaire@191e56f2]
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@38e9983e, dz.a2s.a2spreparation.entities.Inventaire@191e56f2]
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:50:10 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:50:13 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 15:50:28 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:50:29 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1)
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=-1, search=, page=1
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3849
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:50:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:50:39 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:05 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:32 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:40 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:51:55 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.4
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=hello there, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=hello there, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 15:52:23 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=hello there]
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.4
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=ppsy-36, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=ppsy-36, emplacement=PPSY-36, noLigne=1)
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 15:52:42 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=ppsy-36]
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-37 - ADRESSE : 192.168.1.4
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-37
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-37
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-28 15:52:53 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:52:54 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.4
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=5, motif=ppsy-37, emplacement=PPSY-37, noLigne=1)
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=5, motif=ppsy-37, emplacement=PPSY-37, noLigne=1)
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 15:53:20 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=5, motif=ppsy-37]
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:53:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-37 - ADRESSE : 192.168.1.4
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-37
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-37
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-28 15:54:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 15:54:17 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 15:59:41 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 15:59:42 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@632f9c38, dz.a2s.a2spreparation.entities.Inventaire@30f2cad6]
2025-08-28 15:59:44 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@632f9c38, dz.a2s.a2spreparation.entities.Inventaire@30f2cad6]
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:59:46 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 15:59:54 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.3
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.3
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 16:00:09 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@38fc4423, dz.a2s.a2spreparation.entities.Inventaire@18f4444a]
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 16:00:12 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@38fc4423, dz.a2s.a2spreparation.entities.Inventaire@18f4444a]
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.3
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:00:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 16:00:24 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:00:25 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2)
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=2
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:00:29 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:00:38 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:00:43 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:01:39 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.4
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.1.4
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.1.4
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for cmpId=1 and username=S.BENMAMMAR - authorizations size : 7
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-08-28 16:01:57 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=38, value=1], AuthorizationDto[code=480, value=1], AuthorizationDto[code=481, value=1], AuthorizationDto[code=482, value=1], AuthorizationDto[code=489, value=1], AuthorizationDto[code=513, value=1], AuthorizationDto[code=790, value=1]]
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.4
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.4
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@a5c1d89, dz.a2s.a2spreparation.entities.Inventaire@41e4ec8c]
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@a5c1d89, dz.a2s.a2spreparation.entities.Inventaire@41e4ec8c]
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 16:02:11 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/23/comptages-access - ADRESSE : 192.168.1.4
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=23
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:02:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.4
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 16:02:21 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.4
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:02:22 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/ppsy-36 - ADRESSE : 192.168.1.3
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=ppsy-36
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=ppsy-36
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:04:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-37 - ADRESSE : 192.168.1.3
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-37
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-37
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:04:14 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:04:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-36 - ADRESSE : 192.168.1.3
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-36
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-36
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:04:57 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 16:05:17 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=bonjour]
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=2, medId=9, depot=3, comptage=1, quantite=3, motif=Bonjour ligne 3, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=2, medId=9, depot=3, comptage=1, quantite=3, motif=Bonjour ligne 3, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 16:06:57 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=3, motif=Bonjour ligne 3]
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-37 - ADRESSE : 192.168.1.3
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-37
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-37
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-37
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-37
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1)
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-37, stockZero=0, search=, page=1
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:07:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/PPSY-36 - ADRESSE : 192.168.1.3
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=PPSY-36
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=PPSY-36
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = PPSY-36
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = PPSY-36
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:07:22 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:11:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 16:11:07 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=bonjour]
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 16:11:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=bonjour]
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:11:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:12:00 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 16:12:00 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=bonjour]
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:14:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:17:14 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 16:17:14 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 16:17:14 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 16:17:18 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-28 16:17:18 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 24976 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-28 16:17:18 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 16:17:18 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-28 16:17:18 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-28 16:17:18 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-28 16:17:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-28 16:17:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 16:17:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 20 JPA repository interfaces.
2025-08-28 16:17:22 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 16:17:22 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-28 16:17:22 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 16:17:22 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-28 16:17:22 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 16:17:22 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3438 ms
2025-08-28 16:17:23 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 16:17:24 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@1053098a
2025-08-28 16:17:24 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 16:17:24 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 16:17:24 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-28 16:17:24 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-28 16:17:24 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 16:17:24 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 16:17:24 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-28 16:17:25 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 16:17:25 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 16:17:25 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 16:17:27 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-28 16:17:27 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 16:17:28 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 16:17:28 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-28 16:17:29 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 16:17:30 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-28 16:17:32 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-28 16:17:32 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-28 16:17:32 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 16:17:32 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 13.999 seconds (process running for 14.55)
2025-08-28 16:17:36 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 16:17:36 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 16:17:36 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 16:17:40 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-08-28 16:17:40 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 27920 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-08-28 16:17:40 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 16:17:40 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-08-28 16:17:40 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-28 16:17:40 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-28 16:17:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-28 16:17:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 16:17:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 149 ms. Found 20 JPA repository interfaces.
2025-08-28 16:17:43 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 16:17:43 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-28 16:17:43 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 16:17:43 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-08-28 16:17:43 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 16:17:43 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3592 ms
2025-08-28 16:17:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 16:17:45 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@21942701
2025-08-28 16:17:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 16:17:45 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 16:17:45 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-08-28 16:17:45 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-28 16:17:45 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 16:17:45 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 16:17:46 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-08-28 16:17:46 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-28 16:17:46 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 16:17:46 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-08-28 16:17:47 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-28 16:17:47 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 16:17:48 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 16:17:48 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-28 16:17:49 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 16:17:51 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-28 16:17:52 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-28 16:17:52 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-28 16:17:52 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 16:17:52 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 12.976 seconds (process running for 13.533)
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/saisir - ADRESSE : 192.168.1.3
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.saisirInventaire | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=Bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.saisirInventaire() | Args | request=SaisiRequest(invId=23, nlotInterne=3, medId=1, depot=3, comptage=1, quantite=2, motif=Bonjour, emplacement=PPSY-36, noLigne=1)
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=23
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched companyId : 1 and username : S.BENMAMMAR
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched inventaire access rights from the service | access=ComptageAccessResponse[comptage1=1, comptage2=0, comptage3=0]
2025-08-28 16:18:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:18:21 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Persisted saisi de l'inventaire into the database
2025-08-28 16:18:21 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Persisted inventaire data via the service | data=SaisiResponse[quantite=2, motif=Bonjour]
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:18:27 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:22:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:22:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=3
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2], ListResponse[code=3, nom=Comptage 3]]
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@515dec16, dz.a2s.a2spreparation.entities.Inventaire@489cd26d]
2025-08-28 16:22:52 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2spreparation.entities.Inventaire@515dec16, dz.a2s.a2spreparation.entities.Inventaire@489cd26d]
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:23:07 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1)
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=23, comptage=1, emplacement=PPSY-36, stockZero=0, search=, page=1
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Fetched the current company | companyId=1
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=3509
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-08-28 16:23:30 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-08-28 16:25:08 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 16:25:08 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 16:25:08 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
