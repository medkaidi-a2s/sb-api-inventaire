2025-10-13 10:12:31 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 10:12:31 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 11320 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 10:12:31 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 10:12:31 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 10:12:31 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 10:12:31 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 10:12:34 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 10:12:34 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 10:12:34 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 148 ms. Found 23 JPA repository interfaces.
2025-10-13 10:12:36 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 10:12:36 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 10:12:36 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 10:12:36 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 10:12:36 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 10:12:36 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5484 ms
2025-10-13 10:12:38 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 10:12:39 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@4b1e6375
2025-10-13 10:12:39 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 10:12:39 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 10:12:39 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 10:12:39 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 10:12:39 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:12:40 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 10:12:40 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 10:12:40 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:12:41 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:12:41 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:12:42 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 10:12:42 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 10:12:43 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 10:12:44 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 10:12:45 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 10:12:47 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 10:12:48 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 10:12:48 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 10:12:48 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 10:12:48 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 18.386 seconds (process running for 19.642)
2025-10-13 10:12:55 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 10:12:55 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 10:12:55 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-13 10:12:55 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - | Entry | AuthController.login method from AuthController with username: admin
2025-10-13 10:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with admin
2025-10-13 10:12:56 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@244cedc, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 10:12:56 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@244cedc, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 10:12:56 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token for ADMIN
2025-10-13 10:12:56 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 10:12:57 INFO  [http-nio-8080-exec-2] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 10:12:57 WARN  [http-nio-8080-exec-2] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 10:13:41 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - | Entry | AuthController.login method from AuthController with username: admin
2025-10-13 10:13:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with admin
2025-10-13 10:13:41 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@ccc2202, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 10:13:41 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@ccc2202, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 10:13:41 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token for ADMIN
2025-10-13 10:13:41 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 10:13:42 INFO  [http-nio-8080-exec-5] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 10:13:42 WARN  [http-nio-8080-exec-5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 10:27:02 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 10:27:02 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 10:27:02 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 10:27:06 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 10:27:06 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 9804 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 10:27:06 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 10:27:06 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 10:27:06 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 10:27:06 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 10:27:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 10:27:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 10:27:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 173 ms. Found 23 JPA repository interfaces.
2025-10-13 10:27:10 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 10:27:10 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 10:27:10 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 10:27:10 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 10:27:10 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 10:27:10 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3255 ms
2025-10-13 10:27:11 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 10:27:11 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@1fc664e7
2025-10-13 10:27:11 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 10:27:11 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 10:27:11 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 10:27:11 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 10:27:12 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:27:12 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 10:27:12 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 10:27:12 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:27:13 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:27:13 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:27:14 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 10:27:14 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 10:27:14 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 10:27:15 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 10:27:16 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 10:27:17 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 10:27:18 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 10:27:18 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 10:27:18 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 10:27:18 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 12.437 seconds (process running for 12.975)
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 10:27:32 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 10:39:58 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 10:39:58 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 10:39:58 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 10:40:02 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 10:40:02 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 18536 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 10:40:02 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 10:40:02 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 10:40:02 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 10:40:02 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 10:40:04 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 10:40:04 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 10:40:04 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 187 ms. Found 23 JPA repository interfaces.
2025-10-13 10:40:06 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 10:40:06 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 10:40:06 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 10:40:06 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 10:40:06 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 10:40:06 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3719 ms
2025-10-13 10:40:07 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 10:40:08 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@63929507
2025-10-13 10:40:08 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 10:40:08 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 10:40:08 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 10:40:08 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 10:40:08 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:40:08 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 10:40:08 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 10:40:09 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:40:09 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:40:09 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:40:10 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 10:40:10 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 10:40:10 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 10:40:11 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 10:40:12 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 10:40:13 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 10:40:14 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 10:40:14 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 10:40:14 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 10:40:14 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 12.444 seconds (process running for 13.042)
2025-10-13 10:46:44 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 10:46:44 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 10:46:44 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 10:46:48 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 10:46:48 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 25216 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 10:46:48 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 10:46:49 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 10:46:49 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 10:46:49 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 10:46:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 10:46:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 10:46:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 144 ms. Found 23 JPA repository interfaces.
2025-10-13 10:46:52 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 10:46:52 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 10:46:52 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 10:46:52 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 10:46:52 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 10:46:52 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3888 ms
2025-10-13 10:46:53 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 10:46:54 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@6d01eb93
2025-10-13 10:46:54 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 10:46:54 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 10:46:54 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 10:46:54 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 10:46:54 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:46:55 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 10:46:55 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 10:46:55 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:46:55 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:46:55 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:46:56 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 10:46:56 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 10:46:57 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 10:46:58 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 10:46:58 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 10:47:00 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 10:47:01 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 10:47:01 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 10:47:01 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 10:47:01 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 12.907 seconds (process running for 13.557)
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@58c80c70, dz.a2s.a2sinventaire.entities.Inventaire@222e4e71]
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@58c80c70, dz.a2s.a2sinventaire.entities.Inventaire@222e4e71]
2025-10-13 10:47:10 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 10:47:11 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 10:48:38 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 10:48:38 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 10:48:38 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 10:48:43 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 10:48:43 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 14720 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 10:48:43 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 10:48:43 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 10:48:43 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 10:48:43 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 10:48:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 10:48:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 10:48:45 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 149 ms. Found 23 JPA repository interfaces.
2025-10-13 10:48:47 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 10:48:47 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 10:48:47 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 10:48:47 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 10:48:47 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 10:48:47 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3972 ms
2025-10-13 10:48:47 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 10:48:48 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@565171cf
2025-10-13 10:48:48 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 10:48:48 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 10:48:48 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 10:48:48 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 10:48:48 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:48:49 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 10:48:49 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 10:48:49 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 10:48:49 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:48:49 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 10:48:50 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 10:48:50 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 10:48:51 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 10:48:52 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 10:48:53 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 10:48:54 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 10:48:55 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 10:48:55 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 10:48:55 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 10:48:55 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 13.183 seconds (process running for 13.736)
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@4bcf2e9f, dz.a2s.a2sinventaire.entities.Inventaire@632d2b04]
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@4bcf2e9f, dz.a2s.a2sinventaire.entities.Inventaire@632d2b04]
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 10:49:01 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=1
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=1
2025-10-13 10:53:25 INFO  [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 10:53:25 WARN  [http-nio-8080-exec-7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@125749ee, dz.a2s.a2sinventaire.entities.Inventaire@794daaf3]
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@125749ee, dz.a2s.a2sinventaire.entities.Inventaire@794daaf3]
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=1
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=1
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 10:56:43 WARN  [http-nio-8080-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 10:56:43 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 10:58:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:58:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:58:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1-1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 10:58:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:58:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:58:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:58:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:58:57 INFO  [http-nio-8080-exec-9] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1-1"
2025-10-13 10:58:57 WARN  [http-nio-8080-exec-9] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1-1"]
2025-10-13 10:59:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:59:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:59:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1-5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 10:59:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:59:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:59:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:59:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:59:00 INFO  [http-nio-8080-exec-10] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1-5"
2025-10-13 10:59:00 WARN  [http-nio-8080-exec-10] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1-5"]
2025-10-13 10:59:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 10:59:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:59:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1-1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 10:59:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 10:59:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 10:59:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 10:59:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 10:59:03 INFO  [http-nio-8080-exec-4] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1-1"
2025-10-13 10:59:03 WARN  [http-nio-8080-exec-4] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1-1"]
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1-1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@728a9cb7, dz.a2s.a2sinventaire.entities.Inventaire@6e016643]
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@728a9cb7, dz.a2s.a2sinventaire.entities.Inventaire@6e016643]
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:01:06 INFO  [http-nio-8080-exec-5] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1-1"
2025-10-13 11:01:06 WARN  [http-nio-8080-exec-5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1-1"]
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@67b5234b, dz.a2s.a2sinventaire.entities.Inventaire@95e6c8c]
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@67b5234b, dz.a2s.a2sinventaire.entities.Inventaire@95e6c8c]
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:02:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@a87e853, dz.a2s.a2sinventaire.entities.Inventaire@1464da40]
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@a87e853, dz.a2s.a2sinventaire.entities.Inventaire@1464da40]
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:02:43 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@14a86a28, dz.a2s.a2sinventaire.entities.Inventaire@73977194]
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@14a86a28, dz.a2s.a2sinventaire.entities.Inventaire@73977194]
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:06:20 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:06:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:06:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/%7B%22id%22:1,%22depot%22:%221%22%7D/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 11:06:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:06:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:06:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:06:25 INFO  [http-nio-8080-exec-5] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "{"id":1,"depot":"1"}"
2025-10-13 11:06:25 WARN  [http-nio-8080-exec-5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "{"id":1,"depot":"1"}"]
2025-10-13 11:06:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:06:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/%7B%22id%22:1,%22depot%22:%225%22%7D/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 11:06:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:06:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:06:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:06:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:06:28 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "{"id":1,"depot":"5"}"
2025-10-13 11:06:28 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "{"id":1,"depot":"5"}"]
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/%7B%22id%22:1,%22depot%22:%225%22%7D/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@13c15c7d, dz.a2s.a2sinventaire.entities.Inventaire@1d768473]
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@13c15c7d, dz.a2s.a2sinventaire.entities.Inventaire@1d768473]
2025-10-13 11:09:14 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "{"id":1,"depot":"5"}"
2025-10-13 11:09:14 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "{"id":1,"depot":"5"}"]
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@499ca89, dz.a2s.a2sinventaire.entities.Inventaire@63a1ded0]
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@499ca89, dz.a2s.a2sinventaire.entities.Inventaire@63a1ded0]
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:09:20 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:09:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:09:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1%7C1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 11:09:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:09:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:09:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:09:22 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1|1"
2025-10-13 11:09:22 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1|1"]
2025-10-13 11:09:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:09:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1%7C5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 11:09:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:09:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:09:28 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:09:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:09:28 INFO  [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1|5"
2025-10-13 11:09:28 WARN  [http-nio-8080-exec-7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1|5"]
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - | Entry | AuthController.login method from AuthController with username: fa
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with fa
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-10] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@68543c2b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@68543c2b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Generating token for FA
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-10] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=FA - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=FA - authorizations size : 1
2025-10-13 11:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=FA - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=FA - authorizations size : 1
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@59ecfe0d, dz.a2s.a2sinventaire.entities.Inventaire@1f65d6e1]
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@59ecfe0d, dz.a2s.a2sinventaire.entities.Inventaire@1f65d6e1]
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:21:28 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 11:21:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:21:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1%7C1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 11:21:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 11:21:31 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 11:21:31 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 11:21:31 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1|1"
2025-10-13 11:21:31 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1|1"]
2025-10-13 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1%7C5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 11:21:33 INFO  [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1|5"
2025-10-13 11:21:33 WARN  [http-nio-8080-exec-7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "1|5"]
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - | Entry | AuthController.login method from AuthController with username: admin
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with admin
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@5837dc8, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@5837dc8, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token for ADMIN
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 11:21:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 11:45:21 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=23m32s402ms874µs).
2025-10-13 12:11:20 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 12:11:20 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 12:11:20 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 12:14:23 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 12:14:23 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 2632 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 12:14:23 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 12:14:23 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 12:14:23 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 12:14:23 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 12:14:25 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 12:14:25 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 12:14:25 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 106 ms. Found 23 JPA repository interfaces.
2025-10-13 12:14:26 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 12:14:26 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 12:14:26 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 12:14:26 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 12:14:26 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 12:14:26 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3183 ms
2025-10-13 12:14:27 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 12:14:27 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@565171cf
2025-10-13 12:14:27 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 12:14:27 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 12:14:27 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 12:14:27 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 12:14:28 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 12:14:28 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 12:14:28 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 12:14:29 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 12:14:29 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 12:14:29 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 12:14:30 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 12:14:30 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 12:14:30 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 12:14:31 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 12:14:31 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 12:14:32 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 12:14:33 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 12:14:34 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 12:14:34 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 12:14:34 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 11.109 seconds (process running for 11.552)
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@6d16174b, dz.a2s.a2sinventaire.entities.Inventaire@2f93f5ae]
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@6d16174b, dz.a2s.a2sinventaire.entities.Inventaire@2f93f5ae]
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:20:16 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=1, depot=5
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=1
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 12:20:19 ERROR [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-10-13 12:20:19 INFO  [http-nio-8080-exec-5] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-10-13 12:20:19 WARN  [http-nio-8080-exec-5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=1, depot=1
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=1
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 12:20:30 ERROR [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-10-13 12:20:30 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-10-13 12:20:30 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=1, depot=5
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=1
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 12:20:56 ERROR [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-10-13 12:20:56 INFO  [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-10-13 12:20:56 WARN  [http-nio-8080-exec-7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=1, depot=1
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=1
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 12:22:27 ERROR [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-10-13 12:22:27 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-10-13 12:22:27 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@1755f88a, dz.a2s.a2sinventaire.entities.Inventaire@46a87de4]
2025-10-13 12:23:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@1755f88a, dz.a2s.a2sinventaire.entities.Inventaire@46a87de4]
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@567ef358, dz.a2s.a2sinventaire.entities.Inventaire@beec027]
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@567ef358, dz.a2s.a2sinventaire.entities.Inventaire@beec027]
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:23:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=1, depot=5
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=1
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 12:23:52 ERROR [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-10-13 12:23:52 INFO  [http-nio-8080-exec-10] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-10-13 12:23:52 WARN  [http-nio-8080-exec-10] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/1/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=1, depot=1
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=1
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 12:23:56 ERROR [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-10-13 12:23:56 INFO  [http-nio-8080-exec-8] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-10-13 12:23:56 WARN  [http-nio-8080-exec-8] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-10-13 12:25:42 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 12:25:42 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 12:25:42 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 12:25:46 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 12:25:46 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 29224 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 12:25:46 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 12:25:46 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 12:25:46 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 12:25:46 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 12:25:47 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 12:25:47 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 12:25:47 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 23 JPA repository interfaces.
2025-10-13 12:25:48 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 12:25:48 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 12:25:48 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 12:25:48 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 12:25:48 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 12:25:48 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2457 ms
2025-10-13 12:25:49 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 12:25:49 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@212f750c
2025-10-13 12:25:49 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 12:25:49 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 12:25:49 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 12:25:49 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 12:25:50 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 12:25:50 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 12:25:50 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 12:25:50 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 12:25:50 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 12:25:50 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 12:25:51 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 12:25:51 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 12:25:52 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 12:25:52 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 12:25:53 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 12:25:54 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 12:25:55 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 12:25:55 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 12:25:55 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 12:25:55 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 9.371 seconds (process running for 9.792)
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@3c2a95e, dz.a2s.a2sinventaire.entities.Inventaire@6df60d20]
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@3c2a95e, dz.a2s.a2sinventaire.entities.Inventaire@6df60d20]
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:27:07 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 12:27:09 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 12:27:11 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 12:27:19 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 12:27:27 INFO  [http-nio-8080-exec-5] d.a.a.controllers.AuthController - | Entry | AuthController.login method from AuthController with username: fa
2025-10-13 12:27:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with fa
2025-10-13 12:27:27 INFO  [http-nio-8080-exec-5] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@72b1bb3, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 12:27:27 INFO  [http-nio-8080-exec-5] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@72b1bb3, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 12:27:27 INFO  [http-nio-8080-exec-5] d.a.a.security.JWTGenerator - Generating token for FA
2025-10-13 12:27:27 INFO  [http-nio-8080-exec-5] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=FA - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=FA - authorizations size : 1
2025-10-13 12:27:28 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=FA - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=FA - authorizations size : 1
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@48101c03, dz.a2s.a2sinventaire.entities.Inventaire@23edf9e2]
2025-10-13 12:27:29 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@48101c03, dz.a2s.a2sinventaire.entities.Inventaire@23edf9e2]
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:27:30 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:27:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:27:34 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@17057a9f, dz.a2s.a2sinventaire.entities.Inventaire@4c04f036]
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@17057a9f, dz.a2s.a2sinventaire.entities.Inventaire@4c04f036]
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:28:31 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:28:33 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 12:28:34 ERROR [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-10-13 12:28:34 INFO  [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-10-13 12:28:34 WARN  [http-nio-8080-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-10-13 12:30:11 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - | Entry | AuthController.login method from AuthController with username: Fa
2025-10-13 12:30:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with Fa
2025-10-13 12:30:11 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@79afca16, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 12:30:11 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@79afca16, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 12:30:11 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token for FA
2025-10-13 12:30:11 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=FA - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=FA - authorizations size : 1
2025-10-13 12:30:13 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=FA - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=FA - authorizations size : 1
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.3
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@4c513f9d, dz.a2s.a2sinventaire.entities.Inventaire@1cc6abe2]
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@4c513f9d, dz.a2s.a2sinventaire.entities.Inventaire@1cc6abe2]
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:30:14 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.3
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:30:17 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.3
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 12:30:22 ERROR [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-10-13 12:30:22 INFO  [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-10-13 12:30:22 WARN  [http-nio-8080-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.3
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:30:25 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=FA - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=FA - authorizations size : 1
2025-10-13 12:50:30 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 12:50:32 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 12:56:10 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - | Entry | AuthController.login method from AuthController with username: Admin
2025-10-13 12:56:10 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with Admin
2025-10-13 12:56:10 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@5e353bb0, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 12:56:10 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@5e353bb0, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 12:56:10 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token for ADMIN
2025-10-13 12:56:10 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 12:56:11 INFO  [http-nio-8080-exec-2] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:09:57 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=37m36s889ms719µs700ns).
2025-10-13 14:43:36 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m8s628ms429µs400ns).
2025-10-13 14:49:07 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 14:49:07 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 14:49:07 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 14:49:14 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 14:49:14 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 9712 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 14:49:14 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 14:49:14 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 14:49:14 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 14:49:14 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 14:49:16 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 14:49:16 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 14:49:16 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 281 ms. Found 23 JPA repository interfaces.
2025-10-13 14:49:19 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 14:49:19 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 14:49:19 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 14:49:19 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 14:49:19 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 14:49:19 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5020 ms
2025-10-13 14:49:20 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 14:49:21 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@565171cf
2025-10-13 14:49:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 14:49:22 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 14:49:22 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 14:49:22 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 14:49:22 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 14:49:22 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 14:49:23 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 14:49:23 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 14:49:24 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 14:49:24 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 14:49:25 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 14:49:25 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 14:49:26 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 14:49:27 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 14:49:28 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 14:49:30 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 14:49:32 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 14:49:32 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 14:49:32 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 14:49:32 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 18.512 seconds (process running for 19.125)
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 14:49:37 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=FA - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 14:49:38 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 14:49:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 14:49:38 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=FA - authorizations size : 1
2025-10-13 14:49:38 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 14:49:38 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@42b02018, dz.a2s.a2sinventaire.entities.Inventaire@2b6226d9]
2025-10-13 14:49:38 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@42b02018, dz.a2s.a2sinventaire.entities.Inventaire@2b6226d9]
2025-10-13 14:49:38 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:49:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:49:38 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 14:49:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=0, comptage2=1, comptage3=0]
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token FA
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with FA
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: FA
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched username : FA
2025-10-13 14:49:43 ERROR [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Projection is null | user does not have access to the inventory
2025-10-13 14:49:43 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire
2025-10-13 14:49:43 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: Accès refusé : Vous n'avez pas accès à cette campagne d'inventaire]
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-7] d.a.a.controllers.AuthController - | Entry | AuthController.login method from AuthController with username: admin
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with admin
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-7] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@3d827831, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-7] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2sinventaire.security.AppUserDetails@3d827831, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-7] d.a.a.security.JWTGenerator - Generating token for ADMIN
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-7] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 14:49:57 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@6edb4896, dz.a2s.a2sinventaire.entities.Inventaire@5f3f59c7]
2025-10-13 14:49:59 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@6edb4896, dz.a2s.a2sinventaire.entities.Inventaire@5f3f59c7]
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 14:50:05 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/a06 - ADRESSE : 192.168.1.6
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=a06
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=a06
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = null
2025-10-13 14:50:18 ERROR [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Emplacement is null | emplacement does not exist
2025-10-13 14:50:18 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - Entering notFoundExceptionHandler from the GlobalExceptionsHandler with message L'emplacement spécifié est introuvable
2025-10-13 14:50:18 ERROR [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - Returning the following error L'emplacement spécifié est introuvable
2025-10-13 14:50:18 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.RessourceNotFoundException: L'emplacement spécifié est introuvable]
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/a01 - ADRESSE : 192.168.1.6
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=a01
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=a01
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = 1,A01
2025-10-13 14:50:25 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = 1,A01
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 14:51:18 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@65365a40, dz.a2s.a2sinventaire.entities.Inventaire@4b8d36d7]
2025-10-13 14:56:41 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@65365a40, dz.a2s.a2sinventaire.entities.Inventaire@4b8d36d7]
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 14:56:43 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/a01 - ADRESSE : 192.168.1.6
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=a01
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=a01
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = 1,A01
2025-10-13 14:56:58 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = 1,A01
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 14:57:14 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@16129e79, dz.a2s.a2sinventaire.entities.Inventaire@52387e94]
2025-10-13 14:57:16 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@16129e79, dz.a2s.a2sinventaire.entities.Inventaire@52387e94]
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 14:57:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = 1,A01
2025-10-13 14:57:26 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = 1,A01
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 14:58:31 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@4a8aca40, dz.a2s.a2sinventaire.entities.Inventaire@7ebc3da3]
2025-10-13 14:59:05 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@4a8aca40, dz.a2s.a2sinventaire.entities.Inventaire@7ebc3da3]
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 14:59:07 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = 1,A01
2025-10-13 14:59:14 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = 1,A01
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@7f58d80, dz.a2s.a2sinventaire.entities.Inventaire@7f7827c2]
2025-10-13 15:00:01 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@7f58d80, dz.a2s.a2sinventaire.entities.Inventaire@7f7827c2]
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:01:24 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = 1,A01
2025-10-13 15:01:35 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = 1,A01
2025-10-13 15:02:27 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 15:02:27 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 15:02:27 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 15:02:32 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 15:02:32 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 23556 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 15:02:32 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 15:02:32 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 15:02:32 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 15:02:32 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 15:02:34 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 15:02:34 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 15:02:34 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 224 ms. Found 23 JPA repository interfaces.
2025-10-13 15:02:37 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 15:02:37 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 15:02:37 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 15:02:37 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 15:02:37 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 15:02:37 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5023 ms
2025-10-13 15:02:38 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 15:02:39 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@151db23b
2025-10-13 15:02:39 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 15:02:39 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 15:02:39 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 15:02:39 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 15:02:39 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 15:02:39 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 15:02:40 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 15:02:40 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 15:02:40 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 15:02:40 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 15:02:42 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 15:02:42 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 15:02:43 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 15:02:43 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 15:02:44 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 15:02:46 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 15:02:48 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 15:02:48 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 15:02:48 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 15:02:48 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 16.809 seconds (process running for 17.641)
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@39d5543a, dz.a2s.a2sinventaire.entities.Inventaire@68d5d02d]
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@39d5543a, dz.a2s.a2sinventaire.entities.Inventaire@68d5d02d]
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:02:58 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:02:59 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 15:03:08 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@21fa63f0, dz.a2s.a2sinventaire.entities.Inventaire@37c763ad]
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@21fa63f0, dz.a2s.a2sinventaire.entities.Inventaire@37c763ad]
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:03:56 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:04:07 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@5d4ea31f, dz.a2s.a2sinventaire.entities.Inventaire@36ecc7fe]
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@5d4ea31f, dz.a2s.a2sinventaire.entities.Inventaire@36ecc7fe]
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:04:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@146fdf0c, dz.a2s.a2sinventaire.entities.Inventaire@6f467f59]
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@146fdf0c, dz.a2s.a2sinventaire.entities.Inventaire@6f467f59]
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:04:52 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:04:56 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 15:05:06 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@f64c05c, dz.a2s.a2sinventaire.entities.Inventaire@2f4943a5]
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@f64c05c, dz.a2s.a2sinventaire.entities.Inventaire@2f4943a5]
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:06:37 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@24c59126, dz.a2s.a2sinventaire.entities.Inventaire@357dada1]
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@24c59126, dz.a2s.a2sinventaire.entities.Inventaire@357dada1]
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:06:43 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:06:57 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@49536263, dz.a2s.a2sinventaire.entities.Inventaire@2fe2e2dc]
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@49536263, dz.a2s.a2sinventaire.entities.Inventaire@2fe2e2dc]
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:07:04 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:07:06 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 15:07:16 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@19023070, dz.a2s.a2sinventaire.entities.Inventaire@1a91c74e]
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@19023070, dz.a2s.a2sinventaire.entities.Inventaire@1a91c74e]
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:08:02 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:08:04 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 15:08:13 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@5f874e8b, dz.a2s.a2sinventaire.entities.Inventaire@5c5a89f5]
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@5f874e8b, dz.a2s.a2sinventaire.entities.Inventaire@5c5a89f5]
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:09:20 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@2a4d2f94, dz.a2s.a2sinventaire.entities.Inventaire@66c535ae]
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@2a4d2f94, dz.a2s.a2sinventaire.entities.Inventaire@66c535ae]
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:10:46 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:10:56 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@27938daf, dz.a2s.a2sinventaire.entities.Inventaire@5f4e5478]
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@27938daf, dz.a2s.a2sinventaire.entities.Inventaire@5f4e5478]
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:10:57 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:10:58 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 15:11:06 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-10] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@60e00580, dz.a2s.a2sinventaire.entities.Inventaire@15503912]
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@60e00580, dz.a2s.a2sinventaire.entities.Inventaire@15503912]
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:12:48 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@11f1dfc5, dz.a2s.a2sinventaire.entities.Inventaire@12b4ea20]
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@11f1dfc5, dz.a2s.a2sinventaire.entities.Inventaire@12b4ea20]
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:13:12 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:13:30 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-8] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@3b4b998f, dz.a2s.a2sinventaire.entities.Inventaire@4effa2b7]
2025-10-13 15:13:32 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@3b4b998f, dz.a2s.a2sinventaire.entities.Inventaire@4effa2b7]
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:13:34 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 15:13:41 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String "10|5": not a valid `java.lang.Integer` value
2025-10-13 15:14:07 INFO  [http-nio-8080-exec-8] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String "10|5": not a valid `java.lang.Integer` value
2025-10-13 15:14:07 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String "10|5": not a valid `java.lang.Integer` value]
2025-10-13 15:14:07 WARN  [http-nio-8080-exec-8] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String "10|5": not a valid `java.lang.Integer` value]
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-1] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, comptage=2, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=2, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:16:07 INFO  [http-nio-8080-exec-7] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:16:07 WARN  [http-nio-8080-exec-7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, comptage=2, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=2, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:16:43 INFO  [http-nio-8080-exec-4] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:16:43 WARN  [http-nio-8080-exec-4] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, comptage=2, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=2, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:17:59 INFO  [http-nio-8080-exec-6] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:17:59 WARN  [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:40:36 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 15:40:36 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 15:40:36 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 15:40:41 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 15:40:41 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 9224 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 15:40:41 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 15:40:41 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 15:40:41 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 15:40:41 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 15:40:42 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 15:40:42 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 15:40:43 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 161 ms. Found 23 JPA repository interfaces.
2025-10-13 15:40:44 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 15:40:44 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 15:40:44 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 15:40:44 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 15:40:44 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 15:40:44 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3440 ms
2025-10-13 15:40:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 15:40:46 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@55fc7cb3
2025-10-13 15:40:46 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 15:40:46 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 15:40:46 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 15:40:46 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 15:40:46 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 15:40:46 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 15:40:47 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 15:40:47 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 15:40:47 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 15:40:47 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 15:40:48 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 15:40:48 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 15:40:49 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 15:40:49 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 15:40:50 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 15:40:52 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 15:40:53 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 15:40:53 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 15:40:53 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 15:40:53 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 12.52 seconds (process running for 13.125)
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:38 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:38 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:38 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=2, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:41:38 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=5, comptage=2, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:41:38 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=2, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:41:38 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=2, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:41:38 INFO  [http-nio-8080-exec-4] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:41:38 INFO  [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:41:38 WARN  [http-nio-8080-exec-4] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:41:38 WARN  [http-nio-8080-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=2, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=2, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 15:41:41 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:41:41 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=2, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=2, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:41:43 INFO  [http-nio-8080-exec-2] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:41:43 WARN  [http-nio-8080-exec-2] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@6388199b, dz.a2s.a2sinventaire.entities.Inventaire@71b814ab]
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@6388199b, dz.a2s.a2sinventaire.entities.Inventaire@71b814ab]
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:41:45 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:41:47 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:41:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:41:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:41:49 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-9] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:41:58 WARN  [http-nio-8080-exec-9] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:41:58 INFO  [http-nio-8080-exec-1] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:41:58 WARN  [http-nio-8080-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 15:42:01 INFO  [http-nio-8080-exec-4] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleActionNotAllowedException | Args | errorMessage : La notion de site n'existe pas dans ce context.
2025-10-13 15:42:01 WARN  [http-nio-8080-exec-4] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [dz.a2s.a2sinventaire.exceptions.ActionNotAllowedException: La notion de site n'existe pas dans ce context.]
2025-10-13 15:46:36 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 15:46:36 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 15:46:36 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 15:46:40 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 15:46:40 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 27340 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 15:46:40 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 15:46:40 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 15:46:40 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 15:46:40 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 15:46:42 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 15:46:42 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 15:46:42 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 174 ms. Found 23 JPA repository interfaces.
2025-10-13 15:46:44 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 15:46:44 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 15:46:44 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 15:46:44 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 15:46:44 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 15:46:44 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4036 ms
2025-10-13 15:46:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 15:46:46 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@725151e1
2025-10-13 15:46:46 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 15:46:46 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 15:46:46 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 15:46:46 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 15:46:46 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 15:46:46 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 15:46:46 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 15:46:47 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 15:46:47 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 15:46:47 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 15:46:48 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 15:46:48 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 15:46:48 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 15:46:49 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 15:46:50 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 15:46:52 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 15:46:53 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 15:46:54 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 15:46:54 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 15:46:54 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 14.134 seconds (process running for 14.737)
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@6d9c22d5, dz.a2s.a2sinventaire.entities.Inventaire@44731883]
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@6d9c22d5, dz.a2s.a2sinventaire.entities.Inventaire@44731883]
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:47:22 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:47:24 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:47:26 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 15:47:34 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=2)
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=2
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=3)
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=3
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:45 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=4)
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=4
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:46 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=5)
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=5
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=6)
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=6
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:47 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=7)
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=7
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:48 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=8)
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=8
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:51 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=9)
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=9
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=10)
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=10
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:52 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=11)
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=11
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:53 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=12)
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=12
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=13)
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=13
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:54 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=14)
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=14
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:55 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=15)
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=15
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=16)
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=16
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:56 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=17)
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=17
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:57 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=18)
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=18
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=19)
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=19
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:58 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=20)
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=20
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:47:59 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=21)
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=21
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=22)
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=22
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:48:00 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:48:02 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:48:05 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:48:06 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@36319d09, dz.a2s.a2sinventaire.entities.Inventaire@6565eed9]
2025-10-13 15:48:13 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@36319d09, dz.a2s.a2sinventaire.entities.Inventaire@6565eed9]
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:48:15 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:48:17 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 15:48:23 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 15:48:24 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 15:52:21 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 15:52:21 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 15:52:22 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 15:54:38 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 15:54:38 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 23160 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 15:54:38 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 15:54:38 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 15:54:38 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 15:54:38 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 15:54:40 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 15:54:40 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 15:54:40 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 119 ms. Found 23 JPA repository interfaces.
2025-10-13 15:54:41 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 15:54:41 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 15:54:41 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 15:54:41 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 15:54:41 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 15:54:41 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3105 ms
2025-10-13 15:54:41 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 15:54:42 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@75cfc3cb
2025-10-13 15:54:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 15:54:42 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 15:54:42 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 15:54:42 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 15:54:42 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 15:54:42 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 15:54:42 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 15:54:43 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 15:54:43 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 15:54:43 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 15:54:44 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 15:54:44 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 15:54:44 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 15:54:45 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 15:54:45 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 15:54:46 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 15:54:47 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 15:54:47 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 15:54:47 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 15:54:47 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 10.069 seconds (process running for 11.201)
2025-10-13 15:59:31 INFO  [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 15:59:31 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 15:59:31 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-13 15:59:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:59:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:59:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:59:32 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:59:32 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:59:32 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=2)
2025-10-13 15:59:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=2
2025-10-13 15:59:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:59:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:59:32 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:59:32 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=3)
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=3
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=4)
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=4
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:59:33 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=5)
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=5
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=6)
2025-10-13 15:59:34 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=6
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=7)
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=7
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:59:35 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=8)
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=8
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=9)
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=9
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:59:36 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=null, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=0
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=0
2025-10-13 15:59:38 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=0
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:00:21 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:00:44 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=2)
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=2
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:00:47 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=3)
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=3
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:00:53 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=4)
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=4
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:00:55 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=5)
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=5
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:01:04 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:03:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:03:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:03:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:03:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:03:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:03:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:03:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:03:48 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 16:03:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 16:03:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:03:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:03:49 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:03:49 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:03:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:03:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:03:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:03:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:03:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:03:52 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:03:52 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:03:52 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=2)
2025-10-13 16:03:52 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=2
2025-10-13 16:03:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:03:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:03:53 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:03:53 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:03:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:03:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:03:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:03:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:03:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:03:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:03:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:03:56 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=3)
2025-10-13 16:03:56 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=3
2025-10-13 16:03:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:03:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:03:57 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:03:57 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:04:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:04:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:04:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:04:02 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:04:02 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:04:02 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=4)
2025-10-13 16:04:02 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=4
2025-10-13 16:04:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:04:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:04:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:04:03 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:04:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:04:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:04:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:04:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:04:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:04:45 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 16:04:45 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 16:04:46 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:04:46 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:04:46 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:04:46 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.6
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@49ea6b8, dz.a2s.a2sinventaire.entities.Inventaire@281f74a1]
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@49ea6b8, dz.a2s.a2sinventaire.entities.Inventaire@281f74a1]
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.6
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-4] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 16:04:49 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 16:04:52 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:05:00 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:05:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:05:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:03 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 16:05:03 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 16:05:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:05:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:05:04 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:05:04 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:05:10 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A02 - ADRESSE : 192.168.1.6
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A02
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A02
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A02
2025-10-13 16:05:25 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A02
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A02, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A02, stockZero=0, search=, page=1
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:05:26 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:05:37 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:05:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:05:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:05:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:05:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:05:44 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:05:44 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:05:44 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 16:05:44 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 16:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:05:45 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:05:45 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:10:38 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 16:10:38 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 16:10:39 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 16:10:42 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 16:10:42 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 19356 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 16:10:42 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 16:10:42 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 16:10:42 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 16:10:42 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 16:10:43 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 16:10:43 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 16:10:43 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 136 ms. Found 23 JPA repository interfaces.
2025-10-13 16:10:44 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 16:10:44 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 16:10:44 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 16:10:44 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 16:10:44 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 16:10:44 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2743 ms
2025-10-13 16:10:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 16:10:45 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@565171cf
2025-10-13 16:10:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 16:10:46 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 16:10:46 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 16:10:46 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 16:10:46 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 16:10:46 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 16:10:46 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 16:10:46 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 16:10:47 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 16:10:47 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 16:10:47 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 16:10:48 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 16:10:48 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 16:10:48 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 16:10:49 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 16:10:50 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 16:10:51 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 16:10:51 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 16:10:51 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 16:10:51 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 9.704 seconds (process running for 10.118)
2025-10-13 16:11:01 INFO  [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 16:11:01 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 16:11:01 INFO  [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-13 16:11:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:11:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:11:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:11:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:11:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:11:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:11:02 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:11:02 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 16:11:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 16:11:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:11:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:11:02 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:11:02 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 16:11:06 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 16:11:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:11:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:11:07 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:11:07 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:11:12 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:11:51 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 16:12:49 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/authorizations - ADRESSE : 192.168.1.3
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getAuthorizations
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - | Entry | CompanyService.getAuthorizations
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetching authorizations for username=ADMIN - authorizations list : [480, 481, 482, 489, 790, 38, 513]
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Fetched authorizations for username=ADMIN - authorizations size : 1
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Mapped authorizations into DTOs : [AuthorizationDto[code=790, value=1]]
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method-inventaire - ADRESSE : 192.168.1.3
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.3
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.3
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getMethodInventaire
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getMethodInventaire
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the inventaire method from the repo | methodInventaire=Optional[1]
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@7c0a0406, dz.a2s.a2sinventaire.entities.Inventaire@543ae82f]
2025-10-13 16:12:51 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@7c0a0406, dz.a2s.a2sinventaire.entities.Inventaire@543ae82f]
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/1/comptages-access - ADRESSE : 192.168.1.3
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=1
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=1
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 16:12:55 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/a01 - ADRESSE : 192.168.1.3
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=a01
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=a01
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 16:13:03 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:13:04 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:13:10 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:13:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:13:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:13:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:13:14 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:13:14 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:13:14 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=2)
2025-10-13 16:13:14 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=2
2025-10-13 16:13:15 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:13:15 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:13:15 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:13:15 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:13:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:13:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:13:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:13:25 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:13:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:13:25 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=3)
2025-10-13 16:13:25 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=3
2025-10-13 16:13:26 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:13:26 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:13:26 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:13:26 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:13:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:13:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:13:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:13:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:13:32 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:13:32 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:13:32 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=4)
2025-10-13 16:13:32 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=4
2025-10-13 16:13:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:13:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:13:33 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:13:33 INFO  [http-nio-8080-exec-6] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:14:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:14:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:14:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:14:18 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:14:18 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:14:18 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=5)
2025-10-13 16:14:18 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=5
2025-10-13 16:14:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:14:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125640
2025-10-13 16:14:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:14:19 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=Dolipran, page=1)
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=Dolipran, page=1
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=1680
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:14:30 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=Dolipran, page=2)
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=Dolipran, page=2
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=1680
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:14:37 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=Dolipran, page=1)
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=Dolipran, page=1
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=12
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:14:41 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.3
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=Dolipran, page=2)
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=Dolipran, page=2
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=2
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=12
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=2
2025-10-13 16:14:48 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=2
2025-10-13 16:23:25 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 16:23:25 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 16:23:25 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-13 16:23:28 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-13 16:23:28 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Starting A2sinventaireApplication using Java 17.0.11 with PID 3184 (C:\Projects\Spring Boot\sb-api-inventaire\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-inventaire)
2025-10-13 16:23:28 INFO  [restartedMain] d.a.a.A2sinventaireApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-13 16:23:28 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-10-13 16:23:28 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-13 16:23:28 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-13 16:23:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-13 16:23:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-13 16:23:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 23 JPA repository interfaces.
2025-10-13 16:23:30 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-13 16:23:30 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-13 16:23:30 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-13 16:23:30 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-13 16:23:30 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-13 16:23:30 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2612 ms
2025-10-13 16:23:31 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-13 16:23:31 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@565171cf
2025-10-13 16:23:31 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-13 16:23:31 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-13 16:23:32 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-10-13 16:23:32 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-13 16:23:32 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 16:23:32 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-13 16:23:32 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-10-13 16:23:33 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-10-13 16:23:33 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 16:23:33 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2sinventaire.entities.keys.StpUserRolesId
2025-10-13 16:23:34 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-13 16:23:34 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 16:23:34 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-13 16:23:34 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-10-13 16:23:35 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-13 16:23:36 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-13 16:23:36 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-13 16:23:37 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-13 16:23:37 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-13 16:23:37 INFO  [restartedMain] d.a.a.A2sinventaireApplication - Started A2sinventaireApplication in 9.24 seconds (process running for 9.666)
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:23:49 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=2)
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=2
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:23:59 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:24:04 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:24:07 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=1, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=2568
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:26:03 INFO  [http-nio-8080-exec-5] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/campagnes - ADRESSE : 192.168.1.6
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/comptages - ADRESSE : 192.168.1.6
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - | Entry | InventaireController.getListInventaires()
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListInventaires()
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - | Entry | InventaireController.getListComptages()
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getListComptage()
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire from the repo | projections.size=2
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of comptage from the repo | projections.size=2
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire entities | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@2f77434e, dz.a2s.a2sinventaire.entities.Inventaire@71a9b882]
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-8] d.a.a.c.InventaireController - Fetched the list of inventaires from the service | inventaires=[dz.a2s.a2sinventaire.entities.Inventaire@2f77434e, dz.a2s.a2sinventaire.entities.Inventaire@71a9b882]
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to list response entities | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 16:26:05 INFO  [http-nio-8080-exec-9] d.a.a.c.InventaireController - Fetched the list of comptages from the service | comptages=[ListResponse[code=1, nom=Comptage 1], ListResponse[code=2, nom=Comptage 2]]
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/10/5/comptages-access - ADRESSE : 192.168.1.6
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - | Entry | InventaireController.getComptageAccess | Args | invId=10, depot=5
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getComptageAccess() | Args | invId=10, depot=5
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Fetched username : ADMIN
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.InventaireServiceImpl - Mapped projection to comptage access response | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 16:26:07 INFO  [http-nio-8080-exec-10] d.a.a.c.InventaireController - Fetched the comptage access from the service | access=ComptageAccessResponse[comptage1=1, comptage2=1, comptage3=1]
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/emplacements/A01 - ADRESSE : 192.168.1.6
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - | Entry | InventaireController.checkEmplacement | Args | emplacement=A01
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.checkEmplacement() | Args | emplacement=A01
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.InventaireServiceImpl - Checked the inventory placement | response = A01
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-1] d.a.a.c.InventaireController - Checked the inventory placement via the service | value = A01
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=5, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=5, comptage=1, emplacement=A01, stockZero=0, isEcart=null, search=, page=1)
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=0, search=, page=1
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=628
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=628
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-2] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:26:15 INFO  [http-nio-8080-exec-3] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:26:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:26:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:26:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:26:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:26:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:26:28 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=5, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=1)
2025-10-13 16:26:28 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=1
2025-10-13 16:26:29 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:26:29 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125644
2025-10-13 16:26:29 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:26:29 INFO  [http-nio-8080-exec-4] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:26:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-10-13 16:26:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/inventaires/details - ADRESSE : 192.168.1.6
2025-10-13 16:26:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-10-13 16:26:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token ADMIN
2025-10-13 16:26:33 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with ADMIN
2025-10-13 16:26:33 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Authentication set for user: ADMIN
2025-10-13 16:26:33 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - | Entry | InventaireController.getInventaireLines | Args | request=InventaireLineRequest(invId=10, depot=5, comptage=1, emplacement=A01, stockZero=-1, isEcart=null, search=, page=2)
2025-10-13 16:26:33 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - | Entry | InventaireService.getInventaireLines() | Args | invId=10, comptage=1, emplacement=A01, stockZero=-1, search=, page=2
2025-10-13 16:26:34 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the list of inventaire lines from the repo | projections.size=10
2025-10-13 16:26:34 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Fetched the total records from the projections | totalRecords=125644
2025-10-13 16:26:34 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.InventaireServiceImpl - Mapped projections to inventaire line responses | lines.size=10
2025-10-13 16:26:34 INFO  [http-nio-8080-exec-7] d.a.a.c.InventaireController - Fetched the inventory lines from the service | lines.size=10
2025-10-13 16:28:48 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-13 16:28:48 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-13 16:28:48 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
