2025-06-17 09:37:21 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-17 09:37:21 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 20772 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-06-17 09:37:21 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 09:37:21 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-06-17 09:37:21 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-17 09:37:21 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.CompanyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.DiMessagesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.ParamsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.StpUserRolesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.UserEntityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeZoneRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.MotifRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvPrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvUsrCodeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpPrepareControleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatistiqueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatsPreparateurRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VentePrlvDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteZoneDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 138 ms. Found 0 JDBC repository interfaces.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 09:37:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 111 ms. Found 18 JPA repository interfaces.
2025-06-17 09:37:26 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-17 09:37:26 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-17 09:37:26 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 09:37:26 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-06-17 09:37:26 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-17 09:37:26 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4537 ms
2025-06-17 09:37:27 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 09:37:27 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@71143c99
2025-06-17 09:37:27 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 09:37:27 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 09:37:28 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-06-17 09:37:28 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-06-17 09:37:28 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 09:37:28 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 09:37:28 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-06-17 09:37:29 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 09:37:29 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 09:37:29 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 09:37:31 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-06-17 09:37:31 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 09:37:32 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 09:37:34 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-17 09:37:35 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-17 09:37:40 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-06-17 09:37:46 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-17 09:37:47 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-17 09:37:47 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-17 09:37:47 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 26.686 seconds (process running for 27.988)
2025-06-17 09:41:27 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 09:41:27 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 09:41:27 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2025-06-17 09:41:28 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:41:28 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:41:28 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.0.178
2025-06-17 09:41:28 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:41:28 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 09:41:28 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 09:41:29 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 09:42:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.0.178
2025-06-17 09:42:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:01 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 09:42:01 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 09:42:01 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 09:42:21 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-06-17 09:42:21 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-06-17 09:42:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:21 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:21 INFO  [http-nio-8080-exec-3] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@5ddb38ad, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 09:42:21 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@5ddb38ad, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 09:42:21 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 09:42:22 INFO  [http-nio-8080-exec-3] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.178
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.178
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:24 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 09:42:24 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 09:42:24 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 09:42:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 09:42:24 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 09:42:24 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 09:42:24 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@3d0d19ca, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@3d0d19ca, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.178
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.178
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 09:42:30 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 09:42:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/preparation - ADRESSE : 192.168.0.178
2025-06-17 09:42:34 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:34 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 09:42:34 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-9] d.a.a.controllers.UserController - Entering the getPreparationAuthorization method from the UserController
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Entering the getPreparationAuthorization method from the AuthorizationService for formCode 481
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-9] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation de préparation 1
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-9] d.a.a.controllers.UserController - Preparation Authorization recieved from the service : AuthorizationDto(code=481, value=1)
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.0.178
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.0.178
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 09:42:35 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.0.178
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-16
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-06-17 09:42:39 INFO  [http-nio-8080-exec-2] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/preparation - ADRESSE : 192.168.0.178
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.controllers.UserController - Entering the getPreparationAuthorization method from the UserController
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Entering the getPreparationAuthorization method from the AuthorizationService for formCode 481
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation de préparation 1
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-3] d.a.a.controllers.UserController - Preparation Authorization recieved from the service : AuthorizationDto(code=481, value=1)
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.0.178
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.0.178
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 09:42:48 INFO  [http-nio-8080-exec-4] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.0.178
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-16
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-06-17 09:42:53 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-06-17 10:18:12 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:18:12 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 10:18:12 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 10:19:05 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-17 10:19:06 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 23060 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-06-17 10:19:06 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 10:19:06 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-06-17 10:19:06 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-17 10:19:06 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.CompanyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.DiMessagesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.ParamsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.StpUserRolesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.UserEntityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeZoneRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.MotifRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvPrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvUsrCodeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpPrepareControleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatistiqueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatsPreparateurRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VentePrlvDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteZoneDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 143 ms. Found 0 JDBC repository interfaces.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 10:19:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 18 JPA repository interfaces.
2025-06-17 10:19:10 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-17 10:19:10 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-17 10:19:10 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 10:19:10 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-06-17 10:19:11 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-17 10:19:11 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5000 ms
2025-06-17 10:19:12 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 10:19:13 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@73b8887a
2025-06-17 10:19:13 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 10:19:13 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 10:19:14 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-06-17 10:19:14 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-06-17 10:19:14 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 10:19:14 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 10:19:14 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-06-17 10:19:15 ERROR [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Entity 'dz.a2s.a2spreparation.entities.views.Stock' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
2025-06-17 10:19:15 ERROR [restartedMain] o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'webSecurityConfig' defined in file [C:\Projects\Spring Boot\sb-api-preparation\target\classes\dz\a2s\a2spreparation\config\WebSecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'customUserDetailsService' defined in file [C:\Projects\Spring Boot\sb-api-preparation\target\classes\dz\a2s\a2spreparation\services\CustomUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userEntityRepository' defined in dz.a2s.a2spreparation.repositories.UserEntityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
2025-06-17 10:19:15 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-17 10:19:15 WARN  [restartedMain] o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [oracle.jdbc.diagnostics.Diagnostic.CLOCK] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.11/java.lang.Object.wait(Native Method)
 java.base@17.0.11/java.util.TimerThread.mainLoop(Timer.java:563)
 java.base@17.0.11/java.util.TimerThread.run(Timer.java:516)
2025-06-17 10:19:15 WARN  [restartedMain] o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [oracle.jdbc.driver.BlockSource.ThreadedCachingBlockSource.BlockReleaser] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.11/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.11/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.11/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 app//oracle.jdbc.internal.Monitor$WaitableMonitor.monitorWait(Monitor.java:305)
 app//oracle.jdbc.internal.Monitor$WaitableMonitor.monitorWait(Monitor.java:287)
 app//oracle.jdbc.driver.BlockSource$ThreadedCachingBlockSource$BlockReleaser.run(BlockSource.java:346)
2025-06-17 10:19:15 WARN  [restartedMain] o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [InterruptTimer] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.11/java.lang.Object.wait(Native Method)
 java.base@17.0.11/java.util.TimerThread.mainLoop(Timer.java:563)
 java.base@17.0.11/java.util.TimerThread.run(Timer.java:516)
2025-06-17 10:19:15 WARN  [restartedMain] o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [OJDBC-WORKER-THREAD-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.11/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.11/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.11/java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:401)
 java.base@17.0.11/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:903)
 java.base@17.0.11/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.11/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.11/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.11/java.lang.Thread.run(Thread.java:842)
2025-06-17 10:19:15 WARN  [restartedMain] o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.11/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.11/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.11/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.11/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.11/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.11/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.11/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.11/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.11/java.lang.Thread.run(Thread.java:842)
2025-06-17 10:19:15 WARN  [restartedMain] o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.11/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.11/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.11/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.11/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.11/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.11/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.11/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.11/java.lang.Thread.run(Thread.java:842)
2025-06-17 10:19:15 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-06-17 10:19:15 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 10:19:15 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 10:19:15 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-17 10:19:15 ERROR [restartedMain] o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at dz.a2s.a2spreparation.A2spreparationApplication.main(A2spreparationApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:147)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:516)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSecurityConfig' defined in file [C:\Projects\Spring Boot\sb-api-preparation\target\classes\dz\a2s\a2spreparation\config\WebSecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'customUserDetailsService' defined in file [C:\Projects\Spring Boot\sb-api-preparation\target\classes\dz\a2s\a2spreparation\services\CustomUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userEntityRepository' defined in dz.a2s.a2spreparation.repositories.UserEntityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4414)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService' defined in file [C:\Projects\Spring Boot\sb-api-preparation\target\classes\dz\a2s\a2spreparation\services\CustomUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userEntityRepository' defined in dz.a2s.a2spreparation.repositories.UserEntityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 70 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userEntityRepository' defined in dz.a2s.a2spreparation.repositories.UserEntityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 84 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 98 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'dz.a2s.a2spreparation.entities.views.Stock' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 110 common frames omitted
Caused by: org.hibernate.AnnotationException: Entity 'dz.a2s.a2spreparation.entities.views.Stock' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279)
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215)
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:293)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:228)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:417)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:275)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:318)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 117 common frames omitted
2025-06-17 10:20:45 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-17 10:20:45 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 10068 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-06-17 10:20:45 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 10:20:45 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-06-17 10:20:45 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-17 10:20:45 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.CompanyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.DiMessagesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.ParamsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.StpUserRolesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.UserEntityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeZoneRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.MotifRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvPrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvUsrCodeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpPrepareControleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatistiqueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatsPreparateurRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VentePrlvDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteZoneDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 0 JDBC repository interfaces.
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:20:46 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 10:20:47 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 98 ms. Found 18 JPA repository interfaces.
2025-06-17 10:20:48 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-17 10:20:48 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-17 10:20:48 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 10:20:48 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-06-17 10:20:48 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-17 10:20:48 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3451 ms
2025-06-17 10:20:49 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 10:20:50 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@510f5763
2025-06-17 10:20:50 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 10:20:50 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 10:20:50 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-06-17 10:20:50 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-06-17 10:20:50 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 10:20:50 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 10:20:50 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-06-17 10:20:51 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 10:20:51 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 10:20:51 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 10:20:52 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-06-17 10:20:52 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:20:52 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 10:20:53 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-17 10:20:53 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-17 10:20:55 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-06-17 10:20:56 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-17 10:20:56 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-17 10:20:56 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-17 10:20:56 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 11.709 seconds (process running for 12.359)
2025-06-17 10:49:25 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:49:25 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 10:49:25 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 10:49:29 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-17 10:49:29 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 2608 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-06-17 10:49:29 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 10:49:29 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-06-17 10:49:29 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-17 10:49:29 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.CompanyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.DiMessagesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.ParamsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.StpUserRolesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.UserEntityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeZoneRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.MotifRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvPrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvUsrCodeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpPrepareControleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatistiqueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatsPreparateurRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VentePrlvDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteZoneDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 0 JDBC repository interfaces.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 10:49:30 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 18 JPA repository interfaces.
2025-06-17 10:49:32 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-17 10:49:32 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-17 10:49:32 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 10:49:32 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-06-17 10:49:32 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-17 10:49:32 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3853 ms
2025-06-17 10:49:33 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 10:49:34 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@5682a12b
2025-06-17 10:49:34 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 10:49:34 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 10:49:34 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-06-17 10:49:34 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-06-17 10:49:34 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 10:49:34 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 10:49:34 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-06-17 10:49:35 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 10:49:35 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 10:49:35 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 10:49:36 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-06-17 10:49:36 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:49:36 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 10:49:37 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-17 10:49:38 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-17 10:49:39 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-06-17 10:49:40 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-17 10:49:40 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-17 10:49:40 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-17 10:49:40 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 12.159 seconds (process running for 12.808)
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.0.178
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-16
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-06-17 10:54:43 INFO  [http-nio-8080-exec-1] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-06-17 11:02:22 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 11:02:22 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 11:02:22 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 11:03:22 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-17 11:03:22 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 22140 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-06-17 11:03:22 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 11:03:22 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-06-17 11:03:22 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-17 11:03:22 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.CompanyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.DiMessagesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.ParamsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.StpUserRolesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.UserEntityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeZoneRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.MotifRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvPrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvUsrCodeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpPrepareControleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatistiqueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatsPreparateurRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VentePrlvDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteZoneDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85 ms. Found 0 JDBC repository interfaces.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 11:03:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 18 JPA repository interfaces.
2025-06-17 11:03:25 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-17 11:03:25 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-17 11:03:25 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 11:03:25 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-06-17 11:03:26 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-17 11:03:26 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3729 ms
2025-06-17 11:03:26 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 11:03:27 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@6406bbb2
2025-06-17 11:03:27 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 11:03:27 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 11:03:27 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-06-17 11:03:27 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-06-17 11:03:27 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 11:03:27 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 11:03:27 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-06-17 11:03:28 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 11:03:28 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 11:03:28 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 11:03:29 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-06-17 11:03:29 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 11:03:30 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 11:03:30 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-17 11:03:31 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-17 11:03:32 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-06-17 11:03:34 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-17 11:03:34 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-17 11:03:34 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-17 11:03:34 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 12.356 seconds (process running for 12.803)
2025-06-17 11:53:03 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 11:53:03 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 11:53:03 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 11:53:08 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-17 11:53:08 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 22908 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-06-17 11:53:08 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 11:53:08 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-06-17 11:53:08 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-17 11:53:08 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.CompanyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.DiMessagesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.ParamsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.StpUserRolesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.UserEntityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeZoneRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.MotifRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvPrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvUsrCodeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpPrepareControleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatistiqueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatsPreparateurRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StockRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VentePrlvDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteZoneDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93 ms. Found 0 JDBC repository interfaces.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 11:53:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 103 ms. Found 19 JPA repository interfaces.
2025-06-17 11:53:12 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-17 11:53:12 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-17 11:53:12 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 11:53:12 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-06-17 11:53:12 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-17 11:53:12 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3878 ms
2025-06-17 11:53:13 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 11:53:14 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@2cd6d7af
2025-06-17 11:53:14 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 11:53:14 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 11:53:14 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-06-17 11:53:14 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-06-17 11:53:14 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 11:53:14 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 11:53:15 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-06-17 11:53:15 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 11:53:16 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 11:53:16 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 11:53:18 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-06-17 11:53:18 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 11:53:19 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 11:53:20 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-17 11:53:21 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-17 11:53:24 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-06-17 11:53:27 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-17 11:53:27 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-17 11:53:27 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-17 11:53:27 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 19.371 seconds (process running for 19.998)
2025-06-17 11:55:11 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 11:55:11 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 11:55:11 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 11:55:55 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-17 11:55:55 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 19480 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-06-17 11:55:55 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 11:55:55 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-06-17 11:55:55 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-17 11:55:55 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.CompanyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.DiMessagesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.ParamsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.StpUserRolesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.UserEntityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeZoneRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.MotifRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvPrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvUsrCodeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpPrepareControleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatistiqueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatsPreparateurRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StockRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VentePrlvDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteZoneDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 103 ms. Found 0 JDBC repository interfaces.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 11:55:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 19 JPA repository interfaces.
2025-06-17 11:55:59 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-17 11:55:59 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-17 11:55:59 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 11:55:59 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-06-17 11:55:59 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-17 11:55:59 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4212 ms
2025-06-17 11:56:00 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 11:56:01 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@6190548f
2025-06-17 11:56:01 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 11:56:01 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 11:56:01 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-06-17 11:56:01 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-06-17 11:56:01 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 11:56:01 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 11:56:01 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-06-17 11:56:02 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 11:56:02 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 11:56:02 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 11:56:03 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-06-17 11:56:03 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 11:56:04 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 11:56:05 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-17 11:56:05 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-17 11:56:07 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-06-17 11:56:09 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-17 11:56:09 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-17 11:56:09 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-17 11:56:09 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 14.994 seconds (process running for 15.606)
2025-06-17 12:32:54 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 12:32:54 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 12:32:54 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 12:32:58 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-17 12:32:58 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 21000 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-06-17 12:32:58 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 12:32:58 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-06-17 12:32:58 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-17 12:32:58 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.CompanyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.DiMessagesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.ParamsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.StpUserRolesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.UserEntityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeZoneRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.MotifRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvPrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvUsrCodeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpPrepareControleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatistiqueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatsPreparateurRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StockRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VentePrlvDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteZoneDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 109 ms. Found 0 JDBC repository interfaces.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 12:33:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 19 JPA repository interfaces.
2025-06-17 12:33:02 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-17 12:33:02 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-17 12:33:02 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 12:33:02 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-06-17 12:33:02 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-17 12:33:02 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4128 ms
2025-06-17 12:33:03 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 12:33:04 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@a1a6fb0
2025-06-17 12:33:04 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 12:33:04 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 12:33:04 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-06-17 12:33:04 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-06-17 12:33:04 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 12:33:04 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 12:33:04 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-06-17 12:33:05 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 12:33:05 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 12:33:05 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 12:33:06 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-06-17 12:33:06 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 12:33:07 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 12:33:07 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-17 12:33:08 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-17 12:33:09 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-06-17 12:33:10 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-17 12:33:11 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-17 12:33:11 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-17 12:33:11 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 13.424 seconds (process running for 14.05)
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId s.benmammar : 1
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:s.benmammar
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:s.benmammar
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is s.benmammar
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@6f6cf90f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@6f6cf90f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 12:34:11 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 12:34:12 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 12:34:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 12:34:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 12:34:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 127.0.0.1
2025-06-17 12:34:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 12:35:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 12:35:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 12:35:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 127.0.0.1
2025-06-17 12:35:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 12:35:01 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 12:35:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 12:35:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 12:35:01 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 12:35:01 INFO  [http-nio-8080-exec-3] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleException | Args | errorMessage : Required request parameter 'page' for method parameter type Integer is not present
2025-06-17 12:35:01 WARN  [http-nio-8080-exec-3] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'page' for method parameter type Integer is not present]
2025-06-17 12:35:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 12:35:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 12:35:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 127.0.0.1
2025-06-17 12:35:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 12:35:29 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 12:35:29 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 12:35:29 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 12:35:29 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 12:35:29 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional.empty
2025-06-17 12:35:30 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 12:35:30 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 12:35:30 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 12:35:30 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 12:35:30 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 13:47:57 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h11m53s452ms77µs200ns).
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 127.0.0.1
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[ab]
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=ab
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=313
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 14:20:22 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 127.0.0.1
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional.empty
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 14:20:39 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 14:29:35 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 14:29:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 14:29:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 14:29:39 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-17 14:29:39 INFO  [restartedMain] d.a.a.A2spreparationApplication - Starting A2spreparationApplication using Java 17.0.11 with PID 22272 (C:\Projects\Spring Boot\sb-api-preparation\target\classes started by Mohamed in C:\Projects\Spring Boot\sb-api-preparation)
2025-06-17 14:29:39 INFO  [restartedMain] d.a.a.A2spreparationApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 14:29:39 INFO  [restartedMain] o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\Mohamed\.m2\repository\com\oracle\database\jdbc\ojdbc8\23.2.0.0\ojdbc8-23.2.0.0.jar referenced one or more files that do not exist: file:/C:/Users/Mohamed/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.2.0.0/oraclepki.jar
2025-06-17 14:29:39 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-17 14:29:39 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.CompanyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.DiMessagesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.ParamsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.StpUserRolesRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.UserEntityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.CommandeZoneRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.MotifRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvPrepContRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpCdePrlvUsrCodeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.PrpPrepareControleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatistiqueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StatsPreparateurRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.StockRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VentePrlvDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface dz.a2s.a2spreparation.repositories.views.VenteZoneDetailsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 0 JDBC repository interfaces.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 14:29:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 150 ms. Found 19 JPA repository interfaces.
2025-06-17 14:29:43 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-17 14:29:43 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-17 14:29:43 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 14:29:43 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-06-17 14:29:43 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-17 14:29:43 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4385 ms
2025-06-17 14:29:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 14:29:45 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@1249ef2f
2025-06-17 14:29:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 14:29:45 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 14:29:45 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.0.Final
2025-06-17 14:29:45 INFO  [restartedMain] org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-06-17 14:29:45 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 14:29:45 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 14:29:45 INFO  [restartedMain] SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
2025-06-17 14:29:46 INFO  [restartedMain] o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-06-17 14:29:46 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 14:29:46 WARN  [restartedMain] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): dz.a2s.a2spreparation.entities.keys.StpUserRolesId
2025-06-17 14:29:47 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-06-17 14:29:47 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 14:29:47 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 14:29:48 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-17 14:29:49 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-17 14:29:50 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-06-17 14:29:51 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-17 14:29:51 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-17 14:29:51 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-17 14:29:51 INFO  [restartedMain] d.a.a.A2spreparationApplication - Started A2spreparationApplication in 13.211 seconds (process running for 13.809)
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 127.0.0.1
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional.empty
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 14:30:45 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 14:41:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:41:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.141.77
2025-06-17 14:41:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 14:41:31 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 14:41:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 14:41:34 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-06-17 14:41:34 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-06-17 14:41:34 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:41:34 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:41:34 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:41:34 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@4e20519d, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 14:41:34 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@4e20519d, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 14:41:34 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 14:41:34 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.77
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.77
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 14:41:35 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/statistics - ADRESSE : 192.168.141.77
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/statistiques/general-stats - ADRESSE : 192.168.141.77
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.controllers.UserController - Entering the getStatisticsAuthorization method from the UserController
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Entering the getStatisticsAuthorization method from the AuthorizationService for formCode 489
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation des statistiques 1
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-7] d.a.a.controllers.UserController - Statistics Authorization recieved from the service : AuthorizationDto(code=489, value=1)
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.c.StatistiqueController - Point d'entrée à la méthode getStatistiques du StatistiqueController avec date début et fin 17/06/2025 - 00:00 - 17/06/2025 - 00:00
2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.StatistiqueServiceImpl - Point d'entrée de la méthode getStatistiques de StatistiqueService
2025-06-17 14:41:38 WARN  [http-nio-8080-exec-8] o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1830, SQLState: 22008
2025-06-17 14:41:38 ERROR [http-nio-8080-exec-8] o.h.e.jdbc.spi.SqlExceptionHelper - ORA-01830: Le modèle  du format de date se termine avant la conversion de la chaîne d'entrée entière

2025-06-17 14:41:38 INFO  [http-nio-8080-exec-8] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : JDBC exception executing SQL [select t.VNT_STATUT_PREPARE,
       statut,
       count(*) nbr_de,
       sum(t.nbr_ligne) nbr_ligne,
       sum(t.VNT_TOTAL_TTC) total
  from PRP_STATS_CDES t
  where TRUNC(t.vnt_date) between to_date(?,'DD/MM/RRRR') AND to_date(?,'DD/MM/RRRR')
 group by t.VNT_STATUT_PREPARE, statut
 order by VNT_STATUT_PREPARE
] [ORA-01830: Le modèle  du format de date se termine avant la conversion de la chaîne d'entrée entière
] [n/a]; SQL [n/a]
2025-06-17 14:41:38 WARN  [http-nio-8080-exec-8] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: JDBC exception executing SQL [select t.VNT_STATUT_PREPARE,<EOL>       statut,<EOL>       count(*) nbr_de,<EOL>       sum(t.nbr_ligne) nbr_ligne,<EOL>       sum(t.VNT_TOTAL_TTC) total<EOL>  from PRP_STATS_CDES t<EOL>  where TRUNC(t.vnt_date) between to_date(?,'DD/MM/RRRR') AND to_date(?,'DD/MM/RRRR')<EOL> group by t.VNT_STATUT_PREPARE, statut<EOL> order by VNT_STATUT_PREPARE<EOL>] [ORA-01830: Le modèle  du format de date se termine avant la conversion de la chaîne d'entrée entière<EOL>] [n/a]; SQL [n/a]]
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/statistiques/stats-par-preparateur - ADRESSE : 192.168.141.77
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.c.StatistiqueController - Point d'entrée à la méthode getStatistiquesParPreparateur du StatistiqueController avec date début et fin 17/06/2025 - 00:00 - 17/06/2025 - 00:00
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.StatistiqueServiceImpl - Point d'entrée de la méthode getStatistiquesParPreparateur de StatistiqueService
2025-06-17 14:41:39 WARN  [http-nio-8080-exec-9] o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1830, SQLState: 22008
2025-06-17 14:41:39 ERROR [http-nio-8080-exec-9] o.h.e.jdbc.spi.SqlExceptionHelper - ORA-01830: Le modèle  du format de date se termine avant la conversion de la chaîne d'entrée entière

2025-06-17 14:41:39 INFO  [http-nio-8080-exec-9] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : JDBC exception executing SQL [SELECT ROW_NUMBER() OVER (ORDER BY t.VNT_STATUT_PREPARE) AS row_id,
       t.VNT_STATUT_PREPARE,
       statut,
       t.Preparateur,
       count(*) nbr_de,
       sum(t.nbr_ligne) nbr_ligne,
       sum(t.VNT_TOTAL_TTC) total
  from PRP_STATS_CDES t
  where (TRUNC(t.vnt_date) between to_date(?,'DD/MM/RRRR') AND to_date(?,'DD/MM/RRRR')) AND (t.Preparateur is not null)
 group by t.VNT_STATUT_PREPARE, statut,t.Preparateur
 order by VNT_STATUT_PREPARE
] [ORA-01830: Le modèle  du format de date se termine avant la conversion de la chaîne d'entrée entière
] [n/a]; SQL [n/a]
2025-06-17 14:41:39 WARN  [http-nio-8080-exec-9] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: JDBC exception executing SQL [SELECT ROW_NUMBER() OVER (ORDER BY t.VNT_STATUT_PREPARE) AS row_id,<EOL>       t.VNT_STATUT_PREPARE,<EOL>       statut,<EOL>       t.Preparateur,<EOL>       count(*) nbr_de,<EOL>       sum(t.nbr_ligne) nbr_ligne,<EOL>       sum(t.VNT_TOTAL_TTC) total<EOL>  from PRP_STATS_CDES t<EOL>  where (TRUNC(t.vnt_date) between to_date(?,'DD/MM/RRRR') AND to_date(?,'DD/MM/RRRR')) AND (t.Preparateur is not null)<EOL> group by t.VNT_STATUT_PREPARE, statut,t.Preparateur<EOL> order by VNT_STATUT_PREPARE<EOL>] [ORA-01830: Le modèle  du format de date se termine avant la conversion de la chaîne d'entrée entière<EOL>] [n/a]; SQL [n/a]]
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/statistiques/stats-par-controleur - ADRESSE : 192.168.141.77
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.c.StatistiqueController - Point d'entrée à la méthode getStatistiquesParControleur du StatistiqueController avec date début et fin 17/06/2025 - 00:00 - 17/06/2025 - 00:00
2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.StatistiqueServiceImpl - Point d'entrée de la méthode getStatistiquesParControleur de StatistiqueService
2025-06-17 14:41:39 WARN  [http-nio-8080-exec-10] o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1830, SQLState: 22008
2025-06-17 14:41:39 ERROR [http-nio-8080-exec-10] o.h.e.jdbc.spi.SqlExceptionHelper - ORA-01830: Le modèle  du format de date se termine avant la conversion de la chaîne d'entrée entière

2025-06-17 14:41:39 INFO  [http-nio-8080-exec-10] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleRuntimeException | Args | errorMessage : JDBC exception executing SQL [        SELECT ROW_NUMBER() OVER (ORDER BY t.VNT_STATUT_PREPARE) AS row_id,
           t.VNT_STATUT_PREPARE,
           statut,
           t.Controleur1 Preparateur,
           count(*) nbr_de,
           sum(t.nbr_ligne) nbr_ligne,
           sum(t.VNT_TOTAL_TTC) total
      from PRP_STATS_CDES t
      where (TRUNC(t.vnt_date) between to_date(?,'DD/MM/RRRR') AND to_date(?,'DD/MM/RRRR')) AND (t.Preparateur is not null)
     group by t.VNT_STATUT_PREPARE, statut,t.Controleur1
     order by VNT_STATUT_PREPARE
] [ORA-01830: Le modèle  du format de date se termine avant la conversion de la chaîne d'entrée entière
] [n/a]; SQL [n/a]
2025-06-17 14:41:39 WARN  [http-nio-8080-exec-10] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: JDBC exception executing SQL [        SELECT ROW_NUMBER() OVER (ORDER BY t.VNT_STATUT_PREPARE) AS row_id,<EOL>           t.VNT_STATUT_PREPARE,<EOL>           statut,<EOL>           t.Controleur1 Preparateur,<EOL>           count(*) nbr_de,<EOL>           sum(t.nbr_ligne) nbr_ligne,<EOL>           sum(t.VNT_TOTAL_TTC) total<EOL>      from PRP_STATS_CDES t<EOL>      where (TRUNC(t.vnt_date) between to_date(?,'DD/MM/RRRR') AND to_date(?,'DD/MM/RRRR')) AND (t.Preparateur is not null)<EOL>     group by t.VNT_STATUT_PREPARE, statut,t.Controleur1<EOL>     order by VNT_STATUT_PREPARE<EOL>] [ORA-01830: Le modèle  du format de date se termine avant la conversion de la chaîne d'entrée entière<EOL>] [n/a]; SQL [n/a]]
2025-06-17 14:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.141.77
2025-06-17 14:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:42:44 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 14:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 14:42:44 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 14:42:49 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-06-17 14:42:49 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-06-17 14:42:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:42:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:42:49 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:42:49 INFO  [http-nio-8080-exec-2] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@693502d2, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 14:42:49 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@693502d2, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 14:42:49 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 14:42:49 INFO  [http-nio-8080-exec-2] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.77
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.77
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 14:42:50 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/preparation - ADRESSE : 192.168.141.77
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.controllers.UserController - Entering the getPreparationAuthorization method from the UserController
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Entering the getPreparationAuthorization method from the AuthorizationService for formCode 481
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation de préparation 1
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-5] d.a.a.controllers.UserController - Preparation Authorization recieved from the service : AuthorizationDto(code=481, value=1)
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.141.77
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.141.77
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 14:43:03 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 14:44:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:44:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:44:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.141.184
2025-06-17 14:44:22 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:44:22 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 14:44:22 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 14:44:22 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 14:44:26 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-06-17 14:44:26 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-06-17 14:44:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-06-17 14:44:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:44:26 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-06-17 14:44:26 INFO  [http-nio-8080-exec-1] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@56c2216f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 14:44:26 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@56c2216f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 14:44:26 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 14:44:26 INFO  [http-nio-8080-exec-1] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.184
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.184
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 14:44:28 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-17]
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-17
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-17]
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-17
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-17]
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-06-17 14:45:23 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-17]
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-16]
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-16
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-16]
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-16]
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-16
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=0
2025-06-17 14:45:28 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-16]
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-09]
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-09
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-09]
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-09
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=10
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=10
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-09]
2025-06-17 14:45:33 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-09]
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/commandes/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - | Entry | CommandeController.getCommandesZone | Args | date : Optional[2025-06-09]
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - | Entry | CommandeService.getControlledCommandesZone | Args | date : 2025-06-09
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Company ID fetched from the service 1
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CommandeServiceImpl - Fetched the controlled orders from the repo | commandes.size=10
2025-06-17 14:45:44 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CommandeController - Fetched the controlled commandes from the service | commandes.size=Optional[2025-06-09]
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.77
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.77
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.77
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.77
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 14:56:19 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.77
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.77
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 14:56:53 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.184
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.184
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 14:57:55 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.141.184
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-17
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-17
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/control - ADRESSE : 192.168.141.184
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.controllers.UserController - Entering the getControlAuthorization method from the UserController
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Entering the getControlAuthorization method from the AuthorizationService for formCode 482
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation du contrôle 1
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-7] d.a.a.controllers.UserController - Control Authorization recieved from the service : AuthorizationDto(code=482, value=1)
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-17
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/controle/commandes-zone - ADRESSE : 192.168.141.184
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CheckingController - Entering the getAllPreparedCommandesZone method from the CheckingController with date 2025-06-17
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Entering the getAllPreparedCommandesZone method from the CheckingService with date 2025-06-17
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Company ID fetched from the service 1
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Utilisateur ID fetched from the service 80
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CheckingServiceImpl - Fetched the commande to check from the repo with length 0
2025-06-17 14:58:25 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CheckingController - Fetched the commandes par zone from the service with length 2025-06-17
2025-06-17 15:51:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 15:51:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 15:51:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks$page=1&size=10&search= - ADRESSE : 192.168.141.77
2025-06-17 15:51:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 15:51:54 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 15:51:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 15:51:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 15:51:54 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 15:51:54 INFO  [http-nio-8080-exec-2] d.a.a.e.GlobalExceptionHandler - | Entry | GlobalExceptionHandler.handleException | Args | errorMessage : No static resource api/stocks$page=1&size=10&search=.
2025-06-17 15:51:54 WARN  [http-nio-8080-exec-2] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/stocks$page=1&size=10&search=.]
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 15:53:12 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 15:53:13 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 15:53:13 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 15:53:13 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 15:53:13 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 16:02:34 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 16:03:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 16:04:01 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/preparation - ADRESSE : 192.168.141.77
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.controllers.UserController - Entering the getPreparationAuthorization method from the UserController
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Entering the getPreparationAuthorization method from the AuthorizationService for formCode 481
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation de préparation 1
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-6] d.a.a.controllers.UserController - Preparation Authorization recieved from the service : AuthorizationDto(code=481, value=1)
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.141.77
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.141.77
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-10] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 16:04:18 INFO  [http-nio-8080-exec-8] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.141.77
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-16
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-06-17 16:04:22 INFO  [http-nio-8080-exec-9] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.184
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.184
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 16:04:47 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 16:04:50 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/user-data/authorizations/preparation - ADRESSE : 192.168.141.184
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.controllers.UserController - Entering the getPreparationAuthorization method from the UserController
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Entering the getPreparationAuthorization method from the AuthorizationService for formCode 481
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.s.i.AuthorizationServiceImpl - Valeur de retour de la requête relative à l'autorisation de préparation 1
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-3] d.a.a.controllers.UserController - Preparation Authorization recieved from the service : AuthorizationDto(code=481, value=1)
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-7] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-17
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 0
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 0
2025-06-17 16:05:11 INFO  [http-nio-8080-exec-5] d.a.a.c.AffectationController - Data fetched from the service length = 0
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/affectation/commandes-zones - ADRESSE : 192.168.141.184
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Entering the getListeCmdPrpZone from the AffectationController
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Fetching liste des commandes from the service
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Point d'entrée de la méthode getListCmdZones du AffectationService avec date 2025-06-16
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la companyId : 1
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Fetching the current user id to filter the orders 159
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Récupération de la liste des commandes par zone à partir du repo
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Commandes récupérées du repo avec size : 4
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage des entités vers les DTOs
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.AffectationServiceImpl - Mappage terminé avec size : 4
2025-06-17 16:05:18 INFO  [http-nio-8080-exec-6] d.a.a.c.AffectationController - Data fetched from the service length = 4
2025-06-17 16:59:04 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=32m47s947ms582µs100ns).
2025-06-17 17:00:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:00:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:00:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.0.178
2025-06-17 17:00:46 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:00:46 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 17:00:46 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 17:00:46 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 17:00:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-06-17 17:00:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-06-17 17:00:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:00:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:00:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:00:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@11ca67fe, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 17:00:49 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@11ca67fe, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 17:00:49 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 17:00:49 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.178
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.178
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 17:00:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 17:01:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:01:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:01:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.0.178
2025-06-17 17:01:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:01:19 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 17:01:19 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 17:01:19 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 17:01:24 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-06-17 17:01:24 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-06-17 17:01:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:01:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:01:24 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:01:24 INFO  [http-nio-8080-exec-6] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@19be0e6, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 17:01:24 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@19be0e6, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 17:01:24 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 17:01:24 INFO  [http-nio-8080-exec-6] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.178
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.178
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 17:01:25 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:01:30 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.178
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.178
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 17:38:32 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:38:43 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:42:13 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:42:56 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:42:57 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:42:57 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:42:57 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:42:57 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:42:57 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:42:57 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:44:27 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:44:28 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:44:28 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:44:28 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:44:28 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:45:08 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:47:48 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:47:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:49:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:49:22 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.0.189
2025-06-17 17:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:51:24 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 17:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 17:51:24 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 17:51:38 INFO  [http-nio-8080-exec-9] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-06-17 17:51:38 INFO  [http-nio-8080-exec-9] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-06-17 17:51:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-06-17 17:51:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:51:38 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-06-17 17:51:38 INFO  [http-nio-8080-exec-9] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@6287bc57, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 17:51:38 INFO  [http-nio-8080-exec-9] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@6287bc57, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 17:51:38 INFO  [http-nio-8080-exec-9] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 17:51:38 INFO  [http-nio-8080-exec-9] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.189
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.189
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 17:51:39 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:51:49 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:54:07 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:54:13 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:54:15 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:54:19 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:55:45 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.178
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.178
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.178
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.178
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-1] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 17:56:08 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:56:12 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.178
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.178
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 17:56:20 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:56:23 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:56:25 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:56:27 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:56:29 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:56:32 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:57:17 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:58:02 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 17:58:55 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:00:04 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:00:46 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:00:51 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:00:56 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:01:10 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:01:16 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:01:46 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:02:10 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:02:14 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:02:15 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:02:18 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:02:23 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=6, size=10, search=Optional[]
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=6, size=10, search=
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:02:25 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.189
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.189
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 18:02:53 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:02:59 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:03:08 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:03:10 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:03:17 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:03:18 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:03:27 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=6, size=10, search=Optional[]
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=6, size=10, search=
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:03:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=7, size=10, search=Optional[]
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=7, size=10, search=
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:03:29 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=8, size=10, search=Optional[]
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=8, size=10, search=
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:03:31 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=9, size=10, search=Optional[]
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=9, size=10, search=
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:03:37 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:05:06 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:05:14 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:05:15 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=6, size=10, search=Optional[]
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=6, size=10, search=
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=8, size=10, search=Optional[]
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=8, size=10, search=
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=7, size=10, search=Optional[]
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=7, size=10, search=
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:05:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=7, size=10, search=Optional[]
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=7, size=10, search=
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:07:19 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=8, size=10, search=Optional[]
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=8, size=10, search=
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:08:22 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:08:25 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:08:30 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:08:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:08:43 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=6, size=10, search=Optional[]
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=6, size=10, search=
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:08:44 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:11:00 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:11:02 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:11:03 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.189
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.189
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 18:11:48 INFO  [http-nio-8080-exec-4] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:12:10 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:12:19 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:12:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:12:36 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:12:37 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:12:55 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:12:57 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:12:58 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:13:15 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:13:53 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:13:59 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:14:02 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:14:03 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:15:27 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:20:51 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:20:56 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:21:00 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:21:04 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:21:27 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:21:29 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:21:56 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:22:00 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:22:07 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.0.189
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.0.189
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-5] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 18:22:31 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:22:37 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:22:44 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:22:49 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:22:55 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.189
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:23:00 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:23:50 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:23:52 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:23:54 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:23:56 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:24:07 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:24:09 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:24:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:24:13 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:28:56 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:29:02 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:29:08 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.0.178
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:29:09 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:33:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:33:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:33:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.141.77
2025-06-17 18:33:31 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:33:31 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 18:33:31 INFO  [http-nio-8080-exec-9] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 18:33:31 INFO  [http-nio-8080-exec-9] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 18:33:35 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.BENMAMMAR : 1
2025-06-17 18:33:35 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.BENMAMMAR
2025-06-17 18:33:35 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:33:35 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:33:35 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:33:35 INFO  [http-nio-8080-exec-4] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@286e7b4f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 18:33:35 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@286e7b4f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 18:33:35 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 18:33:35 INFO  [http-nio-8080-exec-4] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.77
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-2] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.77
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 18:33:36 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:33:57 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:34:02 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:34:07 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=6, size=10, search=Optional[]
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=6, size=10, search=
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:34:16 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=7, size=10, search=Optional[]
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=7, size=10, search=
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:34:22 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:35:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:35:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:35:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /auth/companies - ADRESSE : 192.168.141.184
2025-06-17 18:35:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:35:41 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - findAllCompanies from the CompanyController
2025-06-17 18:35:41 INFO  [http-nio-8080-exec-3] d.a.a.s.impl.CompanyServiceImpl - findAll method from companyService
2025-06-17 18:35:41 INFO  [http-nio-8080-exec-3] d.a.a.controllers.CompanyController - Companies fetched from the service [Company(id=1, label=SARL ADVANCED SOFTWARE SOLUTION, location=ALGER), Company(id=2, label=SARL ORAN, location=ORAN), Company(id=3, label=SETIF, location=SETIF), Company(id=4, label=COSMETIQUE, location=ALGER), Company(id=5, label=PARAPHARM, location=ALGER)]
2025-06-17 18:35:49 INFO  [http-nio-8080-exec-5] d.a.a.controllers.AuthController - Entering login method from AuthController with userCode and companyId S.benmammar : 1
2025-06-17 18:35:49 INFO  [http-nio-8080-exec-5] d.a.a.controllers.AuthController - Getting the custom username from the loginDto inside the authController 1:S.benmammar
2025-06-17 18:35:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.benmammar
2025-06-17 18:35:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:35:49 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.benmammar
2025-06-17 18:35:49 INFO  [http-nio-8080-exec-5] d.a.a.controllers.AuthController - Authentication object created UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@7a3e7a77, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 18:35:49 INFO  [http-nio-8080-exec-5] d.a.a.security.JWTGenerator - Generating token with authentication object UsernamePasswordAuthenticationToken [Principal=dz.a2s.a2spreparation.security.AppUserDetails@7a3e7a77, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]
2025-06-17 18:35:49 INFO  [http-nio-8080-exec-5] d.a.a.security.JWTGenerator - Generating token for S.BENMAMMAR
2025-06-17 18:35:49 INFO  [http-nio-8080-exec-5] d.a.a.security.JWTGenerator - Token generated inside JWTGenerator
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.184
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-7] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.184
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 18:35:50 INFO  [http-nio-8080-exec-6] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:35:54 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:36:03 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:36:04 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:36:11 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:36:12 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:38:43 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:38:48 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:38:50 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.77
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.77
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 18:39:07 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:39:09 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:39:10 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:39:14 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:39:24 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:39:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:39:37 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:39:40 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:40:08 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:40:11 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:40:34 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:40:39 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:40:41 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:40:43 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:42:13 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:42:18 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:42:21 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/method - ADRESSE : 192.168.141.184
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/company/format-impression - ADRESSE : 192.168.141.184
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Entering getMethod method from CompanyController
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - companyId=1
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.s.impl.CompanyServiceImpl - Fetched the preparation method from the repo | method=Optional[2]
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.controllers.CompanyController - | Entry | CompanyController.getFormatImpression
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - | Entry | CompanyService.getFormatImpression
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-10] d.a.a.controllers.CompanyController - Returning the value of the method 2
2025-06-17 18:42:37 INFO  [http-nio-8080-exec-8] d.a.a.s.impl.CompanyServiceImpl - Fetched the format impression from the repo | formatImpression=Optional[1]
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:42:44 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:42:53 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=3, size=10, search=Optional[]
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=3, size=10, search=
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:43:01 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:43:07 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:43:11 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:43:12 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:43:12 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:43:12 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:43:12 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=6, size=10, search=Optional[]
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=6, size=10, search=
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:43:25 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=7, size=10, search=Optional[]
2025-06-17 18:43:27 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=7, size=10, search=
2025-06-17 18:43:28 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:43:28 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:43:28 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:43:28 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=8, size=10, search=Optional[]
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=8, size=10, search=
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:43:38 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=9, size=10, search=Optional[]
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=9, size=10, search=
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:43:39 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=10, size=10, search=Optional[]
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=10, size=10, search=
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:43:47 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=11, size=10, search=Optional[]
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=11, size=10, search=
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:43:49 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=4, size=10, search=Optional[]
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=4, size=10, search=
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:44:09 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=5, size=10, search=Optional[]
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=5, size=10, search=
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:44:13 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=6, size=10, search=Optional[]
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=6, size=10, search=
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:44:16 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=7, size=10, search=Optional[]
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=7, size=10, search=
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:44:18 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=12, size=10, search=Optional[]
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=12, size=10, search=
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:44:22 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=13, size=10, search=Optional[]
2025-06-17 18:44:24 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=13, size=10, search=
2025-06-17 18:44:25 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:44:25 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:44:25 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:44:25 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=14, size=10, search=Optional[]
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=14, size=10, search=
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:44:33 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=15, size=10, search=Optional[]
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=15, size=10, search=
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:44:42 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.184
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=16, size=10, search=Optional[]
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=16, size=10, search=
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:44:44 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:48:16 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[undefined]
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=undefined
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=0
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=0
2025-06-17 18:49:23 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=0
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:49:45 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:49:57 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:12 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[ab]
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=ab
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=313
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:16 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:19 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[de]
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=de
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=1447
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:38 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[den]
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=den
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=49
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:41 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:45 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[parace]
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=parace
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=15
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:49 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[paracetamol]
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=paracetamol
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=13
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:52 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:50:57 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[novo]
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=novo
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=88
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:00 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:03 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[levemir]
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=levemir
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=2
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=2
2025-06-17 18:51:05 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=2
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:19 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[no]
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=no
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=857
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[nov]
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=nov
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=178
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:20 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[novo]
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=novo
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[novor]
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=novor
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=88
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=4
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=4
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=4
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=4
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[novorap]
2025-06-17 18:51:21 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=novorap
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=4
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=4
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=4
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=4
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[novorapid]
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=novorapid
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=4
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=4
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=4
2025-06-17 18:51:22 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=4
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[novorapi]
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=novorapi
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=4
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=4
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=4
2025-06-17 18:51:24 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=4
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:25 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[smectra]
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=smectra
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=0
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=0
2025-06-17 18:51:28 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=0
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[smecta]
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=smecta
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:29 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:31 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[novonordisk]
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=novonordisk
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=0
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=0
2025-06-17 18:51:34 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=0
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[novonordis]
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=novonordis
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=0
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=0
2025-06-17 18:51:35 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=0
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:36 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[nordisk]
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=nordisk
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=0
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=0
2025-06-17 18:51:37 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=0
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:40 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[aventis]
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=aventis
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=78
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:41 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[aventi]
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=aventi
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=78
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:44 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:45 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[sanofi]
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=sanofi
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=78
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:46 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[sanof]
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=sanof
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=78
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:48 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[h]
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=h
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12480
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:50 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[hd]
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=hd
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=2
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=2
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=2
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-6] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=2
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[hdyr]
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=hdyr
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=0
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=0
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=0
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[hdyra]
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=hdyra
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=0
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=0
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=0
2025-06-17 18:51:51 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=0
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[h]
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=h
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12480
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:52 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[hydra]
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=hydra
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=8
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=8
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=8
2025-06-17 18:51:53 INFO  [http-nio-8080-exec-9] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=8
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:51:58 INFO  [http-nio-8080-exec-4] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[proton]
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=proton
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=32
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:52:01 INFO  [http-nio-8080-exec-2] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:52:07 INFO  [http-nio-8080-exec-3] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[]
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:52:12 INFO  [http-nio-8080-exec-5] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[sanofi]
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=sanofi
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=78
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:52:19 INFO  [http-nio-8080-exec-7] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=2, size=10, search=Optional[sanofi]
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=2, size=10, search=sanofi
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=78
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:52:25 INFO  [http-nio-8080-exec-10] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[sanofi]
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=sanofi
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=78
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:52:31 INFO  [http-nio-8080-exec-8] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -  
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter -                     NEW REQUEST - URL : /api/stocks - ADRESSE : 192.168.141.77
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - **********************************************************************************************************************
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.s.JWTAuthenticationFilter - Parsed the username from the token 1:S.BENMAMMAR
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - Entering loadUserByUsername method of UserDetails with 1:S.BENMAMMAR
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The companyId is 1
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.s.CustomUserDetailsService - The userCode is S.BENMAMMAR
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - | Entry | StockController.getAllStocks | Args | page=1, size=10, search=Optional[]
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - | Entry | StockService.getStocks | Args | page=1, size=10, search=
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the stock master projections from the repo | projections.size=10
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Fetched the total records from the projections | totalRecords=12602
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.services.impl.StockServiceImpl - Mapped the projections to stocks | stocks.size=10
2025-06-17 18:52:37 INFO  [http-nio-8080-exec-1] d.a.a.controllers.StockController - Fetched the stocks from the service | stocks.data.size=10
2025-06-17 18:52:50 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 18:52:50 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 18:52:50 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
